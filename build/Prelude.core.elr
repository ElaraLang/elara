module Prelude
{ Prelude.println : String -> IO ()
    = Elara.Prim.elaraPrimitive @(String -> IO ()) "println"
; 
Prelude.toString : forall (a_3 : Type). a_3 -> String
    = Elara.Prim.elaraPrimitive @(a_3 -> String) "toString"
; 
Prelude.* : Int -> Int -> Int
    = Elara.Prim.elaraPrimitive @(Int -> Int -> Int) "*"
; 
Prelude.- : Int -> Int -> Int
    = Elara.Prim.elaraPrimitive @(Int -> Int -> Int) "-"
; 
Prelude.== : forall (a_4 : Type). a_4 -> a_4 -> Bool
    = Elara.Prim.elaraPrimitive @(a_4 -> a_4 -> Bool) "==" }