module Main exposing (..)

import Prelude exposing (..)
import Elara.Prim exposing (..)

def Main.fact : (Elara.Prim.Int -> Elara.Prim.Int)
let Main.fact =
    (\ n_10 -> ((if ((Elara.Prim.(==)  n_10 )  0 )  then 1  else ((Elara.Prim.(*)  n_10 )  (Main.fact  ((Elara.Prim.(-)  n_10 )  1 ) ) ) ) )) 

def Main.main : Elara.Prim.IO ()
let Main.main =
    (Prelude.print  (Main.part1  "1234" ) ) 

let Main.part1 =
    (\ input_11 -> (let chars_12  = ((Elara.Prim.(|>)  (Elara.Prim.stringToList  input_11 ) )  (Prelude.map  Prelude.charToInt ) )  in (Prelude.head  chars_12 )  )) 
