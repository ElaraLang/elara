module Main exposing (..)

import Prelude exposing (..)

def Main.add2 : Integer -> Integer
let Main.add2 =
    (\ x_1 -> (((Prelude.(+) : Integer ->
                               Integer ->
                                 Integer x_1 : Integer) : Integer ->
                                                            Integer 2 : Integer) : Integer)) : Integer ->
                                                                                                 Integer

def Main.main : IO Unit 
let Main.main =
    (Prelude.println : Text ->
                         IO Unit  ((Prelude.toString : forall (a_2 : Type) .
                                                         a_2 ->
                                                           Text @Integer) : Text (Main.add2 : Integer ->
                                                                                                Integer 1 : Integer) : Integer) : Text) : IO Unit

