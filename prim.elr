module Elara.Prim


def undefined : a	
let undefined = elaraPrimitive "undefined"	

def println : String -> IO ()
let println = elaraPrimitive "println"


def (+) : Int -> Int -> Int	
let (+) = elaraPrimitive "+"	

def toString : a -> String
let toString = elaraPrimitive "toString"

def ioBind : IO a -> (a -> IO b) -> IO b	
let ioBind = elaraPrimitive "ioBind"	

infixl 1 >>=	
def (>>=) : IO a -> (a -> IO b) -> IO b	
let (>>=) x y = ioBind x y	
