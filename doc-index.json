[{"display_html":"<a href=\"#v:optional\">optional</a> :: <a href=\"Prelude.html#t:Alternative\" title=\"Prelude\">Alternative</a> f =&gt; f a -&gt; f (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a)","name":"optional","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:optional"},{"display_html":"<a href=\"#v:biList\">biList</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; t a a -&gt; [a]","name":"biList","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:biList"},{"display_html":"<a href=\"#v:biall\">biall</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; (b -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; t a b -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"biall","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:biall"},{"display_html":"<a href=\"#v:biand\">biand</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; t <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"biand","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:biand"},{"display_html":"<a href=\"#v:biany\">biany</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; (b -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; t a b -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"biany","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:biany"},{"display_html":"<a href=\"#v:biasum\">biasum</a> :: (<a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t, <a href=\"Prelude.html#t:Alternative\" title=\"Prelude\">Alternative</a> f) =&gt; t (f a) (f a) -&gt; f a","name":"biasum","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:biasum"},{"display_html":"<a href=\"#v:bielem\">bielem</a> :: (<a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a) =&gt; a -&gt; t a a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"bielem","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bielem"},{"display_html":"<a href=\"#v:bifind\">bifind</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; t a a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"bifind","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bifind"},{"display_html":"<a href=\"#v:bifoldl-39-\">bifoldl'</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; (a -&gt; b -&gt; a) -&gt; (a -&gt; c -&gt; a) -&gt; a -&gt; t b c -&gt; a","name":"bifoldl'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bifoldl-39-"},{"display_html":"<a href=\"#v:bifoldlM\">bifoldlM</a> :: (<a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; (a -&gt; b -&gt; m a) -&gt; (a -&gt; c -&gt; m a) -&gt; a -&gt; t b c -&gt; m a","name":"bifoldlM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bifoldlM"},{"display_html":"<a href=\"#v:bifoldr-39-\">bifoldr'</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; (a -&gt; c -&gt; c) -&gt; (b -&gt; c -&gt; c) -&gt; c -&gt; t a b -&gt; c","name":"bifoldr'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bifoldr-39-"},{"display_html":"<a href=\"#v:bifoldrM\">bifoldrM</a> :: (<a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; (a -&gt; c -&gt; m c) -&gt; (b -&gt; c -&gt; m c) -&gt; c -&gt; t a b -&gt; m c","name":"bifoldrM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bifoldrM"},{"display_html":"<a href=\"#v:bifor_\">bifor_</a> :: (<a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t a b -&gt; (a -&gt; f c) -&gt; (b -&gt; f d) -&gt; f ()","name":"bifor_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bifor_"},{"display_html":"<a href=\"#v:bilength\">bilength</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; t a b -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"bilength","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bilength"},{"display_html":"<a href=\"#v:binull\">binull</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; t a b -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"binull","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:binull"},{"display_html":"<a href=\"#v:bior\">bior</a> :: <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t =&gt; t <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"bior","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bior"},{"display_html":"<a href=\"#v:bisequence_\">bisequence_</a> :: (<a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t (f a) (f b) -&gt; f ()","name":"bisequence_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bisequence_"},{"display_html":"<a href=\"#v:bitraverse_\">bitraverse_</a> :: (<a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; (a -&gt; f c) -&gt; (b -&gt; f d) -&gt; t a b -&gt; f ()","name":"bitraverse_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bitraverse_"},{"display_html":"<a href=\"#v:bifoldMapDefault\">bifoldMapDefault</a> :: (<a href=\"Prelude.html#t:Bitraversable\" title=\"Prelude\">Bitraversable</a> t, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m) =&gt; (a -&gt; m) -&gt; (b -&gt; m) -&gt; t a b -&gt; m","name":"bifoldMapDefault","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bifoldMapDefault"},{"display_html":"<a href=\"#v:bifor\">bifor</a> :: (<a href=\"Prelude.html#t:Bitraversable\" title=\"Prelude\">Bitraversable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t a b -&gt; (a -&gt; f c) -&gt; (b -&gt; f d) -&gt; f (t c d)","name":"bifor","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bifor"},{"display_html":"<a href=\"#v:bimapDefault\">bimapDefault</a> :: <a href=\"Prelude.html#t:Bitraversable\" title=\"Prelude\">Bitraversable</a> t =&gt; (a -&gt; b) -&gt; (c -&gt; d) -&gt; t a c -&gt; t b d","name":"bimapDefault","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bimapDefault"},{"display_html":"<a href=\"#v:bisequence\">bisequence</a> :: (<a href=\"Prelude.html#t:Bitraversable\" title=\"Prelude\">Bitraversable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t (f a) (f b) -&gt; f (t a b)","name":"bisequence","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bisequence"},{"display_html":"<a href=\"#v:-36--60-\">($&lt;)</a> :: <a href=\"Prelude.html#t:Contravariant\" title=\"Prelude\">Contravariant</a> f =&gt; f b -&gt; b -&gt; f a","name":"$<","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-36--60-"},{"display_html":"<a href=\"#v:-62--36--36--60-\">(&gt;$$&lt;)</a> :: <a href=\"Prelude.html#t:Contravariant\" title=\"Prelude\">Contravariant</a> f =&gt; f b -&gt; (a -&gt; b) -&gt; f a","name":">$$<","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-62--36--36--60-"},{"display_html":"<a href=\"#v:-62--36--60-\">(&gt;$&lt;)</a> :: <a href=\"Prelude.html#t:Contravariant\" title=\"Prelude\">Contravariant</a> f =&gt; (a -&gt; b) -&gt; f b -&gt; f a","name":">$<","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-62--36--60-"},{"display_html":"<a href=\"#v:comparisonEquivalence\">comparisonEquivalence</a> :: <a href=\"Prelude.html#t:Comparison\" title=\"Prelude\">Comparison</a> a -&gt; <a href=\"Prelude.html#t:Equivalence\" title=\"Prelude\">Equivalence</a> a","name":"comparisonEquivalence","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:comparisonEquivalence"},{"display_html":"<a href=\"#v:defaultComparison\">defaultComparison</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> a =&gt; <a href=\"Prelude.html#t:Comparison\" title=\"Prelude\">Comparison</a> a","name":"defaultComparison","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:defaultComparison"},{"display_html":"<a href=\"#v:defaultEquivalence\">defaultEquivalence</a> :: <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a =&gt; <a href=\"Prelude.html#t:Equivalence\" title=\"Prelude\">Equivalence</a> a","name":"defaultEquivalence","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:defaultEquivalence"},{"display_html":"<a href=\"#v:phantom\">phantom</a> :: (<a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f, <a href=\"Prelude.html#t:Contravariant\" title=\"Prelude\">Contravariant</a> f) =&gt; f a -&gt; f b","name":"phantom","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:phantom"},{"display_html":"<a href=\"#v:nonEmpty\">nonEmpty</a> :: [a] -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a)","name":"nonEmpty","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:nonEmpty"},{"display_html":"<a href=\"#v:cycle1\">cycle1</a> :: <a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> m =&gt; m -&gt; m","name":"cycle1","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:cycle1"},{"display_html":"<a href=\"#v:mtimesDefault\">mtimesDefault</a> :: (<a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> a) =&gt; b -&gt; a -&gt; a","name":"mtimesDefault","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mtimesDefault"},{"display_html":"<a href=\"#v:fromShort\">fromShort</a> :: <a href=\"Prelude.html#t:ShortByteString\" title=\"Prelude\">ShortByteString</a> -&gt; <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a>","name":"fromShort","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fromShort"},{"display_html":"<a href=\"#v:toShort\">toShort</a> :: <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a> -&gt; <a href=\"Prelude.html#t:ShortByteString\" title=\"Prelude\">ShortByteString</a>","name":"toShort","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:toShort"},{"display_html":"<a href=\"#v:-36--33--33-\">($!!)</a> :: <a href=\"Prelude.html#t:NFData\" title=\"Prelude\">NFData</a> a =&gt; (a -&gt; b) -&gt; a -&gt; b","name":"$!!","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-36--33--33-"},{"display_html":"<a href=\"#v:deepseq\">deepseq</a> :: <a href=\"Prelude.html#t:NFData\" title=\"Prelude\">NFData</a> a =&gt; a -&gt; b -&gt; b","name":"deepseq","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:deepseq"},{"display_html":"<a href=\"#v:force\">force</a> :: <a href=\"Prelude.html#t:NFData\" title=\"Prelude\">NFData</a> a =&gt; a -&gt; a","name":"force","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:force"},{"display_html":"<a href=\"#v:-36-\">($)</a> :: (a -&gt; b) -&gt; a -&gt; b","name":"$","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-36-"},{"display_html":"<a href=\"#v:-36--33-\">($!)</a> :: (a -&gt; b) -&gt; a -&gt; b","name":"$!","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-36--33-"},{"display_html":"<a href=\"#v:-43--43-\">(++)</a> :: [a] -&gt; [a] -&gt; [a]","name":"++","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-43--43-"},{"display_html":"<a href=\"#v:.\">(.)</a> :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c","name":".","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:."},{"display_html":"<a href=\"#v:-60--42--42--62-\">(&lt;**&gt;)</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; f a -&gt; f (a -&gt; b) -&gt; f b","name":"<**>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--42--42--62-"},{"display_html":"<a href=\"#v:-61--60--60-\">(=&lt;&lt;)</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b","name":"=<<","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-61--60--60-"},{"display_html":"<a href=\"#v:absurd\">absurd</a> :: <a href=\"Prelude.html#t:Void\" title=\"Prelude\">Void</a> -&gt; a","name":"absurd","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:absurd"},{"display_html":"<a href=\"#v:asTypeOf\">asTypeOf</a> :: a -&gt; a -&gt; a","name":"asTypeOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:asTypeOf"},{"display_html":"<a href=\"#v:const\">const</a> :: a -&gt; b -&gt; a","name":"const","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:const"},{"display_html":"<a href=\"#v:flip\">flip</a> :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c","name":"flip","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:flip"},{"display_html":"<a href=\"#v:join\">join</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m (m a) -&gt; m a","name":"join","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:join"},{"display_html":"<a href=\"#v:liftA3\">liftA3</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; (a -&gt; b -&gt; c -&gt; d) -&gt; f a -&gt; f b -&gt; f c -&gt; f d","name":"liftA3","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:liftA3"},{"display_html":"<a href=\"#v:map\">map</a> :: (a -&gt; b) -&gt; [a] -&gt; [b]","name":"map","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:map"},{"display_html":"<a href=\"#v:maxInt\">maxInt</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"maxInt","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:maxInt"},{"display_html":"<a href=\"#v:minInt\">minInt</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"minInt","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:minInt"},{"display_html":"<a href=\"#v:ord\">ord</a> :: <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"ord","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:ord"},{"display_html":"<a href=\"#v:otherwise\">otherwise</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"otherwise","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:otherwise"},{"display_html":"<a href=\"#v:vacuous\">vacuous</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; f <a href=\"Prelude.html#t:Void\" title=\"Prelude\">Void</a> -&gt; f a","name":"vacuous","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:vacuous"},{"display_html":"<a href=\"#v:when\">when</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; f () -&gt; f ()","name":"when","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:when"},{"display_html":"<a href=\"#v:toIntegralSized\">toIntegralSized</a> :: (<a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b, <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a, <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> b) =&gt; a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b","name":"toIntegralSized","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:toIntegralSized"},{"display_html":"<a href=\"#v:chr\">chr</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>","name":"chr","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:chr"},{"display_html":"<a href=\"#v:catchSTM\">catchSTM</a> :: <a href=\"Prelude.html#t:Exception\" title=\"Prelude\">Exception</a> e =&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a -&gt; (e -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a) -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a","name":"catchSTM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:catchSTM"},{"display_html":"<a href=\"#v:newTVar\">newTVar</a> :: a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> (<a href=\"Prelude.html#t:TVar\" title=\"Prelude\">TVar</a> a)","name":"newTVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newTVar"},{"display_html":"<a href=\"#v:readTVar\">readTVar</a> :: <a href=\"Prelude.html#t:TVar\" title=\"Prelude\">TVar</a> a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a","name":"readTVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readTVar"},{"display_html":"<a href=\"#v:throwSTM\">throwSTM</a> :: <a href=\"Prelude.html#t:Exception\" title=\"Prelude\">Exception</a> e =&gt; e -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a","name":"throwSTM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:throwSTM"},{"display_html":"<a href=\"#v:writeTVar\">writeTVar</a> :: <a href=\"Prelude.html#t:TVar\" title=\"Prelude\">TVar</a> a -&gt; a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> ()","name":"writeTVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:writeTVar"},{"display_html":"<a href=\"#v:-60--60--60-\">(&lt;&lt;&lt;)</a> :: <span class=\"keyword\">forall</span> {k} cat (b :: k) (c :: k) (a :: k). <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Control-Category.html#t:Category\" title=\"Control.Category\">Category</a> cat =&gt; cat b c -&gt; cat a b -&gt; cat a c","name":"<<<","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--60--60-"},{"display_html":"<a href=\"#v:-62--62--62-\">(&gt;&gt;&gt;)</a> :: <span class=\"keyword\">forall</span> {k} cat (a :: k) (b :: k) (c :: k). <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Control-Category.html#t:Category\" title=\"Control.Category\">Category</a> cat =&gt; cat a b -&gt; cat b c -&gt; cat a c","name":">>>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-62--62--62-"},{"display_html":"<a href=\"#v:-60--36--33--62-\">(&lt;$!&gt;)</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; (a -&gt; b) -&gt; m a -&gt; m b","name":"<$!>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--36--33--62-"},{"display_html":"<a href=\"#v:-60--61--60-\">(&lt;=&lt;)</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; (b -&gt; m c) -&gt; (a -&gt; m b) -&gt; a -&gt; m c","name":"<=<","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--61--60-"},{"display_html":"<a href=\"#v:-62--61--62-\">(&gt;=&gt;)</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; (a -&gt; m b) -&gt; (b -&gt; m c) -&gt; a -&gt; m c","name":">=>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-62--61--62-"},{"display_html":"<a href=\"#v:filterM\">filterM</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; (a -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; [a] -&gt; m [a]","name":"filterM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:filterM"},{"display_html":"<a href=\"#v:forever\">forever</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; f a -&gt; f b","name":"forever","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:forever"},{"display_html":"<a href=\"#v:guard\">guard</a> :: <a href=\"Prelude.html#t:Alternative\" title=\"Prelude\">Alternative</a> f =&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; f ()","name":"guard","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:guard"},{"display_html":"<a href=\"#v:mapAndUnzipM\">mapAndUnzipM</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; (a -&gt; m (b, c)) -&gt; [a] -&gt; m ([b], [c])","name":"mapAndUnzipM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mapAndUnzipM"},{"display_html":"<a href=\"#v:mfilter\">mfilter</a> :: <a href=\"Prelude.html#t:MonadPlus\" title=\"Prelude\">MonadPlus</a> m =&gt; (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; m a -&gt; m a","name":"mfilter","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mfilter"},{"display_html":"<a href=\"#v:replicateM\">replicateM</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; m a -&gt; m [a]","name":"replicateM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:replicateM"},{"display_html":"<a href=\"#v:replicateM_\">replicateM_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; m a -&gt; m ()","name":"replicateM_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:replicateM_"},{"display_html":"<a href=\"#v:unless\">unless</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; f () -&gt; f ()","name":"unless","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:unless"},{"display_html":"<a href=\"#v:zipWithM\">zipWithM</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; (a -&gt; b -&gt; m c) -&gt; [a] -&gt; [b] -&gt; m [c]","name":"zipWithM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:zipWithM"},{"display_html":"<a href=\"#v:zipWithM_\">zipWithM_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; (a -&gt; b -&gt; m c) -&gt; [a] -&gt; [b] -&gt; m ()","name":"zipWithM_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:zipWithM_"},{"display_html":"<a href=\"#v:bool\">bool</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; a","name":"bool","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bool"},{"display_html":"<a href=\"#v:either\">either</a> :: (a -&gt; c) -&gt; (b -&gt; c) -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b -&gt; c","name":"either","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:either"},{"display_html":"<a href=\"#v:fromLeft\">fromLeft</a> :: a -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b -&gt; a","name":"fromLeft","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fromLeft"},{"display_html":"<a href=\"#v:fromRight\">fromRight</a> :: b -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b -&gt; b","name":"fromRight","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fromRight"},{"display_html":"<a href=\"#v:isLeft\">isLeft</a> :: <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isLeft","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:isLeft"},{"display_html":"<a href=\"#v:isRight\">isRight</a> :: <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isRight","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:isRight"},{"display_html":"<a href=\"#v:lefts\">lefts</a> :: [<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b] -&gt; [a]","name":"lefts","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:lefts"},{"display_html":"<a href=\"#v:partitionEithers\">partitionEithers</a> :: [<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b] -&gt; ([a], [b])","name":"partitionEithers","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:partitionEithers"},{"display_html":"<a href=\"#v:rights\">rights</a> :: [<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b] -&gt; [b]","name":"rights","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:rights"},{"display_html":"<a href=\"#v:all\">all</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t =&gt; (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; t a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"all","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:all"},{"display_html":"<a href=\"#v:and\">and</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t =&gt; t <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"and","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:and"},{"display_html":"<a href=\"#v:any\">any</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t =&gt; (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; t a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"any","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:any"},{"display_html":"<a href=\"#v:asum\">asum</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"Prelude.html#t:Alternative\" title=\"Prelude\">Alternative</a> f) =&gt; t (f a) -&gt; f a","name":"asum","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:asum"},{"display_html":"<a href=\"#v:concat\">concat</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t =&gt; t [a] -&gt; [a]","name":"concat","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:concat"},{"display_html":"<a href=\"#v:concatMap\">concatMap</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t =&gt; (a -&gt; [b]) -&gt; t a -&gt; [b]","name":"concatMap","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:concatMap"},{"display_html":"<a href=\"#v:find\">find</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t =&gt; (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; t a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"find","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:find"},{"display_html":"<a href=\"#v:foldlM\">foldlM</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m b","name":"foldlM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:foldlM"},{"display_html":"<a href=\"#v:forM_\">forM_</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; t a -&gt; (a -&gt; m b) -&gt; m ()","name":"forM_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:forM_"},{"display_html":"<a href=\"#v:for_\">for_</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t a -&gt; (a -&gt; f b) -&gt; f ()","name":"for_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:for_"},{"display_html":"<a href=\"#v:mapM_\">mapM_</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; (a -&gt; m b) -&gt; t a -&gt; m ()","name":"mapM_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mapM_"},{"display_html":"<a href=\"#v:or\">or</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t =&gt; t <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"or","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:or"},{"display_html":"<a href=\"#v:sequenceA_\">sequenceA_</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t (f a) -&gt; f ()","name":"sequenceA_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:sequenceA_"},{"display_html":"<a href=\"#v:sequence_\">sequence_</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; t (m a) -&gt; m ()","name":"sequence_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:sequence_"},{"display_html":"<a href=\"#v:traverse_\">traverse_</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; (a -&gt; f b) -&gt; t a -&gt; f ()","name":"traverse_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traverse_"},{"display_html":"<a href=\"#v:-38-\">(&amp;)</a> :: a -&gt; (a -&gt; b) -&gt; b","name":"&","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-38-"},{"display_html":"<a href=\"#v:fix\">fix</a> :: (a -&gt; a) -&gt; a","name":"fix","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fix"},{"display_html":"<a href=\"#v:on\">on</a> :: (b -&gt; b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; a -&gt; c","name":"on","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:on"},{"display_html":"<a href=\"#v:-36--62-\">($&gt;)</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; f a -&gt; b -&gt; f b","name":"$>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-36--62-"},{"display_html":"<a href=\"#v:-60--36--62-\">(&lt;$&gt;)</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":"<$>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--36--62-"},{"display_html":"<a href=\"#v:-60--38--62-\">(&lt;&amp;&gt;)</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; f a -&gt; (a -&gt; b) -&gt; f b","name":"<&>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--38--62-"},{"display_html":"<a href=\"#v:void\">void</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; f a -&gt; f ()","name":"void","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:void"},{"display_html":"<a href=\"#v:catMaybes\">catMaybes</a> :: [<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a] -&gt; [a]","name":"catMaybes","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:catMaybes"},{"display_html":"<a href=\"#v:fromMaybe\">fromMaybe</a> :: a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; a","name":"fromMaybe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fromMaybe"},{"display_html":"<a href=\"#v:isJust\">isJust</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isJust","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:isJust"},{"display_html":"<a href=\"#v:isNothing\">isNothing</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isNothing","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:isNothing"},{"display_html":"<a href=\"#v:listToMaybe\">listToMaybe</a> :: [a] -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"listToMaybe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:listToMaybe"},{"display_html":"<a href=\"#v:mapMaybe\">mapMaybe</a> :: (a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b) -&gt; [a] -&gt; [b]","name":"mapMaybe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mapMaybe"},{"display_html":"<a href=\"#v:maybe\">maybe</a> :: b -&gt; (a -&gt; b) -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; b","name":"maybe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:maybe"},{"display_html":"<a href=\"#v:maybeToList\">maybeToList</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; [a]","name":"maybeToList","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:maybeToList"},{"display_html":"<a href=\"#v:genericDrop\">genericDrop</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> i =&gt; i -&gt; [a] -&gt; [a]","name":"genericDrop","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:genericDrop"},{"display_html":"<a href=\"#v:genericLength\">genericLength</a> :: <a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> i =&gt; [a] -&gt; i","name":"genericLength","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:genericLength"},{"display_html":"<a href=\"#v:genericReplicate\">genericReplicate</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> i =&gt; i -&gt; a -&gt; [a]","name":"genericReplicate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:genericReplicate"},{"display_html":"<a href=\"#v:genericSplitAt\">genericSplitAt</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> i =&gt; i -&gt; [a] -&gt; ([a], [a])","name":"genericSplitAt","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:genericSplitAt"},{"display_html":"<a href=\"#v:genericTake\">genericTake</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> i =&gt; i -&gt; [a] -&gt; [a]","name":"genericTake","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:genericTake"},{"display_html":"<a href=\"#v:group\">group</a> :: <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a =&gt; [a] -&gt; [[a]]","name":"group","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:group"},{"display_html":"<a href=\"#v:inits\">inits</a> :: [a] -&gt; [[a]]","name":"inits","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:inits"},{"display_html":"<a href=\"#v:intercalate\">intercalate</a> :: [a] -&gt; [[a]] -&gt; [a]","name":"intercalate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:intercalate"},{"display_html":"<a href=\"#v:intersperse\">intersperse</a> :: a -&gt; [a] -&gt; [a]","name":"intersperse","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:intersperse"},{"display_html":"<a href=\"#v:isPrefixOf\">isPrefixOf</a> :: <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a =&gt; [a] -&gt; [a] -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isPrefixOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:isPrefixOf"},{"display_html":"<a href=\"#v:permutations\">permutations</a> :: [a] -&gt; [[a]]","name":"permutations","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:permutations"},{"display_html":"<a href=\"#v:sort\">sort</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> a =&gt; [a] -&gt; [a]","name":"sort","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:sort"},{"display_html":"<a href=\"#v:sortBy\">sortBy</a> :: (a -&gt; a -&gt; <a href=\"Prelude.html#t:Ordering\" title=\"Prelude\">Ordering</a>) -&gt; [a] -&gt; [a]","name":"sortBy","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:sortBy"},{"display_html":"<a href=\"#v:sortOn\">sortOn</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> b =&gt; (a -&gt; b) -&gt; [a] -&gt; [a]","name":"sortOn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:sortOn"},{"display_html":"<a href=\"#v:subsequences\">subsequences</a> :: [a] -&gt; [[a]]","name":"subsequences","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:subsequences"},{"display_html":"<a href=\"#v:tails\">tails</a> :: [a] -&gt; [[a]]","name":"tails","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:tails"},{"display_html":"<a href=\"#v:transpose\">transpose</a> :: [[a]] -&gt; [[a]]","name":"transpose","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:transpose"},{"display_html":"<a href=\"#v:unfoldr\">unfoldr</a> :: (b -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (a, b)) -&gt; b -&gt; [a]","name":"unfoldr","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:unfoldr"},{"display_html":"<a href=\"#v:comparing\">comparing</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> a =&gt; (b -&gt; a) -&gt; b -&gt; b -&gt; <a href=\"Prelude.html#t:Ordering\" title=\"Prelude\">Ordering</a>","name":"comparing","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:comparing"},{"display_html":"<a href=\"#v:stimesIdempotent\">stimesIdempotent</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b =&gt; b -&gt; a -&gt; a","name":"stimesIdempotent","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:stimesIdempotent"},{"display_html":"<a href=\"#v:stimesIdempotentMonoid\">stimesIdempotentMonoid</a> :: (<a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> a) =&gt; b -&gt; a -&gt; a","name":"stimesIdempotentMonoid","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:stimesIdempotentMonoid"},{"display_html":"<a href=\"#v:stimesMonoid\">stimesMonoid</a> :: (<a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> a) =&gt; b -&gt; a -&gt; a","name":"stimesMonoid","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:stimesMonoid"},{"display_html":"<a href=\"#v:forM\">forM</a> :: (<a href=\"Prelude.html#t:Traversable\" title=\"Prelude\">Traversable</a> t, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; t a -&gt; (a -&gt; m b) -&gt; m (t b)","name":"forM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:forM"},{"display_html":"<a href=\"#v:mapAccumL\">mapAccumL</a> :: <a href=\"Prelude.html#t:Traversable\" title=\"Prelude\">Traversable</a> t =&gt; (s -&gt; a -&gt; (s, b)) -&gt; s -&gt; t a -&gt; (s, t b)","name":"mapAccumL","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mapAccumL"},{"display_html":"<a href=\"#v:mapAccumR\">mapAccumR</a> :: <a href=\"Prelude.html#t:Traversable\" title=\"Prelude\">Traversable</a> t =&gt; (s -&gt; a -&gt; (s, b)) -&gt; s -&gt; t a -&gt; (s, t b)","name":"mapAccumR","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mapAccumR"},{"display_html":"<a href=\"#v:curry\">curry</a> :: ((a, b) -&gt; c) -&gt; a -&gt; b -&gt; c","name":"curry","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:curry"},{"display_html":"<a href=\"#v:fst\">fst</a> :: (a, b) -&gt; a","name":"fst","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fst"},{"display_html":"<a href=\"#v:snd\">snd</a> :: (a, b) -&gt; b","name":"snd","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:snd"},{"display_html":"<a href=\"#v:swap\">swap</a> :: (a, b) -&gt; (b, a)","name":"swap","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:swap"},{"display_html":"<a href=\"#v:uncurry\">uncurry</a> :: (a -&gt; b -&gt; c) -&gt; (a, b) -&gt; c","name":"uncurry","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:uncurry"},{"display_html":"<a href=\"#v:boundedEnumFrom\">boundedEnumFrom</a> :: (<a href=\"Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a, <a href=\"Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a) =&gt; a -&gt; [a]","name":"boundedEnumFrom","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:boundedEnumFrom"},{"display_html":"<a href=\"#v:boundedEnumFromThen\">boundedEnumFromThen</a> :: (<a href=\"Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a, <a href=\"Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a) =&gt; a -&gt; a -&gt; [a]","name":"boundedEnumFromThen","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:boundedEnumFromThen"},{"display_html":"<a href=\"#v:getStackTrace\">getStackTrace</a> :: <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> [<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-ExecutionStack.html#t:Location\" title=\"GHC.ExecutionStack\">Location</a>])","name":"getStackTrace","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:getStackTrace"},{"display_html":"<a href=\"#v:showStackTrace\">showStackTrace</a> :: <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>)","name":"showStackTrace","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:showStackTrace"},{"display_html":"<a href=\"#v:sortWith\">sortWith</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> b =&gt; (a -&gt; b) -&gt; [a] -&gt; [a]","name":"sortWith","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:sortWith"},{"display_html":"<a href=\"#v:stderr\">stderr</a> :: <a href=\"Prelude.html#t:Handle\" title=\"Prelude\">Handle</a>","name":"stderr","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:stderr"},{"display_html":"<a href=\"#v:stdin\">stdin</a> :: <a href=\"Prelude.html#t:Handle\" title=\"Prelude\">Handle</a>","name":"stdin","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:stdin"},{"display_html":"<a href=\"#v:stdout\">stdout</a> :: <a href=\"Prelude.html#t:Handle\" title=\"Prelude\">Handle</a>","name":"stdout","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:stdout"},{"display_html":"<a href=\"#v:withFile\">withFile</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:IOMode\" title=\"Prelude\">IOMode</a> -&gt; (<a href=\"Prelude.html#t:Handle\" title=\"Prelude\">Handle</a> -&gt; <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> r) -&gt; <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> r","name":"withFile","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:withFile"},{"display_html":"<a href=\"#v:break\">break</a> :: (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; [a] -&gt; ([a], [a])","name":"break","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:break"},{"display_html":"<a href=\"#v:drop\">drop</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; [a] -&gt; [a]","name":"drop","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:drop"},{"display_html":"<a href=\"#v:dropWhile\">dropWhile</a> :: (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; [a] -&gt; [a]","name":"dropWhile","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:dropWhile"},{"display_html":"<a href=\"#v:filter\">filter</a> :: (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; [a] -&gt; [a]","name":"filter","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:filter"},{"display_html":"<a href=\"#v:iterate\">iterate</a> :: (a -&gt; a) -&gt; a -&gt; [a]","name":"iterate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:iterate"},{"display_html":"<a href=\"#v:repeat\">repeat</a> :: a -&gt; [a]","name":"repeat","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:repeat"},{"display_html":"<a href=\"#v:replicate\">replicate</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; a -&gt; [a]","name":"replicate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:replicate"},{"display_html":"<a href=\"#v:reverse\">reverse</a> :: [a] -&gt; [a]","name":"reverse","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:reverse"},{"display_html":"<a href=\"#v:scanl\">scanl</a> :: (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; [b]","name":"scanl","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:scanl"},{"display_html":"<a href=\"#v:scanl-39-\">scanl'</a> :: (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; [b]","name":"scanl'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:scanl-39-"},{"display_html":"<a href=\"#v:scanl1\">scanl1</a> :: (a -&gt; a -&gt; a) -&gt; [a] -&gt; [a]","name":"scanl1","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:scanl1"},{"display_html":"<a href=\"#v:scanr\">scanr</a> :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; [b]","name":"scanr","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:scanr"},{"display_html":"<a href=\"#v:scanr1\">scanr1</a> :: (a -&gt; a -&gt; a) -&gt; [a] -&gt; [a]","name":"scanr1","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:scanr1"},{"display_html":"<a href=\"#v:span\">span</a> :: (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; [a] -&gt; ([a], [a])","name":"span","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:span"},{"display_html":"<a href=\"#v:splitAt\">splitAt</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; [a] -&gt; ([a], [a])","name":"splitAt","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:splitAt"},{"display_html":"<a href=\"#v:take\">take</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; [a] -&gt; [a]","name":"take","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:take"},{"display_html":"<a href=\"#v:takeWhile\">takeWhile</a> :: (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; [a] -&gt; [a]","name":"takeWhile","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:takeWhile"},{"display_html":"<a href=\"#v:uncons\">uncons</a> :: [a] -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (a, [a])","name":"uncons","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:uncons"},{"display_html":"<a href=\"#v:unzip\">unzip</a> :: [(a, b)] -&gt; ([a], [b])","name":"unzip","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:unzip"},{"display_html":"<a href=\"#v:unzip3\">unzip3</a> :: [(a, b, c)] -&gt; ([a], [b], [c])","name":"unzip3","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:unzip3"},{"display_html":"<a href=\"#v:zip\">zip</a> :: [a] -&gt; [b] -&gt; [(a, b)]","name":"zip","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:zip"},{"display_html":"<a href=\"#v:zip3\">zip3</a> :: [a] -&gt; [b] -&gt; [c] -&gt; [(a, b, c)]","name":"zip3","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:zip3"},{"display_html":"<a href=\"#v:zipWith\">zipWith</a> :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]","name":"zipWith","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:zipWith"},{"display_html":"<a href=\"#v:subtract\">subtract</a> :: <a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> a =&gt; a -&gt; a -&gt; a","name":"subtract","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:subtract"},{"display_html":"<a href=\"#v:-94-\">(^)</a> :: (<a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b) =&gt; a -&gt; b -&gt; a","name":"^","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-94-"},{"display_html":"<a href=\"#v:-94--94-\">(^^)</a> :: (<a href=\"Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> a, <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b) =&gt; a -&gt; b -&gt; a","name":"^^","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-94--94-"},{"display_html":"<a href=\"#v:denominator\">denominator</a> :: <a href=\"Prelude.html#t:Ratio\" title=\"Prelude\">Ratio</a> a -&gt; a","name":"denominator","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:denominator"},{"display_html":"<a href=\"#v:even\">even</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a =&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"even","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:even"},{"display_html":"<a href=\"#v:fromIntegral\">fromIntegral</a> :: (<a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> b) =&gt; a -&gt; b","name":"fromIntegral","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fromIntegral"},{"display_html":"<a href=\"#v:gcd\">gcd</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a =&gt; a -&gt; a -&gt; a","name":"gcd","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:gcd"},{"display_html":"<a href=\"#v:lcm\">lcm</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a =&gt; a -&gt; a -&gt; a","name":"lcm","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:lcm"},{"display_html":"<a href=\"#v:numerator\">numerator</a> :: <a href=\"Prelude.html#t:Ratio\" title=\"Prelude\">Ratio</a> a -&gt; a","name":"numerator","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:numerator"},{"display_html":"<a href=\"#v:odd\">odd</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a =&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"odd","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:odd"},{"display_html":"<a href=\"#v:realToFrac\">realToFrac</a> :: (<a href=\"Prelude.html#t:Real\" title=\"Prelude\">Real</a> a, <a href=\"Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> b) =&gt; a -&gt; b","name":"realToFrac","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:realToFrac"},{"display_html":"<a href=\"#v:callStack\">callStack</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Prelude.html#t:CallStack\" title=\"Prelude\">CallStack</a>","name":"callStack","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:callStack"},{"display_html":"<a href=\"#v:prettyCallStack\">prettyCallStack</a> :: <a href=\"Prelude.html#t:CallStack\" title=\"Prelude\">CallStack</a> -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"prettyCallStack","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:prettyCallStack"},{"display_html":"<a href=\"#v:prettySrcLoc\">prettySrcLoc</a> :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Stack.html#t:SrcLoc\" title=\"GHC.Stack\">SrcLoc</a> -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"prettySrcLoc","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:prettySrcLoc"},{"display_html":"<a href=\"#v:withFrozenCallStack\">withFrozenCallStack</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; a) -&gt; a","name":"withFrozenCallStack","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:withFrozenCallStack"},{"display_html":"<a href=\"#v:currentCallStack\">currentCallStack</a> :: <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> [<a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>]","name":"currentCallStack","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:currentCallStack"},{"display_html":"<a href=\"#v:getCallStack\">getCallStack</a> :: <a href=\"Prelude.html#t:CallStack\" title=\"Prelude\">CallStack</a> -&gt; [([<a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>], <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Stack.html#t:SrcLoc\" title=\"GHC.Stack\">SrcLoc</a>)]","name":"getCallStack","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:getCallStack"},{"display_html":"<a href=\"#v:readMaybe\">readMaybe</a> :: <a href=\"Prelude.html#t:Read\" title=\"Prelude\">Read</a> a =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"readMaybe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readMaybe"},{"display_html":"<a href=\"#v:reads\">reads</a> :: <a href=\"Prelude.html#t:Read\" title=\"Prelude\">Read</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ReadS\" title=\"Prelude\">ReadS</a> a","name":"reads","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:reads"},{"display_html":"<a href=\"#v:natVal\">natVal</a> :: <span class=\"keyword\">forall</span> (n :: <a href=\"Prelude.html#t:Nat\" title=\"Prelude\">Nat</a>) proxy. <a href=\"Prelude.html#t:KnownNat\" title=\"Prelude\">KnownNat</a> n =&gt; proxy n -&gt; <a href=\"Prelude.html#t:Natural\" title=\"Prelude\">Natural</a>","name":"natVal","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:natVal"},{"display_html":"<a href=\"#v:someNatVal\">someNatVal</a> :: <a href=\"Prelude.html#t:Natural\" title=\"Prelude\">Natural</a> -&gt; <a href=\"Prelude.html#t:SomeNat\" title=\"Prelude\">SomeNat</a>","name":"someNatVal","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:someNatVal"},{"display_html":"<a href=\"#v:byteSwap16\">byteSwap16</a> :: <a href=\"Prelude.html#t:Word16\" title=\"Prelude\">Word16</a> -&gt; <a href=\"Prelude.html#t:Word16\" title=\"Prelude\">Word16</a>","name":"byteSwap16","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:byteSwap16"},{"display_html":"<a href=\"#v:byteSwap32\">byteSwap32</a> :: <a href=\"Prelude.html#t:Word32\" title=\"Prelude\">Word32</a> -&gt; <a href=\"Prelude.html#t:Word32\" title=\"Prelude\">Word32</a>","name":"byteSwap32","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:byteSwap32"},{"display_html":"<a href=\"#v:byteSwap64\">byteSwap64</a> :: <a href=\"Prelude.html#t:Word64\" title=\"Prelude\">Word64</a> -&gt; <a href=\"Prelude.html#t:Word64\" title=\"Prelude\">Word64</a>","name":"byteSwap64","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:byteSwap64"},{"display_html":"<a href=\"#v:-38--38-\">(&amp;&amp;)</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"&&","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-38--38-"},{"display_html":"<a href=\"#v:not\">not</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"not","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:not"},{"display_html":"<a href=\"#v:-124--124-\">(||)</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"||","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-124--124-"},{"display_html":"<a href=\"#v:asks\">asks</a> :: <a href=\"Prelude.html#t:MonadReader\" title=\"Prelude\">MonadReader</a> r m =&gt; (r -&gt; a) -&gt; m a","name":"asks","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:asks"},{"display_html":"<a href=\"#v:modify-39-\">modify'</a> :: <a href=\"Prelude.html#t:MonadState\" title=\"Prelude\">MonadState</a> s m =&gt; (s -&gt; s) -&gt; m ()","name":"modify'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:modify-39-"},{"display_html":"<a href=\"#v:appliedTo\">appliedTo</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; f a -&gt; f (a -&gt; b) -&gt; f b","name":"appliedTo","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:appliedTo"},{"display_html":"<a href=\"#v:pass\">pass</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; f ()","name":"pass","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:pass"},{"display_html":"<a href=\"#v:-38--38--94-\">(&amp;&amp;^)</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"&&^","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-38--38--94-"},{"display_html":"<a href=\"#v:guardM\">guardM</a> :: <a href=\"Prelude.html#t:MonadPlus\" title=\"Prelude\">MonadPlus</a> m =&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m ()","name":"guardM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:guardM"},{"display_html":"<a href=\"#v:guarded\">guarded</a> :: <a href=\"Prelude.html#t:Alternative\" title=\"Prelude\">Alternative</a> f =&gt; (a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; a -&gt; f a","name":"guarded","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:guarded"},{"display_html":"<a href=\"#v:ifM\">ifM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m a -&gt; m a -&gt; m a","name":"ifM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:ifM"},{"display_html":"<a href=\"#v:unlessM\">unlessM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m () -&gt; m ()","name":"unlessM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:unlessM"},{"display_html":"<a href=\"#v:whenM\">whenM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m () -&gt; m ()","name":"whenM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenM"},{"display_html":"<a href=\"#v:-124--124--94-\">(||^)</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"||^","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-124--124--94-"},{"display_html":"<a href=\"#v:error\">error</a> :: <span class=\"keyword\">forall</span> a t. (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, IsText t) =&gt; t -&gt; a","name":"error","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:error"},{"display_html":"<a href=\"#v:trace\">trace</a> :: <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; a -&gt; a","name":"trace","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:trace"},{"display_html":"<a href=\"#v:traceId\">traceId</a> :: <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"traceId","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traceId"},{"display_html":"<a href=\"#v:traceM\">traceM</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; f ()","name":"traceM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traceM"},{"display_html":"<a href=\"#v:traceShow\">traceShow</a> :: <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a =&gt; a -&gt; b -&gt; b","name":"traceShow","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traceShow"},{"display_html":"<a href=\"#v:traceShowId\">traceShowId</a> :: <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a =&gt; a -&gt; a","name":"traceShowId","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traceShowId"},{"display_html":"<a href=\"#v:traceShowM\">traceShowM</a> :: (<a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; a -&gt; f ()","name":"traceShowM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traceShowM"},{"display_html":"<a href=\"#v:traceShowWith\">traceShowWith</a> :: <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> b =&gt; (a -&gt; b) -&gt; a -&gt; a","name":"traceShowWith","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traceShowWith"},{"display_html":"<a href=\"#v:undefined\">undefined</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; a","name":"undefined","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:undefined"},{"display_html":"<a href=\"#v:evaluateNF\">evaluateNF</a> :: (<a href=\"Prelude.html#t:NFData\" title=\"Prelude\">NFData</a> a, <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m) =&gt; a -&gt; m a","name":"evaluateNF","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:evaluateNF"},{"display_html":"<a href=\"#v:evaluateNF_\">evaluateNF_</a> :: (<a href=\"Prelude.html#t:NFData\" title=\"Prelude\">NFData</a> a, <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m) =&gt; a -&gt; m ()","name":"evaluateNF_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:evaluateNF_"},{"display_html":"<a href=\"#v:evaluateWHNF\">evaluateWHNF</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; a -&gt; m a","name":"evaluateWHNF","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:evaluateWHNF"},{"display_html":"<a href=\"#v:evaluateWHNF_\">evaluateWHNF_</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; a -&gt; m ()","name":"evaluateWHNF_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:evaluateWHNF_"},{"display_html":"<a href=\"#v:inverseMap\">inverseMap</a> :: (<a href=\"Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a, <a href=\"Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a, <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> k) =&gt; (a -&gt; k) -&gt; k -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"inverseMap","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:inverseMap"},{"display_html":"<a href=\"#v:universe\">universe</a> :: (<a href=\"Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a, <a href=\"Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a) =&gt; [a]","name":"universe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:universe"},{"display_html":"<a href=\"#v:universeNonEmpty\">universeNonEmpty</a> :: (<a href=\"Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a, <a href=\"Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a) =&gt; <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a","name":"universeNonEmpty","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:universeNonEmpty"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Exc\">Exc</a> :: <a href=\"Prelude.html#t:Exception\" title=\"Prelude\">Exception</a> e =&gt; e -&gt; <a href=\"Prelude.html#t:SomeException\" title=\"Prelude\">SomeException</a>","name":"Exc","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:Exc"},{"display_html":"<a href=\"#v:bug\">bug</a> :: (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Prelude.html#t:Exception\" title=\"Prelude\">Exception</a> e) =&gt; e -&gt; a","name":"bug","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:bug"},{"display_html":"<a href=\"#v:appendFileBS\">appendFileBS</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a> -&gt; m ()","name":"appendFileBS","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:appendFileBS"},{"display_html":"<a href=\"#v:appendFileLBS\">appendFileLBS</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:LByteString\" title=\"Prelude\">LByteString</a> -&gt; m ()","name":"appendFileLBS","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:appendFileLBS"},{"display_html":"<a href=\"#v:appendFileLText\">appendFileLText</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:LText\" title=\"Prelude\">LText</a> -&gt; m ()","name":"appendFileLText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:appendFileLText"},{"display_html":"<a href=\"#v:appendFileText\">appendFileText</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; m ()","name":"appendFileText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:appendFileText"},{"display_html":"<a href=\"#v:readFileBS\">readFileBS</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; m <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a>","name":"readFileBS","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readFileBS"},{"display_html":"<a href=\"#v:readFileLBS\">readFileLBS</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; m <a href=\"Prelude.html#t:LByteString\" title=\"Prelude\">LByteString</a>","name":"readFileLBS","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readFileLBS"},{"display_html":"<a href=\"#v:readFileLText\">readFileLText</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; m <a href=\"Prelude.html#t:LText\" title=\"Prelude\">LText</a>","name":"readFileLText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readFileLText"},{"display_html":"<a href=\"#v:readFileText\">readFileText</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; m <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"readFileText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readFileText"},{"display_html":"<a href=\"#v:writeFileBS\">writeFileBS</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a> -&gt; m ()","name":"writeFileBS","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:writeFileBS"},{"display_html":"<a href=\"#v:writeFileLBS\">writeFileLBS</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:LByteString\" title=\"Prelude\">LByteString</a> -&gt; m ()","name":"writeFileLBS","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:writeFileLBS"},{"display_html":"<a href=\"#v:writeFileLText\">writeFileLText</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:LText\" title=\"Prelude\">LText</a> -&gt; m ()","name":"writeFileLText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:writeFileLText"},{"display_html":"<a href=\"#v:writeFileText\">writeFileText</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; m ()","name":"writeFileText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:writeFileText"},{"display_html":"<a href=\"#v:allM\">allM</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; (a -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; f a -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"allM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:allM"},{"display_html":"<a href=\"#v:andM\">andM</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; f (m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"andM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:andM"},{"display_html":"<a href=\"#v:anyM\">anyM</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; (a -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; f a -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"anyM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:anyM"},{"display_html":"<a href=\"#v:asumMap\">asumMap</a> :: <span class=\"keyword\">forall</span> b m f a. (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, <a href=\"Prelude.html#t:Alternative\" title=\"Prelude\">Alternative</a> m) =&gt; (a -&gt; m b) -&gt; f a -&gt; m b","name":"asumMap","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:asumMap"},{"display_html":"<a href=\"#v:elem\">elem</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, DisallowElem f, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a) =&gt; a -&gt; f a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"elem","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:elem"},{"display_html":"<a href=\"#v:flipfoldl-39-\">flipfoldl'</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; f a -&gt; b","name":"flipfoldl'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:flipfoldl-39-"},{"display_html":"<a href=\"#v:foldMapA\">foldMapA</a> :: (<a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> b, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> b, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m, <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f) =&gt; (a -&gt; m b) -&gt; f a -&gt; m b","name":"foldMapA","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:foldMapA"},{"display_html":"<a href=\"#v:foldMapM\">foldMapM</a> :: (<a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> b, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m, <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f) =&gt; (a -&gt; m b) -&gt; f a -&gt; m b","name":"foldMapM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:foldMapM"},{"display_html":"<a href=\"#v:notElem\">notElem</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, DisallowElem f, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a) =&gt; a -&gt; f a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"notElem","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:notElem"},{"display_html":"<a href=\"#v:orM\">orM</a> :: (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; f (m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"orM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:orM"},{"display_html":"<a href=\"#v:product\">product</a> :: <span class=\"keyword\">forall</span> a f. (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, <a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; f a -&gt; a","name":"product","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:product"},{"display_html":"<a href=\"#v:sum\">sum</a> :: <span class=\"keyword\">forall</span> a f. (<a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f, <a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> a) =&gt; f a -&gt; a","name":"sum","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:sum"},{"display_html":"<a href=\"#v:-60--60--36--62--62-\">(&lt;&lt;$&gt;&gt;)</a> :: (<a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f, <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> g) =&gt; (a -&gt; b) -&gt; f (g a) -&gt; f (g b)","name":"<<$>>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--60--36--62--62-"},{"display_html":"<a href=\"#v:-63--63-\">(??)</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; f (a -&gt; b) -&gt; a -&gt; f b","name":"??","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-63--63-"},{"display_html":"<a href=\"#v:flap\">flap</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; f (a -&gt; b) -&gt; a -&gt; f b","name":"flap","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:flap"},{"display_html":"<a href=\"#v:atomically\">atomically</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a -&gt; m a","name":"atomically","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:atomically"},{"display_html":"<a href=\"#v:newEmptyMVar\">newEmptyMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; m (<a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a)","name":"newEmptyMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newEmptyMVar"},{"display_html":"<a href=\"#v:newEmptyTMVarIO\">newEmptyTMVarIO</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; m (<a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a)","name":"newEmptyTMVarIO","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newEmptyTMVarIO"},{"display_html":"<a href=\"#v:newMVar\">newMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; a -&gt; m (<a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a)","name":"newMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newMVar"},{"display_html":"<a href=\"#v:newTMVarIO\">newTMVarIO</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; a -&gt; m (<a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a)","name":"newTMVarIO","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newTMVarIO"},{"display_html":"<a href=\"#v:newTVarIO\">newTVarIO</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; a -&gt; m (<a href=\"Prelude.html#t:TVar\" title=\"Prelude\">TVar</a> a)","name":"newTVarIO","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newTVarIO"},{"display_html":"<a href=\"#v:putMVar\">putMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a -&gt; a -&gt; m ()","name":"putMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putMVar"},{"display_html":"<a href=\"#v:readMVar\">readMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a -&gt; m a","name":"readMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readMVar"},{"display_html":"<a href=\"#v:readTVarIO\">readTVarIO</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:TVar\" title=\"Prelude\">TVar</a> a -&gt; m a","name":"readTVarIO","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readTVarIO"},{"display_html":"<a href=\"#v:swapMVar\">swapMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a -&gt; a -&gt; m a","name":"swapMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:swapMVar"},{"display_html":"<a href=\"#v:takeMVar\">takeMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a -&gt; m a","name":"takeMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:takeMVar"},{"display_html":"<a href=\"#v:tryPutMVar\">tryPutMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a -&gt; a -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"tryPutMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:tryPutMVar"},{"display_html":"<a href=\"#v:tryReadMVar\">tryReadMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a -&gt; m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a)","name":"tryReadMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:tryReadMVar"},{"display_html":"<a href=\"#v:tryTakeMVar\">tryTakeMVar</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> a -&gt; m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a)","name":"tryTakeMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:tryTakeMVar"},{"display_html":"<a href=\"#v:getArgs\">getArgs</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; m [<a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>]","name":"getArgs","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:getArgs"},{"display_html":"<a href=\"#v:lookupEnv\">lookupEnv</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>)","name":"lookupEnv","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:lookupEnv"},{"display_html":"<a href=\"#v:die\">die</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; m a","name":"die","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:die"},{"display_html":"<a href=\"#v:exitFailure\">exitFailure</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; m a","name":"exitFailure","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:exitFailure"},{"display_html":"<a href=\"#v:exitSuccess\">exitSuccess</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; m a","name":"exitSuccess","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:exitSuccess"},{"display_html":"<a href=\"#v:exitWith\">exitWith</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/System-Exit.html#t:ExitCode\" title=\"System.Exit\">ExitCode</a> -&gt; m a","name":"exitWith","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:exitWith"},{"display_html":"<a href=\"#v:appendFile\">appendFile</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; m ()","name":"appendFile","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:appendFile"},{"display_html":"<a href=\"#v:readFile\">readFile</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; m <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"readFile","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readFile"},{"display_html":"<a href=\"#v:readFile-39-\">readFile'</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; m <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"readFile'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readFile-39-"},{"display_html":"<a href=\"#v:writeFile\">writeFile</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; m ()","name":"writeFile","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:writeFile"},{"display_html":"<a href=\"#v:hFlush\">hFlush</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:Handle\" title=\"Prelude\">Handle</a> -&gt; m ()","name":"hFlush","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:hFlush"},{"display_html":"<a href=\"#v:hGetBuffering\">hGetBuffering</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:Handle\" title=\"Prelude\">Handle</a> -&gt; m <a href=\"Prelude.html#t:BufferMode\" title=\"Prelude\">BufferMode</a>","name":"hGetBuffering","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:hGetBuffering"},{"display_html":"<a href=\"#v:hIsEOF\">hIsEOF</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:Handle\" title=\"Prelude\">Handle</a> -&gt; m <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"hIsEOF","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:hIsEOF"},{"display_html":"<a href=\"#v:hSetBuffering\">hSetBuffering</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:Handle\" title=\"Prelude\">Handle</a> -&gt; <a href=\"Prelude.html#t:BufferMode\" title=\"Prelude\">BufferMode</a> -&gt; m ()","name":"hSetBuffering","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:hSetBuffering"},{"display_html":"<a href=\"#v:atomicModifyIORef\">atomicModifyIORef</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; (a -&gt; (a, b)) -&gt; m b","name":"atomicModifyIORef","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:atomicModifyIORef"},{"display_html":"<a href=\"#v:atomicModifyIORef-39-\">atomicModifyIORef'</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; (a -&gt; (a, b)) -&gt; m b","name":"atomicModifyIORef'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:atomicModifyIORef-39-"},{"display_html":"<a href=\"#v:atomicModifyIORef-39-_\">atomicModifyIORef'_</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"atomicModifyIORef'_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:atomicModifyIORef-39-_"},{"display_html":"<a href=\"#v:atomicModifyIORef_\">atomicModifyIORef_</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"atomicModifyIORef_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:atomicModifyIORef_"},{"display_html":"<a href=\"#v:atomicWriteIORef\">atomicWriteIORef</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; a -&gt; m ()","name":"atomicWriteIORef","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:atomicWriteIORef"},{"display_html":"<a href=\"#v:modifyIORef\">modifyIORef</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"modifyIORef","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:modifyIORef"},{"display_html":"<a href=\"#v:modifyIORef-39-\">modifyIORef'</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"modifyIORef'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:modifyIORef-39-"},{"display_html":"<a href=\"#v:newIORef\">newIORef</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; a -&gt; m (<a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a)","name":"newIORef","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newIORef"},{"display_html":"<a href=\"#v:readIORef\">readIORef</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; m a","name":"readIORef","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readIORef"},{"display_html":"<a href=\"#v:writeIORef\">writeIORef</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> a -&gt; a -&gt; m ()","name":"writeIORef","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:writeIORef"},{"display_html":"<a href=\"#v:getLine\">getLine</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; m <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"getLine","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:getLine"},{"display_html":"<a href=\"#v:print\">print</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a) =&gt; a -&gt; m ()","name":"print","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:print"},{"display_html":"<a href=\"#v:putStr\">putStr</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; m ()","name":"putStr","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putStr"},{"display_html":"<a href=\"#v:putStrLn\">putStrLn</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; m ()","name":"putStrLn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putStrLn"},{"display_html":"<a href=\"#v:-33--33--63-\">(!!?)</a> :: [a] -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"!!?","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-33--33--63-"},{"display_html":"<a href=\"#v:maybeAt\">maybeAt</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; [a] -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"maybeAt","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:maybeAt"},{"display_html":"<a href=\"#v:partitionWith\">partitionWith</a> :: (a -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> b c) -&gt; [a] -&gt; ([b], [c])","name":"partitionWith","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:partitionWith"},{"display_html":"<a href=\"#v:head\">head</a> :: IsNonEmpty f a a &quot;head&quot; =&gt; f a -&gt; a","name":"head","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:head"},{"display_html":"<a href=\"#v:init\">init</a> :: IsNonEmpty f a [a] &quot;init&quot; =&gt; f a -&gt; [a]","name":"init","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:init"},{"display_html":"<a href=\"#v:last\">last</a> :: IsNonEmpty f a a &quot;last&quot; =&gt; f a -&gt; a","name":"last","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:last"},{"display_html":"<a href=\"#v:tail\">tail</a> :: IsNonEmpty f a [a] &quot;tail&quot; =&gt; f a -&gt; [a]","name":"tail","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:tail"},{"display_html":"<a href=\"#v:viaNonEmpty\">viaNonEmpty</a> :: (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a -&gt; b) -&gt; [a] -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b","name":"viaNonEmpty","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:viaNonEmpty"},{"display_html":"<a href=\"#v:whenNotNull\">whenNotNull</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; [a] -&gt; (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a -&gt; f ()) -&gt; f ()","name":"whenNotNull","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenNotNull"},{"display_html":"<a href=\"#v:whenNotNullM\">whenNotNullM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m [a] -&gt; (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a -&gt; m ()) -&gt; m ()","name":"whenNotNullM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenNotNullM"},{"display_html":"<a href=\"#v:cycle\">cycle</a> :: [a] -&gt; [a]","name":"cycle","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:cycle"},{"display_html":"<a href=\"#v:chainedTo\">chainedTo</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b","name":"chainedTo","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:chainedTo"},{"display_html":"<a href=\"#v:infinitely\">infinitely</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; f a -&gt; f <a href=\"Prelude.html#t:Void\" title=\"Prelude\">Void</a>","name":"infinitely","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:infinitely"},{"display_html":"<a href=\"#v:leftToMaybe\">leftToMaybe</a> :: <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> l","name":"leftToMaybe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:leftToMaybe"},{"display_html":"<a href=\"#v:maybeToLeft\">maybeToLeft</a> :: r -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> l -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r","name":"maybeToLeft","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:maybeToLeft"},{"display_html":"<a href=\"#v:maybeToRight\">maybeToRight</a> :: l -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> r -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r","name":"maybeToRight","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:maybeToRight"},{"display_html":"<a href=\"#v:rightToMaybe\">rightToMaybe</a> :: <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> r","name":"rightToMaybe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:rightToMaybe"},{"display_html":"<a href=\"#v:whenLeft\">whenLeft</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; a -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r -&gt; (l -&gt; f a) -&gt; f a","name":"whenLeft","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenLeft"},{"display_html":"<a href=\"#v:whenLeftM\">whenLeftM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; a -&gt; m (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r) -&gt; (l -&gt; m a) -&gt; m a","name":"whenLeftM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenLeftM"},{"display_html":"<a href=\"#v:whenLeftM_\">whenLeftM_</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r) -&gt; (l -&gt; m ()) -&gt; m ()","name":"whenLeftM_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenLeftM_"},{"display_html":"<a href=\"#v:whenLeft_\">whenLeft_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r -&gt; (l -&gt; f ()) -&gt; f ()","name":"whenLeft_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenLeft_"},{"display_html":"<a href=\"#v:whenRight\">whenRight</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; a -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r -&gt; (r -&gt; f a) -&gt; f a","name":"whenRight","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenRight"},{"display_html":"<a href=\"#v:whenRightM\">whenRightM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; a -&gt; m (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r) -&gt; (r -&gt; m a) -&gt; m a","name":"whenRightM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenRightM"},{"display_html":"<a href=\"#v:whenRightM_\">whenRightM_</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r) -&gt; (r -&gt; m ()) -&gt; m ()","name":"whenRightM_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenRightM_"},{"display_html":"<a href=\"#v:whenRight_\">whenRight_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> l r -&gt; (r -&gt; f ()) -&gt; f ()","name":"whenRight_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenRight_"},{"display_html":"<a href=\"#v:-63-:\">(?:)</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; a -&gt; a","name":"?:","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-63-:"},{"display_html":"<a href=\"#v:mapMaybeM\">mapMaybeM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; (a -&gt; m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b)) -&gt; [a] -&gt; m [b]","name":"mapMaybeM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mapMaybeM"},{"display_html":"<a href=\"#v:whenJust\">whenJust</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; (a -&gt; f ()) -&gt; f ()","name":"whenJust","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenJust"},{"display_html":"<a href=\"#v:whenJustM\">whenJustM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) -&gt; (a -&gt; m ()) -&gt; m ()","name":"whenJustM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenJustM"},{"display_html":"<a href=\"#v:whenNothing\">whenNothing</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; f a -&gt; f a","name":"whenNothing","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenNothing"},{"display_html":"<a href=\"#v:whenNothingM\">whenNothingM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) -&gt; m a -&gt; m a","name":"whenNothingM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenNothingM"},{"display_html":"<a href=\"#v:whenNothingM_\">whenNothingM_</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) -&gt; m () -&gt; m ()","name":"whenNothingM_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenNothingM_"},{"display_html":"<a href=\"#v:whenNothing_\">whenNothing_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; f () -&gt; f ()","name":"whenNothing_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:whenNothing_"},{"display_html":"<a href=\"#v:etaReaderT\">etaReaderT</a> :: <span class=\"keyword\">forall</span> r (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a. <a href=\"Prelude.html#t:ReaderT\" title=\"Prelude\">ReaderT</a> r m a -&gt; <a href=\"Prelude.html#t:ReaderT\" title=\"Prelude\">ReaderT</a> r m a","name":"etaReaderT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:etaReaderT"},{"display_html":"<a href=\"#v:evaluatingState\">evaluatingState</a> :: s -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:State\" title=\"Control.Monad.State.Strict\">State</a> s a -&gt; a","name":"evaluatingState","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:evaluatingState"},{"display_html":"<a href=\"#v:evaluatingStateT\">evaluatingStateT</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; s -&gt; <a href=\"Prelude.html#t:StateT\" title=\"Prelude\">StateT</a> s f a -&gt; f a","name":"evaluatingStateT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:evaluatingStateT"},{"display_html":"<a href=\"#v:executingState\">executingState</a> :: s -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:State\" title=\"Control.Monad.State.Strict\">State</a> s a -&gt; s","name":"executingState","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:executingState"},{"display_html":"<a href=\"#v:executingStateT\">executingStateT</a> :: <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; s -&gt; <a href=\"Prelude.html#t:StateT\" title=\"Prelude\">StateT</a> s f a -&gt; f s","name":"executingStateT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:executingStateT"},{"display_html":"<a href=\"#v:hoistEither\">hoistEither</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e a. <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> e a -&gt; <a href=\"Prelude.html#t:ExceptT\" title=\"Prelude\">ExceptT</a> e m a","name":"hoistEither","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:hoistEither"},{"display_html":"<a href=\"#v:hoistMaybe\">hoistMaybe</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a. <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; <a href=\"Prelude.html#t:MaybeT\" title=\"Prelude\">MaybeT</a> m a","name":"hoistMaybe","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:hoistMaybe"},{"display_html":"<a href=\"#v:usingReader\">usingReader</a> :: r -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#t:Reader\" title=\"Control.Monad.Reader\">Reader</a> r a -&gt; a","name":"usingReader","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:usingReader"},{"display_html":"<a href=\"#v:usingReaderT\">usingReaderT</a> :: r -&gt; <a href=\"Prelude.html#t:ReaderT\" title=\"Prelude\">ReaderT</a> r m a -&gt; m a","name":"usingReaderT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:usingReaderT"},{"display_html":"<a href=\"#v:usingState\">usingState</a> :: s -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:State\" title=\"Control.Monad.State.Strict\">State</a> s a -&gt; (a, s)","name":"usingState","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:usingState"},{"display_html":"<a href=\"#v:usingStateT\">usingStateT</a> :: s -&gt; <a href=\"Prelude.html#t:StateT\" title=\"Prelude\">StateT</a> s m a -&gt; m (a, s)","name":"usingStateT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:usingStateT"},{"display_html":"<a href=\"#v:maybeToMonoid\">maybeToMonoid</a> :: <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m =&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> m -&gt; m","name":"maybeToMonoid","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:maybeToMonoid"},{"display_html":"<a href=\"#v:memptyIfFalse\">memptyIfFalse</a> :: <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m =&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m -&gt; m","name":"memptyIfFalse","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:memptyIfFalse"},{"display_html":"<a href=\"#v:memptyIfTrue\">memptyIfTrue</a> :: <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m =&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; m -&gt; m","name":"memptyIfTrue","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:memptyIfTrue"},{"display_html":"<a href=\"#v:hashNub\">hashNub</a> :: <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> a =&gt; [a] -&gt; [a]","name":"hashNub","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:hashNub"},{"display_html":"<a href=\"#v:intNub\">intNub</a> :: [<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>] -&gt; [<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>]","name":"intNub","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:intNub"},{"display_html":"<a href=\"#v:intNubOn\">intNubOn</a> :: (a -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>) -&gt; [a] -&gt; [a]","name":"intNubOn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:intNubOn"},{"display_html":"<a href=\"#v:ordNub\">ordNub</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> a =&gt; [a] -&gt; [a]","name":"ordNub","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:ordNub"},{"display_html":"<a href=\"#v:ordNubOn\">ordNubOn</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> b =&gt; (a -&gt; b) -&gt; [a] -&gt; [a]","name":"ordNubOn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:ordNubOn"},{"display_html":"<a href=\"#v:sortNub\">sortNub</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> a =&gt; [a] -&gt; [a]","name":"sortNub","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:sortNub"},{"display_html":"<a href=\"#v:unstableNub\">unstableNub</a> :: <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> a =&gt; [a] -&gt; [a]","name":"unstableNub","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:unstableNub"},{"display_html":"<a href=\"#v:integerToBounded\">integerToBounded</a> :: (<a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> a, <a href=\"Prelude.html#t:Bounded\" title=\"Prelude\">Bounded</a> a) =&gt; <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"integerToBounded","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:integerToBounded"},{"display_html":"<a href=\"#v:integerToNatural\">integerToNatural</a> :: <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:Natural\" title=\"Prelude\">Natural</a>","name":"integerToNatural","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:integerToNatural"},{"display_html":"<a href=\"#v:putBS\">putBS</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a> -&gt; m ()","name":"putBS","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putBS"},{"display_html":"<a href=\"#v:putBSLn\">putBSLn</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a> -&gt; m ()","name":"putBSLn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putBSLn"},{"display_html":"<a href=\"#v:putLBS\">putLBS</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:LByteString\" title=\"Prelude\">LByteString</a> -&gt; m ()","name":"putLBS","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putLBS"},{"display_html":"<a href=\"#v:putLBSLn\">putLBSLn</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:LByteString\" title=\"Prelude\">LByteString</a> -&gt; m ()","name":"putLBSLn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putLBSLn"},{"display_html":"<a href=\"#v:putLText\">putLText</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:LText\" title=\"Prelude\">LText</a> -&gt; m ()","name":"putLText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putLText"},{"display_html":"<a href=\"#v:putLTextLn\">putLTextLn</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:LText\" title=\"Prelude\">LText</a> -&gt; m ()","name":"putLTextLn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putLTextLn"},{"display_html":"<a href=\"#v:putText\">putText</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; m ()","name":"putText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putText"},{"display_html":"<a href=\"#v:putTextLn\">putTextLn</a> :: <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m =&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; m ()","name":"putTextLn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putTextLn"},{"display_html":"<a href=\"#v:fromLazy\">fromLazy</a> :: <a href=\"Prelude.html#t:LazyStrict\" title=\"Prelude\">LazyStrict</a> l s =&gt; l -&gt; s","name":"fromLazy","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fromLazy"},{"display_html":"<a href=\"#v:fromStrict\">fromStrict</a> :: <a href=\"Prelude.html#t:LazyStrict\" title=\"Prelude\">LazyStrict</a> l s =&gt; s -&gt; l","name":"fromStrict","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:fromStrict"},{"display_html":"<a href=\"#v:readEither\">readEither</a> :: <a href=\"Prelude.html#t:Read\" title=\"Prelude\">Read</a> a =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> a","name":"readEither","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readEither"},{"display_html":"<a href=\"#v:show\">show</a> :: <span class=\"keyword\">forall</span> b a. (<a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"Prelude.html#t:IsString\" title=\"Prelude\">IsString</a> b) =&gt; a -&gt; b","name":"show","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:show"},{"display_html":"<a href=\"#v:lines\">lines</a> :: IsText t &quot;lines&quot; =&gt; t -&gt; [t]","name":"lines","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:lines"},{"display_html":"<a href=\"#v:unlines\">unlines</a> :: IsText t &quot;unlines&quot; =&gt; [t] -&gt; t","name":"unlines","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:unlines"},{"display_html":"<a href=\"#v:unwords\">unwords</a> :: IsText t &quot;unwords&quot; =&gt; [t] -&gt; t","name":"unwords","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:unwords"},{"display_html":"<a href=\"#v:words\">words</a> :: IsText t &quot;words&quot; =&gt; t -&gt; [t]","name":"words","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:words"},{"display_html":"<a href=\"#v:isEmptyTMVar\">isEmptyTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isEmptyTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:isEmptyTMVar"},{"display_html":"<a href=\"#v:mkWeakTMVar\">mkWeakTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> () -&gt; <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/System-Mem-Weak.html#t:Weak\" title=\"System.Mem.Weak\">Weak</a> (<a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a))","name":"mkWeakTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:mkWeakTMVar"},{"display_html":"<a href=\"#v:newEmptyTMVar\">newEmptyTMVar</a> :: <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> (<a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a)","name":"newEmptyTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newEmptyTMVar"},{"display_html":"<a href=\"#v:newTMVar\">newTMVar</a> :: a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> (<a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a)","name":"newTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:newTMVar"},{"display_html":"<a href=\"#v:putTMVar\">putTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> ()","name":"putTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:putTMVar"},{"display_html":"<a href=\"#v:readTMVar\">readTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a","name":"readTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:readTMVar"},{"display_html":"<a href=\"#v:swapTMVar\">swapTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a","name":"swapTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:swapTMVar"},{"display_html":"<a href=\"#v:takeTMVar\">takeTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> a","name":"takeTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:takeTMVar"},{"display_html":"<a href=\"#v:tryPutTMVar\">tryPutTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"tryPutTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:tryPutTMVar"},{"display_html":"<a href=\"#v:tryReadTMVar\">tryReadTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a)","name":"tryReadTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:tryReadTMVar"},{"display_html":"<a href=\"#v:tryTakeTMVar\">tryTakeTMVar</a> :: <a href=\"Prelude.html#t:TMVar\" title=\"Prelude\">TMVar</a> a -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a)","name":"tryTakeTMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:tryTakeTMVar"},{"display_html":"<a href=\"#v:modifyTVar-39-\">modifyTVar'</a> :: <a href=\"Prelude.html#t:TVar\" title=\"Prelude\">TVar</a> a -&gt; (a -&gt; a) -&gt; <a href=\"Prelude.html#t:STM\" title=\"Prelude\">STM</a> ()","name":"modifyTVar'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:modifyTVar-39-"},{"display_html":"<a href=\"#v:decodeUtf8-39-\">decodeUtf8'</a> :: <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a> -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> <a href=\"Prelude.html#t:UnicodeException\" title=\"Prelude\">UnicodeException</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"decodeUtf8'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:decodeUtf8-39-"},{"display_html":"<a href=\"#v:decodeUtf8With\">decodeUtf8With</a> :: <a href=\"Prelude.html#t:OnDecodeError\" title=\"Prelude\">OnDecodeError</a> -&gt; <a href=\"Prelude.html#t:ByteString\" title=\"Prelude\">ByteString</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"decodeUtf8With","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:decodeUtf8With"},{"display_html":"<a href=\"#v:lenientDecode\">lenientDecode</a> :: <a href=\"Prelude.html#t:OnDecodeError\" title=\"Prelude\">OnDecodeError</a>","name":"lenientDecode","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:lenientDecode"},{"display_html":"<a href=\"#v:strictDecode\">strictDecode</a> :: <a href=\"Prelude.html#t:OnDecodeError\" title=\"Prelude\">OnDecodeError</a>","name":"strictDecode","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:strictDecode"},{"display_html":"<a href=\"#v:runExceptT\">runExceptT</a> :: <a href=\"Prelude.html#t:ExceptT\" title=\"Prelude\">ExceptT</a> e m a -&gt; m (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> e a)","name":"runExceptT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:runExceptT"},{"display_html":"<a href=\"#v:exceptToMaybeT\">exceptToMaybeT</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e a. <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> m =&gt; <a href=\"Prelude.html#t:ExceptT\" title=\"Prelude\">ExceptT</a> e m a -&gt; <a href=\"Prelude.html#t:MaybeT\" title=\"Prelude\">MaybeT</a> m a","name":"exceptToMaybeT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:exceptToMaybeT"},{"display_html":"<a href=\"#v:maybeToExceptT\">maybeToExceptT</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e a. <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> m =&gt; e -&gt; <a href=\"Prelude.html#t:MaybeT\" title=\"Prelude\">MaybeT</a> m a -&gt; <a href=\"Prelude.html#t:ExceptT\" title=\"Prelude\">ExceptT</a> e m a","name":"maybeToExceptT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:maybeToExceptT"},{"display_html":"<a href=\"#v:withReader\">withReader</a> :: (r' -&gt; r) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#t:Reader\" title=\"Control.Monad.Reader\">Reader</a> r a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#t:Reader\" title=\"Control.Monad.Reader\">Reader</a> r' a","name":"withReader","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:withReader"},{"display_html":"<a href=\"#v:withReaderT\">withReaderT</a> :: <span class=\"keyword\">forall</span> r' r (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a. (r' -&gt; r) -&gt; <a href=\"Prelude.html#t:ReaderT\" title=\"Prelude\">ReaderT</a> r m a -&gt; <a href=\"Prelude.html#t:ReaderT\" title=\"Prelude\">ReaderT</a> r' m a","name":"withReaderT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:withReaderT"},{"display_html":"<a href=\"#v:evalStateT\">evalStateT</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; <a href=\"Prelude.html#t:StateT\" title=\"Prelude\">StateT</a> s m a -&gt; s -&gt; m a","name":"evalStateT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:evalStateT"},{"display_html":"<a href=\"#v:execStateT\">execStateT</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; <a href=\"Prelude.html#t:StateT\" title=\"Prelude\">StateT</a> s m a -&gt; s -&gt; m s","name":"execStateT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:execStateT"},{"display_html":"<a href=\"#v:withState\">withState</a> :: (s -&gt; s) -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:State\" title=\"Control.Monad.State.Strict\">State</a> s a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-State-Strict.html#t:State\" title=\"Control.Monad.State.Strict\">State</a> s a","name":"withState","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:withState"},{"display_html":"<a href=\"#v:coerce\">coerce</a> :: <a href=\"Prelude.html#t:Coercible\" title=\"Prelude\">Coercible</a> a b =&gt; a -&gt; b","name":"coerce","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:coerce"},{"display_html":"<a href=\"#v:seq\">seq</a> :: a -&gt; b -&gt; b","name":"seq","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:seq"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Bifoldable\">Bifoldable</a> (p :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bifold\">bifold</a> :: <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m =&gt; p m m -&gt; m</li><li><a href=\"#v:bifoldMap\">bifoldMap</a> :: <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m =&gt; (a -&gt; m) -&gt; (b -&gt; m) -&gt; p a b -&gt; m</li><li><a href=\"#v:bifoldr\">bifoldr</a> :: (a -&gt; c -&gt; c) -&gt; (b -&gt; c -&gt; c) -&gt; c -&gt; p a b -&gt; c</li><li><a href=\"#v:bifoldl\">bifoldl</a> :: (c -&gt; a -&gt; c) -&gt; (c -&gt; b -&gt; c) -&gt; c -&gt; p a b -&gt; c</li></ul>","name":"Bifoldable bifold bifoldMap bifoldl bifoldr $dmbifold $dmbifoldMap $dmbifoldl $dmbifoldr","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Bifoldable"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> a. <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> (p a)) =&gt; <a href=\"#t:Bifunctor\">Bifunctor</a> (p :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bimap\">bimap</a> :: (a -&gt; b) -&gt; (c -&gt; d) -&gt; p a c -&gt; p b d</li><li><a href=\"#v:first\">first</a> :: (a -&gt; b) -&gt; p a c -&gt; p b c</li><li><a href=\"#v:second\">second</a> :: (b -&gt; c) -&gt; p a b -&gt; p a c</li></ul>","name":"Bifunctor bimap first second $dmbimap $dmfirst $dmsecond","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Bifunctor"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:Bifunctor\" title=\"Prelude\">Bifunctor</a> t, <a href=\"Prelude.html#t:Bifoldable\" title=\"Prelude\">Bifoldable</a> t) =&gt; <a href=\"#t:Bitraversable\">Bitraversable</a> (t :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:bitraverse\">bitraverse</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; (a -&gt; f c) -&gt; (b -&gt; f d) -&gt; t a b -&gt; f (t c d)</li></ul>","name":"Bitraversable bitraverse","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Bitraversable"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Compose\">Compose</a> (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: k1 -&gt; k) (a :: k1) = <a href=\"#v:Compose\">Compose</a> {<ul class=\"subs\"><li><a href=\"#v:getCompose\">getCompose</a> :: f (g a)</li></ul>}","name":"Compose Compose getCompose","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Compose"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Comparison\">Comparison</a> a = <a href=\"#v:Comparison\">Comparison</a> {<ul class=\"subs\"><li><a href=\"#v:getComparison\">getComparison</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Ordering\" title=\"Prelude\">Ordering</a></li></ul>}","name":"Comparison Comparison getComparison","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Comparison"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Contravariant\">Contravariant</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:contramap\">contramap</a> :: (a' -&gt; a) -&gt; f a -&gt; f a'</li><li><a href=\"#v:-62--36-\">(&gt;$)</a> :: b -&gt; f b -&gt; f a</li></ul>","name":"Contravariant >$ contramap $dm>$","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Contravariant"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Equivalence\">Equivalence</a> a = <a href=\"#v:Equivalence\">Equivalence</a> {<ul class=\"subs\"><li><a href=\"#v:getEquivalence\">getEquivalence</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li></ul>}","name":"Equivalence Equivalence getEquivalence","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Equivalence"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Op\">Op</a> a b = <a href=\"#v:Op\">Op</a> {<ul class=\"subs\"><li><a href=\"#v:getOp\">getOp</a> :: b -&gt; a</li></ul>}","name":"Op Op getOp","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Op"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Predicate\">Predicate</a> a = <a href=\"#v:Predicate\">Predicate</a> {<ul class=\"subs\"><li><a href=\"#v:getPredicate\">getPredicate</a> :: a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li></ul>}","name":"Predicate Predicate getPredicate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Predicate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WrappedMonoid\">WrappedMonoid</a> m","name":"WrappedMonoid","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:WrappedMonoid"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ByteString\">ByteString</a>","name":"ByteString","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ByteString"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ShortByteString\">ShortByteString</a>","name":"ShortByteString","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ShortByteString"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IntMap\">IntMap</a> a","name":"IntMap","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IntMap"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IntSet\">IntSet</a>","name":"IntSet","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IntSet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Map\">Map</a> k a","name":"Map","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Map"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Seq\">Seq</a> a","name":"Seq","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Seq"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Set\">Set</a> a","name":"Set","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Set"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:NFData\">NFData</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:rnf\">rnf</a> :: a -&gt; ()</li></ul>","name":"NFData rnf $dmrnf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:NFData"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"#t:Alternative\">Alternative</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:empty\">empty</a> :: f a</li><li><a href=\"#v:-60--124--62-\">(&lt;|&gt;)</a> :: f a -&gt; f a -&gt; f a</li><li><a href=\"#v:some\">some</a> :: f a -&gt; f [a]</li><li><a href=\"#v:many\">many</a> :: f a -&gt; f [a]</li></ul>","name":"Alternative <|> empty many some $dmmany $dmsome","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Alternative"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f =&gt; <a href=\"#t:Applicative\">Applicative</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pure\">pure</a> :: a -&gt; f a</li><li><a href=\"#v:-60--42--62-\">(&lt;*&gt;)</a> :: f (a -&gt; b) -&gt; f a -&gt; f b</li><li><a href=\"#v:liftA2\">liftA2</a> :: (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c</li><li><a href=\"#v:-42--62-\">(*&gt;)</a> :: f a -&gt; f b -&gt; f b</li><li><a href=\"#v:-60--42-\">(&lt;*)</a> :: f a -&gt; f b -&gt; f a</li></ul>","name":"Applicative *> <* <*> liftA2 pure $dm*> $dm<* $dm<*> $dmliftA2","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Applicative"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Functor\">Functor</a> (f :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fmap\">fmap</a> :: (a -&gt; b) -&gt; f a -&gt; f b</li><li><a href=\"#v:-60--36-\">(&lt;$)</a> :: a -&gt; f b -&gt; f a</li></ul>","name":"Functor <$ fmap $dm<$","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Functor"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m =&gt; <a href=\"#t:Monad\">Monad</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-62--62--61-\">(&gt;&gt;=)</a> :: m a -&gt; (a -&gt; m b) -&gt; m b</li><li><a href=\"#v:-62--62-\">(&gt;&gt;)</a> :: m a -&gt; m b -&gt; m b</li><li><a href=\"#v:return\">return</a> :: a -&gt; m a</li></ul>","name":"Monad >> >>= return $dm>> $dmreturn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Monad"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:Alternative\" title=\"Prelude\">Alternative</a> m, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; <a href=\"#t:MonadPlus\">MonadPlus</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mzero\">mzero</a> :: m a</li><li><a href=\"#v:mplus\">mplus</a> :: m a -&gt; m a -&gt; m a</li></ul>","name":"MonadPlus mplus mzero $dmmplus $dmmzero","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:MonadPlus"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> a =&gt; <a href=\"#t:Monoid\">Monoid</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mempty\">mempty</a> :: a</li><li><a href=\"#v:mappend\">mappend</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:mconcat\">mconcat</a> :: [a] -&gt; a</li></ul>","name":"Monoid mappend mconcat mempty $dmmappend $dmmconcat $dmmempty","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Monoid"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NonEmpty\">NonEmpty</a> a = a <a href=\"#v::-124-\">:|</a> [a]","name":"NonEmpty :|","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:NonEmpty"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Semigroup\">Semigroup</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-60--62-\">(&lt;&gt;)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:sconcat\">sconcat</a> :: <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a -&gt; a</li><li><a href=\"#v:stimes\">stimes</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b =&gt; b -&gt; a -&gt; a</li></ul>","name":"Semigroup <> sconcat stimes $dm<> $dmsconcat $dmstimes","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Semigroup"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Void\">Void</a>","name":"Void","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Void"},{"display_html":"<a href=\"#v:xor\">xor</a> :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Bits.html#t:Bits\" title=\"Data.Bits\">Bits</a> a =&gt; a -&gt; a -&gt; a","name":"xor","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:xor"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:STM\">STM</a> a","name":"STM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:STM"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TVar\">TVar</a> a","name":"TVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:TVar"},{"display_html":"<a href=\"#v:-38--38--38-\">(&amp;&amp;&amp;)</a> :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Control-Arrow.html#t:Arrow\" title=\"Control.Arrow\">Arrow</a> a =&gt; a b c -&gt; a b c' -&gt; a b (c, c')","name":"&&&","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-38--38--38-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadFail\">MonadFail</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fail\">fail</a> :: <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; m a</li></ul>","name":"MonadFail fail","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:MonadFail"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadIO\">MonadIO</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftIO\">liftIO</a> :: <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> a -&gt; m a</li></ul>","name":"MonadIO liftIO","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:MonadIO"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Either\">Either</a> a b<ul class=\"subs\"><li>= <a href=\"#v:Left\">Left</a> a</li><li>| <a href=\"#v:Right\">Right</a> b</li></ul>","name":"Either Left Right","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Either"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Foldable\">Foldable</a> (t :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fold\">fold</a> :: <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m =&gt; t m -&gt; m</li><li><a href=\"#v:foldMap\">foldMap</a> :: <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m =&gt; (a -&gt; m) -&gt; t a -&gt; m</li><li><a href=\"#v:foldMap-39-\">foldMap'</a> :: <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m =&gt; (a -&gt; m) -&gt; t a -&gt; m</li><li><a href=\"#v:foldr\">foldr</a> :: (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b</li><li><a href=\"#v:foldl-39-\">foldl'</a> :: (b -&gt; a -&gt; b) -&gt; b -&gt; t a -&gt; b</li><li><a href=\"#v:toList\">toList</a> :: t a -&gt; [a]</li><li><a href=\"#v:null\">null</a> :: t a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:length\">length</a> :: t a -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li></ul>","name":"Foldable fold foldMap foldMap' foldl' foldr length null toList $dmfold $dmfoldMap $dmfoldMap' $dmfoldl' $dmfoldr $dmlength $dmnull $dmtoList","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Foldable"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Const\">Const</a> a (b :: k) = <a href=\"#v:Const\">Const</a> {<ul class=\"subs\"><li><a href=\"#v:getConst\">getConst</a> :: a</li></ul>}","name":"Const Const getConst","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Const"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Identity\">Identity</a> a = <a href=\"#v:Identity\">Identity</a> {<ul class=\"subs\"><li><a href=\"#v:runIdentity\">runIdentity</a> :: a</li></ul>}","name":"Identity Identity runIdentity","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Identity"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Ap\">Ap</a> (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: k) = <a href=\"#v:Ap\">Ap</a> {<ul class=\"subs\"><li><a href=\"#v:getAp\">getAp</a> :: f a</li></ul>}","name":"Ap Ap getAp","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Ap"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:First\">First</a> a = <a href=\"#v:First\">First</a> {<ul class=\"subs\"><li><a href=\"#v:getFirst\">getFirst</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a</li></ul>}","name":"First First getFirst","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:First"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Last\">Last</a> a = <a href=\"#v:Last\">Last</a> {<ul class=\"subs\"><li><a href=\"#v:getLast\">getLast</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a</li></ul>}","name":"Last Last getLast","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Last"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Down\">Down</a> a = <a href=\"#v:Down\">Down</a> {<ul class=\"subs\"><li><a href=\"#v:getDown\">getDown</a> :: a</li></ul>}","name":"Down Down getDown","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Down"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Proxy\">Proxy</a> (t :: k) = <a href=\"#v:Proxy\">Proxy</a>","name":"Proxy Proxy","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Proxy"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:All\">All</a> = <a href=\"#v:All\">All</a> {<ul class=\"subs\"><li><a href=\"#v:getAll\">getAll</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li></ul>}","name":"All All getAll","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:All"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Alt\">Alt</a> (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: k) = <a href=\"#v:Alt\">Alt</a> {<ul class=\"subs\"><li><a href=\"#v:getAlt\">getAlt</a> :: f a</li></ul>}","name":"Alt Alt getAlt","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Alt"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Any\">Any</a> = <a href=\"#v:Any\">Any</a> {<ul class=\"subs\"><li><a href=\"#v:getAny\">getAny</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li></ul>}","name":"Any Any getAny","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Any"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Dual\">Dual</a> a = <a href=\"#v:Dual\">Dual</a> {<ul class=\"subs\"><li><a href=\"#v:getDual\">getDual</a> :: a</li></ul>}","name":"Dual Dual getDual","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Dual"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Endo\">Endo</a> a = <a href=\"#v:Endo\">Endo</a> {<ul class=\"subs\"><li><a href=\"#v:appEndo\">appEndo</a> :: a -&gt; a</li></ul>}","name":"Endo Endo appEndo","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Endo"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Product\">Product</a> a = <a href=\"#v:Product\">Product</a> {<ul class=\"subs\"><li><a href=\"#v:getProduct\">getProduct</a> :: a</li></ul>}","name":"Product Product getProduct","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Product"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Sum\">Sum</a> a = <a href=\"#v:Sum\">Sum</a> {<ul class=\"subs\"><li><a href=\"#v:getSum\">getSum</a> :: a</li></ul>}","name":"Sum Sum getSum","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Sum"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsString\">IsString</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromString\">fromString</a> :: <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; a</li></ul>","name":"IsString fromString","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IsString"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> t, <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t) =&gt; <a href=\"#t:Traversable\">Traversable</a> (t :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:traverse\">traverse</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)</li><li><a href=\"#v:sequenceA\">sequenceA</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; t (f a) -&gt; f (t a)</li><li><a href=\"#v:mapM\">mapM</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; (a -&gt; m b) -&gt; t a -&gt; m (t b)</li><li><a href=\"#v:sequence\">sequence</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; t (m a) -&gt; m (t a)</li></ul>","name":"Traversable mapM sequence sequenceA traverse $dmmapM $dmsequence $dmsequenceA $dmtraverse","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Traversable"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Typeable\">Typeable</a> (a :: k)","name":"Typeable","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Typeable"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Bounded\">Bounded</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:minBound\">minBound</a> :: a</li><li><a href=\"#v:maxBound\">maxBound</a> :: a</li></ul>","name":"Bounded maxBound minBound","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Bounded"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Enum\">Enum</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:succ\">succ</a> :: a -&gt; a</li><li><a href=\"#v:pred\">pred</a> :: a -&gt; a</li><li><a href=\"#v:toEnum\">toEnum</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; a</li><li><a href=\"#v:fromEnum\">fromEnum</a> :: a -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li><a href=\"#v:enumFrom\">enumFrom</a> :: a -&gt; [a]</li><li><a href=\"#v:enumFromThen\">enumFromThen</a> :: a -&gt; a -&gt; [a]</li><li><a href=\"#v:enumFromTo\">enumFromTo</a> :: a -&gt; a -&gt; [a]</li><li><a href=\"#v:enumFromThenTo\">enumFromThenTo</a> :: a -&gt; a -&gt; a -&gt; [a]</li></ul>","name":"Enum enumFrom enumFromThen enumFromThenTo enumFromTo fromEnum pred succ toEnum $dmenumFrom $dmenumFromThen $dmenumFromThenTo $dmenumFromTo $dmpred $dmsucc","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Enum"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:Typeable\" title=\"Prelude\">Typeable</a> e, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> e) =&gt; <a href=\"#t:Exception\">Exception</a> e <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toException\">toException</a> :: e -&gt; <a href=\"Prelude.html#t:SomeException\" title=\"Prelude\">SomeException</a></li><li><a href=\"#v:fromException\">fromException</a> :: <a href=\"Prelude.html#t:SomeException\" title=\"Prelude\">SomeException</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> e</li><li><a href=\"#v:displayException\">displayException</a> :: e -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a></li><li><a href=\"#v:backtraceDesired\">backtraceDesired</a> :: e -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li></ul>","name":"Exception backtraceDesired displayException fromException toException $dmbacktraceDesired $dmdisplayException $dmfromException $dmtoException","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Exception"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeException\">SomeException</a> = (<a href=\"Prelude.html#t:Exception\" title=\"Prelude\">Exception</a> e, <a href=\"https://hackage.haskell.org/package/ghc-internal-9.1202.0/docs/GHC-Internal-Exception-Type.html#t:HasExceptionContext\" title=\"GHC.Internal.Exception.Type\">HasExceptionContext</a>) =&gt;  <a href=\"#v:SomeException\">SomeException</a> e","name":"SomeException SomeException","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:SomeException"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> a =&gt; <a href=\"#t:Floating\">Floating</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pi\">pi</a> :: a</li><li><a href=\"#v:exp\">exp</a> :: a -&gt; a</li><li><a href=\"#v:sqrt\">sqrt</a> :: a -&gt; a</li><li><a href=\"#v:-42--42-\">(**)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:logBase\">logBase</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:sin\">sin</a> :: a -&gt; a</li><li><a href=\"#v:cos\">cos</a> :: a -&gt; a</li><li><a href=\"#v:tan\">tan</a> :: a -&gt; a</li><li><a href=\"#v:asin\">asin</a> :: a -&gt; a</li><li><a href=\"#v:acos\">acos</a> :: a -&gt; a</li><li><a href=\"#v:atan\">atan</a> :: a -&gt; a</li><li><a href=\"#v:sinh\">sinh</a> :: a -&gt; a</li><li><a href=\"#v:cosh\">cosh</a> :: a -&gt; a</li><li><a href=\"#v:tanh\">tanh</a> :: a -&gt; a</li><li><a href=\"#v:asinh\">asinh</a> :: a -&gt; a</li><li><a href=\"#v:acosh\">acosh</a> :: a -&gt; a</li><li><a href=\"#v:atanh\">atanh</a> :: a -&gt; a</li></ul>","name":"Floating ** acos acosh asin asinh atan atanh cos cosh exp logBase pi sin sinh sqrt tan tanh $dm** $dmlogBase $dmsqrt $dmtan $dmtanh","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Floating"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:RealFrac\" title=\"Prelude\">RealFrac</a> a, <a href=\"Prelude.html#t:Floating\" title=\"Prelude\">Floating</a> a) =&gt; <a href=\"#t:RealFloat\">RealFloat</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:floatRadix\">floatRadix</a> :: a -&gt; <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li><a href=\"#v:floatDigits\">floatDigits</a> :: a -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li><a href=\"#v:floatRange\">floatRange</a> :: a -&gt; (<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>, <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>)</li><li><a href=\"#v:decodeFloat\">decodeFloat</a> :: a -&gt; (<a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>, <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>)</li><li><a href=\"#v:encodeFloat\">encodeFloat</a> :: <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; a</li><li><a href=\"#v:isNaN\">isNaN</a> :: a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:isInfinite\">isInfinite</a> :: a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:isDenormalized\">isDenormalized</a> :: a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:isNegativeZero\">isNegativeZero</a> :: a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:isIEEE\">isIEEE</a> :: a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:atan2\">atan2</a> :: a -&gt; a -&gt; a</li></ul>","name":"RealFloat atan2 decodeFloat encodeFloat floatDigits floatRadix floatRange isDenormalized isIEEE isInfinite isNaN isNegativeZero $dmatan2","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:RealFloat"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ZipList\">ZipList</a> a = <a href=\"#v:ZipList\">ZipList</a> {<ul class=\"subs\"><li><a href=\"#v:getZipList\">getZipList</a> :: [a]</li></ul>}","name":"ZipList ZipList getZipList","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ZipList"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Generic\">Generic</a> a","name":"Generic","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Generic"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FilePath\">FilePath</a> = <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"FilePath","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:FilePath"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BufferMode\">BufferMode</a><ul class=\"subs\"><li>= <a href=\"#v:NoBuffering\">NoBuffering</a></li><li>| <a href=\"#v:LineBuffering\">LineBuffering</a></li><li>| <a href=\"#v:BlockBuffering\">BlockBuffering</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>)</li></ul>","name":"BufferMode BlockBuffering LineBuffering NoBuffering","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:BufferMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Handle\">Handle</a>","name":"Handle","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Handle"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IOMode\">IOMode</a><ul class=\"subs\"><li>= <a href=\"#v:ReadMode\">ReadMode</a></li><li>| <a href=\"#v:WriteMode\">WriteMode</a></li><li>| <a href=\"#v:AppendMode\">AppendMode</a></li><li>| <a href=\"#v:ReadWriteMode\">ReadWriteMode</a></li></ul>","name":"IOMode AppendMode ReadMode ReadWriteMode WriteMode","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IOMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IORef\">IORef</a> a","name":"IORef","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IORef"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Int16\">Int16</a>","name":"Int16","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Int16"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Int32\">Int32</a>","name":"Int32","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Int32"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Int64\">Int64</a>","name":"Int64","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Int64"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Int8\">Int8</a>","name":"Int8","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Int8"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsList\">IsList</a> l <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromList\">fromList</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Item\" title=\"GHC.Exts\">Item</a> l] -&gt; l</li><li><a href=\"#v:fromListN\">fromListN</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Item\" title=\"GHC.Exts\">Item</a> l] -&gt; l</li></ul>","name":"IsList fromList fromListN $dmfromListN","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IsList"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MVar\">MVar</a> a","name":"MVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:MVar"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Num\">Num</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-43-\">(+)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:-45-\">(-)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:-42-\">(*)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:negate\">negate</a> :: a -&gt; a</li><li><a href=\"#v:abs\">abs</a> :: a -&gt; a</li><li><a href=\"#v:signum\">signum</a> :: a -&gt; a</li><li><a href=\"#v:fromInteger\">fromInteger</a> :: <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; a</li></ul>","name":"Num * + - abs fromInteger negate signum $dm- $dmnegate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Num"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsLabel\">IsLabel</a> (x :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromLabel\">fromLabel</a> :: a</li></ul>","name":"IsLabel fromLabel","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IsLabel"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Read\">Read</a> a","name":"Read","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Read"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> a =&gt; <a href=\"#t:Fractional\">Fractional</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-47-\">(/)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:recip\">recip</a> :: a -&gt; a</li><li><a href=\"#v:fromRational\">fromRational</a> :: <a href=\"Prelude.html#t:Rational\" title=\"Prelude\">Rational</a> -&gt; a</li></ul>","name":"Fractional / fromRational recip $dm/ $dmrecip","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Fractional"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:Real\" title=\"Prelude\">Real</a> a, <a href=\"Prelude.html#t:Enum\" title=\"Prelude\">Enum</a> a) =&gt; <a href=\"#t:Integral\">Integral</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:quot\">quot</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:rem\">rem</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:div\">div</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:mod\">mod</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:quotRem\">quotRem</a> :: a -&gt; a -&gt; (a, a)</li><li><a href=\"#v:divMod\">divMod</a> :: a -&gt; a -&gt; (a, a)</li><li><a href=\"#v:toInteger\">toInteger</a> :: a -&gt; <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li></ul>","name":"Integral div divMod mod quot quotRem rem toInteger $dmdiv $dmdivMod $dmmod $dmquot $dmrem","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Integral"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ratio\">Ratio</a> a","name":"Ratio","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Ratio"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Rational\">Rational</a> = <a href=\"Prelude.html#t:Ratio\" title=\"Prelude\">Ratio</a> <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>","name":"Rational","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Rational"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> a, <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> a) =&gt; <a href=\"#t:Real\">Real</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toRational\">toRational</a> :: a -&gt; <a href=\"Prelude.html#t:Rational\" title=\"Prelude\">Rational</a></li></ul>","name":"Real toRational","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Real"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:Real\" title=\"Prelude\">Real</a> a, <a href=\"Prelude.html#t:Fractional\" title=\"Prelude\">Fractional</a> a) =&gt; <a href=\"#t:RealFrac\">RealFrac</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:properFraction\">properFraction</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b =&gt; a -&gt; (b, a)</li><li><a href=\"#v:truncate\">truncate</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b =&gt; a -&gt; b</li><li><a href=\"#v:round\">round</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b =&gt; a -&gt; b</li><li><a href=\"#v:ceiling\">ceiling</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b =&gt; a -&gt; b</li><li><a href=\"#v:floor\">floor</a> :: <a href=\"Prelude.html#t:Integral\" title=\"Prelude\">Integral</a> b =&gt; a -&gt; b</li></ul>","name":"RealFrac ceiling floor properFraction round truncate $dmceiling $dmfloor $dmround $dmtruncate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:RealFrac"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Show\">Show</a> a","name":"Show","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Show"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CallStack\">CallStack</a>","name":"CallStack","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:CallStack"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:HasCallStack\">HasCallStack</a> = ?callStack :: <a href=\"Prelude.html#t:CallStack\" title=\"Prelude\">CallStack</a>","name":"HasCallStack","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:HasCallStack"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:KnownNat\">KnownNat</a> (n :: <a href=\"Prelude.html#t:Nat\" title=\"Prelude\">Nat</a>)","name":"KnownNat","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:KnownNat"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Nat\">Nat</a> = <a href=\"Prelude.html#t:Natural\" title=\"Prelude\">Natural</a>","name":"Nat","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Nat"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeNat\">SomeNat</a> = <a href=\"Prelude.html#t:KnownNat\" title=\"Prelude\">KnownNat</a> n =&gt;  <a href=\"#v:SomeNat\">SomeNat</a> (<a href=\"Prelude.html#t:Proxy\" title=\"Prelude\">Proxy</a> n)","name":"SomeNat SomeNat","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:SomeNat"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Word16\">Word16</a>","name":"Word16","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Word16"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Word32\">Word32</a>","name":"Word32","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Word32"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Word64\">Word64</a>","name":"Word64","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Word64"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Word8\">Word8</a>","name":"Word8","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Word8"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Eq\">Eq</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-61--61-\">(==)</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:-47--61-\">(/=)</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li></ul>","name":"Eq /= == $dm/= $dm==","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Eq"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a =&gt; <a href=\"#t:Ord\">Ord</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:compare\">compare</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Ordering\" title=\"Prelude\">Ordering</a></li><li><a href=\"#v:-60-\">(&lt;)</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:-60--61-\">(&lt;=)</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:-62-\">(&gt;)</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:-62--61-\">(&gt;=)</a> :: a -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:max\">max</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:min\">min</a> :: a -&gt; a -&gt; a</li></ul>","name":"Ord < <= > >= compare max min $dm< $dm<= $dm> $dm>= $dmcompare $dmmax $dmmin","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Ord"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IO\">IO</a> a","name":"IO","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IO"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ordering\">Ordering</a><ul class=\"subs\"><li>= <a href=\"#v:LT\">LT</a></li><li>| <a href=\"#v:EQ\">EQ</a></li><li>| <a href=\"#v:GT\">GT</a></li></ul>","name":"Ordering EQ GT LT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Ordering"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a =&gt; <a href=\"#t:Hashable\">Hashable</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:hashWithSalt\">hashWithSalt</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; a -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li></ul>","name":"Hashable hashWithSalt $dmhashWithSalt","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Hashable"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadReader\">MonadReader</a> r (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) | m -&gt; r <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:reader\">reader</a> :: (r -&gt; a) -&gt; m a</li></ul>","name":"MonadReader reader $dmreader","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:MonadReader"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadState\">MonadState</a> s (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) | m -&gt; s <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:state\">state</a> :: (s -&gt; (a, s)) -&gt; m a</li></ul>","name":"MonadState state $dmstate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:MonadState"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:One\">One</a> x <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:OneItem\">OneItem</a> x</li><li><a href=\"#v:one\">one</a> :: <a href=\"Prelude.html#t:OneItem\" title=\"Prelude\">OneItem</a> x -&gt; x</li></ul>","name":"One OneItem one","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:One"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:OneItem\">OneItem</a> x","name":"OneItem","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:OneItem"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Undefined\">Undefined</a> = <a href=\"#v:Undefined\">Undefined</a>","name":"Undefined Undefined","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Undefined"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Bug\">Bug</a> = <a href=\"#v:Bug\">Bug</a> <a href=\"Prelude.html#t:SomeException\" title=\"Prelude\">SomeException</a> <a href=\"Prelude.html#t:CallStack\" title=\"Prelude\">CallStack</a>","name":"Bug Bug","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Bug"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ConvertUtf8\">ConvertUtf8</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:encodeUtf8\">encodeUtf8</a> :: a -&gt; b</li><li><a href=\"#v:decodeUtf8\">decodeUtf8</a> :: b -&gt; a</li><li><a href=\"#v:decodeUtf8Strict\">decodeUtf8Strict</a> :: b -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> <a href=\"Prelude.html#t:UnicodeException\" title=\"Prelude\">UnicodeException</a> a</li></ul>","name":"ConvertUtf8 decodeUtf8 decodeUtf8Strict encodeUtf8","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ConvertUtf8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LByteString\">LByteString</a> = <a href=\"https://hackage.haskell.org/package/bytestring-0.12.2.0/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"LByteString","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:LByteString"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LText\">LText</a> = <a href=\"https://hackage.haskell.org/package/text-2.1.2/docs/Data-Text-Lazy.html#t:Text\" title=\"Data.Text.Lazy\">Text</a>","name":"LText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:LText"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:LazyStrict\">LazyStrict</a> l s | l -&gt; s, s -&gt; l <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toLazy\">toLazy</a> :: s -&gt; l</li><li><a href=\"#v:toStrict\">toStrict</a> :: l -&gt; s</li></ul>","name":"LazyStrict toLazy toStrict","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:LazyStrict"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToLText\">ToLText</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toLText\">toLText</a> :: a -&gt; <a href=\"Prelude.html#t:LText\" title=\"Prelude\">LText</a></li></ul>","name":"ToLText toLText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ToLText"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToString\">ToString</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toString\">toString</a> :: a -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a></li></ul>","name":"ToString toString","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ToString"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToText\">ToText</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toText\">toText</a> :: a -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li></ul>","name":"ToText toText","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ToText"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TMVar\">TMVar</a> a","name":"TMVar","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:TMVar"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:OnDecodeError\">OnDecodeError</a> = <a href=\"Prelude.html#t:OnError\" title=\"Prelude\">OnError</a> <a href=\"Prelude.html#t:Word8\" title=\"Prelude\">Word8</a> <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>","name":"OnDecodeError","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:OnDecodeError"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:OnError\">OnError</a> a b = <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b","name":"OnError","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:OnError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnicodeException\">UnicodeException</a>","name":"UnicodeException","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:UnicodeException"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Text\">Text</a>","name":"Text","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Text"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> (t m)) =&gt; <a href=\"#t:MonadTrans\">MonadTrans</a> (t :: (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:lift\">lift</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m a -&gt; t m a</li></ul>","name":"MonadTrans lift","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:MonadTrans"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ExceptT\">ExceptT</a> e (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:ExceptT\">ExceptT</a> (m (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> e a))","name":"ExceptT ExceptT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ExceptT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IdentityT\">IdentityT</a> (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: k)","name":"IdentityT runIdentityT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IdentityT"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MaybeT\">MaybeT</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:MaybeT\">MaybeT</a> {<ul class=\"subs\"><li><a href=\"#v:runMaybeT\">runMaybeT</a> :: m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a)</li></ul>}","name":"MaybeT MaybeT runMaybeT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:MaybeT"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ReaderT\">ReaderT</a> r (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:ReaderT\">ReaderT</a> {<ul class=\"subs\"><li><a href=\"#v:runReaderT\">runReaderT</a> :: r -&gt; m a</li></ul>}","name":"ReaderT ReaderT runReaderT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:ReaderT"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:StateT\">StateT</a> s (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:StateT\">StateT</a> {<ul class=\"subs\"><li><a href=\"#v:runStateT\">runStateT</a> :: s -&gt; m (a, s)</li></ul>}","name":"StateT StateT runStateT","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:StateT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:HashMap\">HashMap</a> k v","name":"HashMap","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:HashMap"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:HashSet\">HashSet</a> a","name":"HashSet","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:HashSet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Integer\">Integer</a>","name":"Integer","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Integer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Natural\">Natural</a>","name":"Natural","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Natural"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:String\">String</a> = [<a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>]","name":"String","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:String"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Maybe\">Maybe</a> a<ul class=\"subs\"><li>= <a href=\"#v:Nothing\">Nothing</a></li><li>| <a href=\"#v:Just\">Just</a> a</li></ul>","name":"Maybe Just Nothing","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Maybe"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:CmpNat\">CmpNat</a> (a :: <a href=\"Prelude.html#t:Natural\" title=\"Prelude\">Natural</a>) (b :: <a href=\"Prelude.html#t:Natural\" title=\"Prelude\">Natural</a>) :: <a href=\"Prelude.html#t:Ordering\" title=\"Prelude\">Ordering</a> <span class=\"keyword\">where ...</span>","name":"CmpNat","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:CmpNat"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Bool\">Bool</a><ul class=\"subs\"><li>= <a href=\"#v:False\">False</a></li><li>| <a href=\"#v:True\">True</a></li></ul>","name":"Bool False True","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Bool"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Char\">Char</a>","name":"Char","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Char"},{"display_html":"<span class=\"keyword\">class</span> a ~R# b =&gt; <a href=\"#t:Coercible\">Coercible</a> (a :: k) (b :: k)","name":"Coercible","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Coercible"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Double\">Double</a> = <a href=\"#v:D-35-\">D#</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Double-35-\" title=\"GHC.Exts\">Double#</a>","name":"Double D#","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Double"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Float\">Float</a> = <a href=\"#v:F-35-\">F#</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Float-35-\" title=\"GHC.Exts\">Float#</a>","name":"Float F#","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Float"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Int\">Int</a>","name":"Int","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Int"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Word\">Word</a>","name":"Word","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Word"},{"display_html":"<span class=\"keyword\">class</span> a ~# b =&gt; (a :: k) <a href=\"#t:-126-\">~</a> (b :: k)","name":"~","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:-126-"},{"display_html":"<a href=\"#v:for\">for</a> :: (<a href=\"Prelude.html#t:Traversable\" title=\"Prelude\">Traversable</a> t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t a -&gt; (a -&gt; f b) -&gt; f (t b)","name":"for","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:for"},{"display_html":"<span class=\"keyword\">data</span> (a :: k) <a href=\"#t::-126-:\">:~:</a> (b :: k)","name":":~:","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t::-126-:"},{"display_html":"<a href=\"#v:-60--60--36-\">(&lt;&lt;$)</a> :: (<a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f, <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> g) =&gt; a -&gt; f (g b) -&gt; f (g a)","name":"<<$","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--60--36-"},{"display_html":"<a href=\"#v:-36--62--62-\">($&gt;&gt;)</a> :: (<a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f, <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> g) =&gt; f (g a) -&gt; b -&gt; f (g b)","name":"$>>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-36--62--62-"},{"display_html":"<a href=\"#v:-60--60--38--62--62-\">(&lt;&lt;&amp;&gt;&gt;)</a> :: (<a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f, <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> g) =&gt; f (g a) -&gt; (a -&gt; b) -&gt; f (g b)","name":"<<&>>","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-60--60--38--62--62-"},{"display_html":"<a href=\"#v:-63-:-33-\">(?:!)</a> :: <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b) -&gt; m b -&gt; m b","name":"?:!","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-63-:-33-"},{"display_html":"<a href=\"#v:insertWithM\">insertWithM</a> :: (<a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> k, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m) =&gt; (a -&gt; a -&gt; m a) -&gt; k -&gt; a -&gt; <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> k a -&gt; m (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> k a)","name":"insertWithM","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:insertWithM"},{"display_html":"<a href=\"#v:identity\">identity</a> :: a -&gt; a","name":"identity","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:identity"},{"display_html":"<a href=\"#v:ifor_\">ifor_</a> :: (<a href=\"https://hackage.haskell.org/package/indexed-traversable-0.1.4/docs/Data-Foldable-WithIndex.html#t:FoldableWithIndex\" title=\"Data.Foldable.WithIndex\">FoldableWithIndex</a> i t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t a -&gt; (i -&gt; a -&gt; f b) -&gt; f ()","name":"ifor_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:ifor_"},{"display_html":"<a href=\"#v:itraverse_\">itraverse_</a> :: (<a href=\"https://hackage.haskell.org/package/indexed-traversable-0.1.4/docs/Data-Foldable-WithIndex.html#t:FoldableWithIndex\" title=\"Data.Foldable.WithIndex\">FoldableWithIndex</a> i t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; (i -&gt; a -&gt; f b) -&gt; t a -&gt; f ()","name":"itraverse_","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:itraverse_"},{"display_html":"<a href=\"#v:ifor\">ifor</a> :: (<a href=\"https://hackage.haskell.org/package/indexed-traversable-0.1.4/docs/Data-Traversable-WithIndex.html#t:TraversableWithIndex\" title=\"Data.Traversable.WithIndex\">TraversableWithIndex</a> i t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; t a -&gt; (i -&gt; a -&gt; f b) -&gt; f (t b)","name":"ifor","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:ifor"},{"display_html":"<a href=\"#v:_Left\">_Left</a> :: <a href=\"Prelude.html#t:Prism\" title=\"Prelude\">Prism</a> (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b) (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> c b) a c","name":"_Left","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:_Left"},{"display_html":"<a href=\"#v:_Right\">_Right</a> :: <a href=\"Prelude.html#t:Prism\" title=\"Prelude\">Prism</a> (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a b) (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> a c) b c","name":"_Right","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:_Right"},{"display_html":"<a href=\"#v:_Just\">_Just</a> :: <a href=\"Prelude.html#t:Prism\" title=\"Prelude\">Prism</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b) a b","name":"_Just","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:_Just"},{"display_html":"<a href=\"#v:_Nothing\">_Nothing</a> :: <a href=\"Prelude.html#t:Prism-39-\" title=\"Prelude\">Prism'</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) ()","name":"_Nothing","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:_Nothing"},{"display_html":"<a href=\"#v:isn-39-t\">isn't</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s a. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a> =&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is s a -&gt; s -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isn't","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:isn-39-t"},{"display_html":"<a href=\"#v:preview\">preview</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s a. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a> =&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is s a -&gt; s -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"preview","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:preview"},{"display_html":"<a href=\"#v:cosmosOf\">cosmosOf</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a> =&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is a a -&gt; <a href=\"Prelude.html#t:Fold\" title=\"Prelude\">Fold</a> a a","name":"cosmosOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:cosmosOf"},{"display_html":"<a href=\"#v:folded\">folded</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> f =&gt; <a href=\"Prelude.html#t:Fold\" title=\"Prelude\">Fold</a> (f a) a","name":"folded","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:folded"},{"display_html":"<a href=\"#v:toListOf\">toListOf</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s a. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a> =&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is s a -&gt; s -&gt; [a]","name":"toListOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:toListOf"},{"display_html":"<a href=\"#v:to\">to</a> :: (s -&gt; a) -&gt; <a href=\"Prelude.html#t:Getter\" title=\"Prelude\">Getter</a> s a","name":"to","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:to"},{"display_html":"<a href=\"#v:view\">view</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s a. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a> =&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is s a -&gt; s -&gt; a","name":"view","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:view"},{"display_html":"<a href=\"#v:-37-\">(%)</a> :: <span class=\"keyword\">forall</span> k l m (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) (js :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) (ks :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t u v a b. (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:JoinKinds\" title=\"Optics.Optic\">JoinKinds</a> k l m, <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:AppendIndices\" title=\"Optics.Optic\">AppendIndices</a> is js ks) =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s t u v -&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> l js u v a b -&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> m ks s t a b","name":"%","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-37-"},{"display_html":"<a href=\"#v:castOptic\">castOptic</a> :: <span class=\"keyword\">forall</span> destKind srcKind (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t a b. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> srcKind destKind =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> srcKind is s t a b -&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> destKind is s t a b","name":"castOptic","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:castOptic"},{"display_html":"<a href=\"#v:coerced\">coerced</a> :: (<a href=\"Prelude.html#t:Coercible\" title=\"Prelude\">Coercible</a> s a, <a href=\"Prelude.html#t:Coercible\" title=\"Prelude\">Coercible</a> t b) =&gt; <a href=\"Prelude.html#t:Iso\" title=\"Prelude\">Iso</a> s t a b","name":"coerced","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:coerced"},{"display_html":"<a href=\"#v:iso\">iso</a> :: (s -&gt; a) -&gt; (b -&gt; t) -&gt; <a href=\"Prelude.html#t:Iso\" title=\"Prelude\">Iso</a> s t a b","name":"iso","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:iso"},{"display_html":"<a href=\"#v:simple\">simple</a> :: <a href=\"Prelude.html#t:Iso-39-\" title=\"Prelude\">Iso'</a> a a","name":"simple","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:simple"},{"display_html":"<a href=\"#v:ifolded\">ifolded</a> :: <a href=\"https://hackage.haskell.org/package/indexed-traversable-0.1.4/docs/Data-Foldable-WithIndex.html#t:FoldableWithIndex\" title=\"Data.Foldable.WithIndex\">FoldableWithIndex</a> i f =&gt; <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-IxFold.html#t:IxFold\" title=\"Optics.IxFold\">IxFold</a> i (f a) a","name":"ifolded","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:ifolded"},{"display_html":"<a href=\"#v:lens\">lens</a> :: (s -&gt; a) -&gt; (s -&gt; b -&gt; t) -&gt; <a href=\"Prelude.html#t:Lens\" title=\"Prelude\">Lens</a> s t a b","name":"lens","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:lens"},{"display_html":"<a href=\"#v:lensVL\">lensVL</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Lens.html#t:LensVL\" title=\"Optics.Lens\">LensVL</a> s t a b -&gt; <a href=\"Prelude.html#t:Lens\" title=\"Prelude\">Lens</a> s t a b","name":"lensVL","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:lensVL"},{"display_html":"<a href=\"#v:prism\">prism</a> :: (b -&gt; t) -&gt; (s -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> t a) -&gt; <a href=\"Prelude.html#t:Prism\" title=\"Prelude\">Prism</a> s t a b","name":"prism","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:prism"},{"display_html":"<a href=\"#v:prism-39-\">prism'</a> :: (b -&gt; s) -&gt; (s -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) -&gt; <a href=\"Prelude.html#t:Prism\" title=\"Prelude\">Prism</a> s s a b","name":"prism'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:prism-39-"},{"display_html":"<a href=\"#v:over\">over</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t a b. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Setter\" title=\"Prelude\">A_Setter</a> =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s t a b -&gt; (a -&gt; b) -&gt; s -&gt; t","name":"over","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:over"},{"display_html":"<a href=\"#v:transformOf\">transformOf</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a b. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Setter\" title=\"Prelude\">A_Setter</a> =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is a b a b -&gt; (b -&gt; b) -&gt; a -&gt; b","name":"transformOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:transformOf"},{"display_html":"<a href=\"#v:transformMOf\">transformMOf</a> :: <span class=\"keyword\">forall</span> k m (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a b. (<a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Traversal\" title=\"Prelude\">A_Traversal</a>, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m) =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is a b a b -&gt; (b -&gt; m b) -&gt; a -&gt; m b","name":"transformMOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:transformMOf"},{"display_html":"<a href=\"#v:traversalVL\">traversalVL</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Traversal.html#t:TraversalVL\" title=\"Optics.Traversal\">TraversalVL</a> s t a b -&gt; <a href=\"Prelude.html#t:Traversal\" title=\"Prelude\">Traversal</a> s t a b","name":"traversalVL","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traversalVL"},{"display_html":"<a href=\"#v:traverseOf\">traverseOf</a> :: <span class=\"keyword\">forall</span> k f (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t a b. (<a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Traversal\" title=\"Prelude\">A_Traversal</a>, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s t a b -&gt; (a -&gt; f b) -&gt; s -&gt; f t","name":"traverseOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traverseOf"},{"display_html":"<a href=\"#v:traversed\">traversed</a> :: <a href=\"Prelude.html#t:Traversable\" title=\"Prelude\">Traversable</a> t =&gt; <a href=\"Prelude.html#t:Traversal\" title=\"Prelude\">Traversal</a> (t a) (t b) a b","name":"traversed","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:traversed"},{"display_html":"<a href=\"#v:makeFields\">makeFields</a> :: <a href=\"https://hackage.haskell.org/package/ghc-internal-9.1202.0/docs/GHC-Internal-TH-Syntax.html#t:Name\" title=\"GHC.Internal.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/ghc-internal-9.1202.0/docs/GHC-Internal-TH-Lib.html#t:DecsQ\" title=\"GHC.Internal.TH.Lib\">DecsQ</a>","name":"makeFields","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:makeFields"},{"display_html":"<a href=\"#v:makeLenses\">makeLenses</a> :: <a href=\"https://hackage.haskell.org/package/ghc-internal-9.1202.0/docs/GHC-Internal-TH-Syntax.html#t:Name\" title=\"GHC.Internal.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/ghc-internal-9.1202.0/docs/GHC-Internal-TH-Lib.html#t:DecsQ\" title=\"GHC.Internal.TH.Lib\">DecsQ</a>","name":"makeLenses","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:makeLenses"},{"display_html":"<a href=\"#v:makePrisms\">makePrisms</a> :: <a href=\"https://hackage.haskell.org/package/ghc-internal-9.1202.0/docs/GHC-Internal-TH-Syntax.html#t:Name\" title=\"GHC.Internal.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/ghc-internal-9.1202.0/docs/GHC-Internal-TH-Lib.html#t:DecsQ\" title=\"GHC.Internal.TH.Lib\">DecsQ</a>","name":"makePrisms","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:makePrisms"},{"display_html":"<a href=\"#v:ifoldMap\">ifoldMap</a> :: (<a href=\"https://hackage.haskell.org/package/indexed-traversable-0.1.4/docs/Data-Foldable-WithIndex.html#t:FoldableWithIndex\" title=\"Data.Foldable.WithIndex\">FoldableWithIndex</a> i f, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> m) =&gt; (i -&gt; a -&gt; m) -&gt; f a -&gt; m","name":"ifoldMap","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:ifoldMap"},{"display_html":"<a href=\"#v:itraverse\">itraverse</a> :: (<a href=\"https://hackage.haskell.org/package/indexed-traversable-0.1.4/docs/Data-Traversable-WithIndex.html#t:TraversableWithIndex\" title=\"Data.Traversable.WithIndex\">TraversableWithIndex</a> i t, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; (i -&gt; a -&gt; f b) -&gt; t a -&gt; f (t b)","name":"itraverse","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:itraverse"},{"display_html":"<a href=\"#v:_1\">_1</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Data-Tuple-Optics.html#t:Field1\" title=\"Data.Tuple.Optics\">Field1</a> s t a b =&gt; <a href=\"Prelude.html#t:Lens\" title=\"Prelude\">Lens</a> s t a b","name":"_1","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:_1"},{"display_html":"<a href=\"#v:_2\">_2</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Data-Tuple-Optics.html#t:Field2\" title=\"Data.Tuple.Optics\">Field2</a> s t a b =&gt; <a href=\"Prelude.html#t:Lens\" title=\"Prelude\">Lens</a> s t a b","name":"_2","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:_2"},{"display_html":"<a href=\"#v:_3\">_3</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Data-Tuple-Optics.html#t:Field3\" title=\"Data.Tuple.Optics\">Field3</a> s t a b =&gt; <a href=\"Prelude.html#t:Lens\" title=\"Prelude\">Lens</a> s t a b","name":"_3","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:_3"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:AffineTraversal\">AffineTraversal</a> s t a b = <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-AffineTraversal.html#t:An_AffineTraversal\" title=\"Optics.AffineTraversal\">An_AffineTraversal</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s t a b","name":"AffineTraversal","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:AffineTraversal"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:AffineTraversal-39-\">AffineTraversal'</a> s a = <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-AffineTraversal.html#t:An_AffineTraversal\" title=\"Optics.AffineTraversal\">An_AffineTraversal</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s a","name":"AffineTraversal'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:AffineTraversal-39-"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Prelude.html#t:Ixed\" title=\"Prelude\">Ixed</a> m, <a href=\"Prelude.html#t:IxKind\" title=\"Prelude\">IxKind</a> m <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-AffineTraversal.html#t:An_AffineTraversal\" title=\"Optics.AffineTraversal\">An_AffineTraversal</a>) =&gt; <a href=\"#t:At\">At</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:at\">at</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-At-Core.html#t:Index\" title=\"Optics.At.Core\">Index</a> m -&gt; <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> m (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-At-Core.html#t:IxValue\" title=\"Optics.At.Core\">IxValue</a> m))</li></ul>","name":"At at","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:At"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:IxKind\">IxKind</a> m","name":"IxKind","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:IxKind"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Ixed\">Ixed</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:IxKind\">IxKind</a> m</li><li><a href=\"#v:ix\">ix</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-At-Core.html#t:Index\" title=\"Optics.At.Core\">Index</a> m -&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> (<a href=\"Prelude.html#t:IxKind\" title=\"Prelude\">IxKind</a> m) <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> m (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-At-Core.html#t:IxValue\" title=\"Optics.At.Core\">IxValue</a> m)</li></ul>","name":"Ixed IxKind ix $dmix","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Ixed"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Each\">Each</a> i s t a b | s -&gt; i a, t -&gt; i b, s b -&gt; t, t a -&gt; s <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:each\">each</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-IxTraversal.html#t:IxTraversal\" title=\"Optics.IxTraversal\">IxTraversal</a> i s t a b</li></ul>","name":"Each each $dmeach","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Each"},{"display_html":"<a href=\"#v:_Empty\">_Empty</a> :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Empty-Core.html#t:AsEmpty\" title=\"Optics.Empty.Core\">AsEmpty</a> a =&gt; <a href=\"Prelude.html#t:Prism-39-\" title=\"Prelude\">Prism'</a> a ()","name":"_Empty","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:_Empty"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Fold\">Fold</a> s a = <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s a","name":"Fold","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Fold"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:GPlate\">GPlate</a> a s <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:gplate\">gplate</a> :: <a href=\"Prelude.html#t:Traversal-39-\" title=\"Prelude\">Traversal'</a> s a</li></ul>","name":"GPlate gplate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:GPlate"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Getter\">Getter</a> s a = <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s a","name":"Getter","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Getter"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Optic\">Optic</a> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t a b","name":"Optic","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Optic"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Optic-39-\">Optic'</a> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s a = <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s s a a","name":"Optic'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Optic-39-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Is\">Is</a> k l","name":"Is","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Is"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:A_Fold\">A_Fold</a>","name":"A_Fold","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:A_Fold"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:A_Setter\">A_Setter</a>","name":"A_Setter","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:A_Setter"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:A_Traversal\">A_Traversal</a>","name":"A_Traversal","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:A_Traversal"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Iso\">Iso</a> s t a b = <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Iso.html#t:An_Iso\" title=\"Optics.Iso\">An_Iso</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s t a b","name":"Iso","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Iso"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Iso-39-\">Iso'</a> s a = <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Iso.html#t:An_Iso\" title=\"Optics.Iso\">An_Iso</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s a","name":"Iso'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Iso-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Lens\">Lens</a> s t a b = <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-IxLens.html#t:A_Lens\" title=\"Optics.IxLens\">A_Lens</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s t a b","name":"Lens","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Lens"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Lens-39-\">Lens'</a> s a = <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-IxLens.html#t:A_Lens\" title=\"Optics.IxLens\">A_Lens</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s a","name":"Lens'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Lens-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Prism\">Prism</a> s t a b = <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Prism.html#t:A_Prism\" title=\"Optics.Prism\">A_Prism</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s t a b","name":"Prism","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Prism"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Prism-39-\">Prism'</a> s a = <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Prism.html#t:A_Prism\" title=\"Optics.Prism\">A_Prism</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s a","name":"Prism'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Prism-39-"},{"display_html":"<a href=\"#v:re\">re</a> :: <span class=\"keyword\">forall</span> (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t a b. (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Re.html#t:ReversibleOptic\" title=\"Optics.Re\">ReversibleOptic</a> k, <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:AcceptsEmptyIndices\" title=\"Optics.Optic\">AcceptsEmptyIndices</a> &quot;re&quot; is) =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s t a b -&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Re.html#t:ReversedOptic\" title=\"Optics.Re\">ReversedOptic</a> k) is b a t s","name":"re","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:re"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Traversal\">Traversal</a> s t a b = <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> <a href=\"Prelude.html#t:A_Traversal\" title=\"Prelude\">A_Traversal</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s t a b","name":"Traversal","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Traversal"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Traversal-39-\">Traversal'</a> s a = <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> <a href=\"Prelude.html#t:A_Traversal\" title=\"Prelude\">A_Traversal</a> <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> s a","name":"Traversal'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Traversal-39-"},{"display_html":"<a href=\"#v:-37--126-\">(%~)</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t a b. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Setter\" title=\"Prelude\">A_Setter</a> =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s t a b -&gt; (a -&gt; b) -&gt; s -&gt; t","name":"%~","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-37--126-"},{"display_html":"<a href=\"#v:.-126-\">(.~)</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t a b. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Setter\" title=\"Prelude\">A_Setter</a> =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s t a b -&gt; b -&gt; s -&gt; t","name":".~","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:.-126-"},{"display_html":"<a href=\"#v:-63--126-\">(?~)</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s t a b. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Setter\" title=\"Prelude\">A_Setter</a> =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s t a (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b) -&gt; b -&gt; s -&gt; t","name":"?~","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-63--126-"},{"display_html":"<a href=\"#v:-94-.\">(^.)</a> :: <span class=\"keyword\">forall</span> k s (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a> =&gt; s -&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is s a -&gt; a","name":"^.","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-94-."},{"display_html":"<a href=\"#v:-94-..\">(^..)</a> :: <span class=\"keyword\">forall</span> k s (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a> =&gt; s -&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is s a -&gt; [a]","name":"^..","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-94-.."},{"display_html":"<a href=\"#v:-94--63-\">(^?)</a> :: <span class=\"keyword\">forall</span> k s (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a> =&gt; s -&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is s a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"^?","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-94--63-"},{"display_html":"<a href=\"#v:-37--61-\">(%=)</a> :: <span class=\"keyword\">forall</span> k s m (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a b. (<a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Setter\" title=\"Prelude\">A_Setter</a>, <a href=\"Prelude.html#t:MonadState\" title=\"Prelude\">MonadState</a> s m) =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s s a b -&gt; (a -&gt; b) -&gt; m ()","name":"%=","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-37--61-"},{"display_html":"<a href=\"#v:-63--61-\">(?=)</a> :: <span class=\"keyword\">forall</span> k s m (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a b. (<a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Setter\" title=\"Prelude\">A_Setter</a>, <a href=\"Prelude.html#t:MonadState\" title=\"Prelude\">MonadState</a> s m) =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s s (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b) -&gt; b -&gt; m ()","name":"?=","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-63--61-"},{"display_html":"<a href=\"#v:-38-\">(&amp;)</a> :: a -&gt; (a -&gt; b) -&gt; b","name":"&","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:-38-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Plated\">Plated</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:plate\">plate</a> :: <a href=\"Prelude.html#t:Traversal-39-\" title=\"Prelude\">Traversal'</a> a a</li></ul>","name":"Plated plate $dmplate","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:Plated"},{"display_html":"<a href=\"#v:cosmos\">cosmos</a> :: <a href=\"Prelude.html#t:Plated\" title=\"Prelude\">Plated</a> a =&gt; <a href=\"Prelude.html#t:Fold\" title=\"Prelude\">Fold</a> a a","name":"cosmos","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:cosmos"},{"display_html":"<a href=\"#v:cosmosOn\">cosmosOn</a> :: <span class=\"keyword\">forall</span> {k} {m} {b} {ks :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>} {s} {t}. (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:JoinKinds\" title=\"Optics.Optic\">JoinKinds</a> k <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a> m, <a href=\"Prelude.html#t:Plated\" title=\"Prelude\">Plated</a> b) =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k ks s t b b -&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> m ks s t b b","name":"cosmosOn","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:cosmosOn"},{"display_html":"<a href=\"#v:cosmosOnOf\">cosmosOnOf</a> :: <span class=\"keyword\">forall</span> {k1} {m} {k2} {ks :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>} {s} {t} {b} {is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>}. (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:JoinKinds\" title=\"Optics.Optic\">JoinKinds</a> k1 <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a> m, <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k2 <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a>) =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k1 ks s t b b -&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k2 is b b -&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> m ks s t b b","name":"cosmosOnOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:cosmosOnOf"},{"display_html":"<a href=\"#v:transform\">transform</a> :: <a href=\"Prelude.html#t:Plated\" title=\"Prelude\">Plated</a> a =&gt; (a -&gt; a) -&gt; a -&gt; a","name":"transform","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:transform"},{"display_html":"<a href=\"#v:transformOf-39-\">transformOf'</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) s a1 a2 b. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Traversal\" title=\"Prelude\">A_Traversal</a> =&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k is s a1 a2 b -&gt; (a2 -&gt; b) -&gt; s -&gt; a1","name":"transformOf'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:transformOf-39-"},{"display_html":"<a href=\"#v:concatMapOf\">concatMapOf</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a1 a2 b. <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a> =&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is a1 a2 -&gt; (a2 -&gt; [b]) -&gt; a1 -&gt; [b]","name":"concatMapOf","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#v:concatMapOf"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:AsConstructor\">AsConstructor</a> (ctor :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) s t a b | ctor s -&gt; a, ctor t -&gt; b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:_Ctor\">_Ctor</a> :: <a href=\"Prelude.html#t:Prism\" title=\"Prelude\">Prism</a> s t a b</li></ul>","name":"AsConstructor _Ctor","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:AsConstructor"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:AsConstructor-39-\">AsConstructor'</a> (ctor :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) s a | ctor s -&gt; a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:_Ctor-39-\">_Ctor'</a> :: <a href=\"Prelude.html#t:Prism\" title=\"Prelude\">Prism</a> s s a a</li></ul>","name":"AsConstructor' _Ctor'","module":"Prelude","link":"elara/https://hackage.haskell.org/package/base-4.21.0.0/docs/Prelude.html#t:AsConstructor-39-"},{"display_html":"<a href=\"#v:getWidth\">getWidth</a> :: <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"getWidth","module":"Elara.Width","link":"elara/Elara-Width.html#v:getWidth"},{"display_html":"<a href=\"#v:defaultWidth\">defaultWidth</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"defaultWidth","module":"Elara.Width","link":"elara/Elara-Width.html#v:defaultWidth"},{"display_html":"<a href=\"#v:uncurry3\">uncurry3</a> :: (a -&gt; b -&gt; c -&gt; d) -&gt; (a, b, c) -&gt; d","name":"uncurry3","module":"Elara.Utils","link":"elara/Elara-Utils.html#v:uncurry3"},{"display_html":"<a href=\"#v:curry3\">curry3</a> :: ((a, b, c) -&gt; d) -&gt; a -&gt; b -&gt; c -&gt; d","name":"curry3","module":"Elara.Utils","link":"elara/Elara-Utils.html#v:curry3"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CompilerSettings\">CompilerSettings</a> = <a href=\"#v:CompilerSettings\">CompilerSettings</a> {<ul class=\"subs\"><li><a href=\"#v:dumpSettings\">dumpSettings</a> :: <a href=\"Elara-Settings.html#t:DumpSettings\" title=\"Elara.Settings\">DumpSettings</a></li><li><a href=\"#v:runWith\">runWith</a> :: <a href=\"Elara-Settings.html#t:RunWithOption\" title=\"Elara.Settings\">RunWithOption</a></li><li><a href=\"#v:mainFile\">mainFile</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li></ul>}","name":"CompilerSettings CompilerSettings dumpSettings mainFile runWith","module":"Elara.Settings","link":"elara/Elara-Settings.html#t:CompilerSettings"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DumpSettings\">DumpSettings</a> = <a href=\"#v:DumpSettings\">DumpSettings</a> {<ul class=\"subs\"><li><a href=\"#v:dumpLexed\">dumpLexed</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:dumpParsed\">dumpParsed</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:dumpDesugared\">dumpDesugared</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:dumpRenamed\">dumpRenamed</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:dumpShunted\">dumpShunted</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:dumpTyped\">dumpTyped</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:dumpCore\">dumpCore</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li></ul>}","name":"DumpSettings DumpSettings dumpCore dumpDesugared dumpLexed dumpParsed dumpRenamed dumpShunted dumpTyped","module":"Elara.Settings","link":"elara/Elara-Settings.html#t:DumpSettings"},{"display_html":"<a href=\"#v:defaultDumpSettings\">defaultDumpSettings</a> :: <a href=\"Elara-Settings.html#t:DumpSettings\" title=\"Elara.Settings\">DumpSettings</a>","name":"defaultDumpSettings","module":"Elara.Settings","link":"elara/Elara-Settings.html#v:defaultDumpSettings"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RunWithOption\">RunWithOption</a><ul class=\"subs\"><li>= <a href=\"#v:RunWithNone\">RunWithNone</a></li><li>| <a href=\"#v:RunWithInterpreter\">RunWithInterpreter</a></li></ul>","name":"RunWithOption RunWithInterpreter RunWithNone","module":"Elara.Settings","link":"elara/Elara-Settings.html#t:RunWithOption"},{"display_html":"<a href=\"#v:translateEscapedChar\">translateEscapedChar</a> :: (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Prelude.html#t:ToString\" title=\"Prelude\">ToString</a> s) =&gt; s -&gt; <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>","name":"translateEscapedChar","module":"Elara.Lexer.Char","link":"elara/Elara-Lexer-Char.html#v:translateEscapedChar"},{"display_html":"<a href=\"#v:consumeAmp\">consumeAmp</a> :: <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"consumeAmp","module":"Elara.Lexer.Char","link":"elara/Elara-Lexer-Char.html#v:consumeAmp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DiagnosticWriter\">DiagnosticWriter</a> t (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:WriteDiagnostic\">WriteDiagnostic</a> :: <span class=\"keyword\">forall</span> t (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Diagnostic.html#t:Diagnostic\" title=\"Error.Diagnose.Diagnostic\">Diagnostic</a> t -&gt; <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t a ()</li><li><a href=\"#v:WriteReport\">WriteReport</a> :: <span class=\"keyword\">forall</span> t (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Report.html#t:Report\" title=\"Error.Diagnose.Report\">Report</a> t -&gt; <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t a ()</li><li><a href=\"#v:AddFile\">AddFile</a> :: <span class=\"keyword\">forall</span> t (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t a ()</li></ul>","name":"DiagnosticWriter AddFile WriteDiagnostic WriteReport","module":"Elara.Error.Effect","link":"elara/Elara-Error-Effect.html#t:DiagnosticWriter"},{"display_html":"<a href=\"#v:addFile\">addFile</a> :: <span class=\"keyword\">forall</span> t (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es ()","name":"addFile","module":"Elara.Error.Effect","link":"elara/Elara-Error-Effect.html#v:addFile"},{"display_html":"<a href=\"#v:writeReport\">writeReport</a> :: <span class=\"keyword\">forall</span> t (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Report.html#t:Report\" title=\"Error.Diagnose.Report\">Report</a> t -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es ()","name":"writeReport","module":"Elara.Error.Effect","link":"elara/Elara-Error-Effect.html#v:writeReport"},{"display_html":"<a href=\"#v:writeDiagnostic\">writeDiagnostic</a> :: <span class=\"keyword\">forall</span> t (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Diagnostic.html#t:Diagnostic\" title=\"Error.Diagnose.Diagnostic\">Diagnostic</a> t -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es ()","name":"writeDiagnostic","module":"Elara.Error.Effect","link":"elara/Elara-Error-Effect.html#v:writeDiagnostic"},{"display_html":"<a href=\"#v:execDiagnosticWriter\">execDiagnosticWriter</a> :: <span class=\"keyword\">forall</span> t (r :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Diagnostic.html#t:Diagnostic\" title=\"Error.Diagnose.Diagnostic\">Diagnostic</a> t)","name":"execDiagnosticWriter","module":"Elara.Error.Effect","link":"elara/Elara-Error-Effect.html#v:execDiagnosticWriter"},{"display_html":"<a href=\"#v:evalDiagnosticWriter\">evalDiagnosticWriter</a> :: <span class=\"keyword\">forall</span> t (r :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"evalDiagnosticWriter","module":"Elara.Error.Effect","link":"elara/Elara-Error-Effect.html#v:evalDiagnosticWriter"},{"display_html":"<a href=\"#v:runDiagnosticWriter\">runDiagnosticWriter</a> :: <span class=\"keyword\">forall</span> t (r :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> t ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Diagnostic.html#t:Diagnostic\" title=\"Error.Diagnose.Diagnostic\">Diagnostic</a> t, a)","name":"runDiagnosticWriter","module":"Elara.Error.Effect","link":"elara/Elara-Error-Effect.html#v:runDiagnosticWriter"},{"display_html":"<a href=\"#v:keyword\">keyword</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"keyword","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:keyword"},{"display_html":"<a href=\"#v:punctuation\">punctuation</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"punctuation","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:punctuation"},{"display_html":"<a href=\"#v:label\">label</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"label","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:label"},{"display_html":"<a href=\"#v:scalar\">scalar</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"scalar","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:scalar"},{"display_html":"<a href=\"#v:builtin\">builtin</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"builtin","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:builtin"},{"display_html":"<a href=\"#v:operator\">operator</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"operator","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:operator"},{"display_html":"<a href=\"#v:moduleName\">moduleName</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"moduleName","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:moduleName"},{"display_html":"<a href=\"#v:typeName\">typeName</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"typeName","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:typeName"},{"display_html":"<a href=\"#v:varName\">varName</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"varName","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:varName"},{"display_html":"<a href=\"#v:constructor\">constructor</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"constructor","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:constructor"},{"display_html":"<a href=\"#v:warning\">warning</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"warning","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:warning"},{"display_html":"<a href=\"#v:bold\">bold</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"bold","module":"Elara.Data.Pretty.Styles","link":"elara/Elara-Data-Pretty-Styles.html#v:bold"},{"display_html":"<a href=\"#v:escapeChar\">escapeChar</a> :: <a href=\"Prelude.html#t:IsString\" title=\"Prelude\">IsString</a> s =&gt; <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a> -&gt; s","name":"escapeChar","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:escapeChar"},{"display_html":"<a href=\"#v:indentDepth\">indentDepth</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"indentDepth","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:indentDepth"},{"display_html":"<a href=\"#v:parensIf\">parensIf</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"parensIf","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:parensIf"},{"display_html":"<a href=\"#v:blockParensIf\">blockParensIf</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"blockParensIf","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:blockParensIf"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Pretty\">Pretty</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pretty\">pretty</a> :: a -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a></li></ul>","name":"Pretty pretty $dmpretty","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#t:Pretty"},{"display_html":"<a href=\"#v:gpretty\">gpretty</a> :: (<a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> a, GPretty (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> a)) =&gt; a -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"gpretty","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:gpretty"},{"display_html":"<a href=\"#v:-60--43--62-\">(&lt;+&gt;)</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"<+>","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:-60--43--62-"},{"display_html":"<a href=\"#v:align\">align</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"align","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:align"},{"display_html":"<a href=\"#v:alterAnnotations\">alterAnnotations</a> :: (ann -&gt; [ann']) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann'","name":"alterAnnotations","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:alterAnnotations"},{"display_html":"<a href=\"#v:alterAnnotationsS\">alterAnnotationsS</a> :: (ann -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> ann') -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann'","name":"alterAnnotationsS","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:alterAnnotationsS"},{"display_html":"<a href=\"#v:annotate\">annotate</a> :: ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"annotate","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:annotate"},{"display_html":"<a href=\"#v:cat\">cat</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"cat","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:cat"},{"display_html":"<a href=\"#v:column\">column</a> :: (<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"column","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:column"},{"display_html":"<a href=\"#v:concatWith\">concatWith</a> :: <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t =&gt; (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann) -&gt; t (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"concatWith","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:concatWith"},{"display_html":"<a href=\"#v:defaultLayoutOptions\">defaultLayoutOptions</a> :: <a href=\"Elara-Data-Pretty.html#t:LayoutOptions\" title=\"Elara.Data.Pretty\">LayoutOptions</a>","name":"defaultLayoutOptions","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:defaultLayoutOptions"},{"display_html":"<a href=\"#v:emptyDoc\">emptyDoc</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"emptyDoc","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:emptyDoc"},{"display_html":"<a href=\"#v:enclose\">enclose</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"enclose","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:enclose"},{"display_html":"<a href=\"#v:encloseSep\">encloseSep</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"encloseSep","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:encloseSep"},{"display_html":"<a href=\"#v:fill\">fill</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"fill","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:fill"},{"display_html":"<a href=\"#v:fillBreak\">fillBreak</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"fillBreak","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:fillBreak"},{"display_html":"<a href=\"#v:fillCat\">fillCat</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"fillCat","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:fillCat"},{"display_html":"<a href=\"#v:fillSep\">fillSep</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"fillSep","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:fillSep"},{"display_html":"<a href=\"#v:flatAlt\">flatAlt</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"flatAlt","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:flatAlt"},{"display_html":"<a href=\"#v:fuse\">fuse</a> :: <a href=\"Elara-Data-Pretty.html#t:FusionDepth\" title=\"Elara.Data.Pretty\">FusionDepth</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"fuse","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:fuse"},{"display_html":"<a href=\"#v:group\">group</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"group","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:group"},{"display_html":"<a href=\"#v:hang\">hang</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"hang","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:hang"},{"display_html":"<a href=\"#v:hardline\">hardline</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"hardline","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:hardline"},{"display_html":"<a href=\"#v:hcat\">hcat</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"hcat","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:hcat"},{"display_html":"<a href=\"#v:hsep\">hsep</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"hsep","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:hsep"},{"display_html":"<a href=\"#v:indent\">indent</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"indent","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:indent"},{"display_html":"<a href=\"#v:layoutCompact\">layoutCompact</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann1 -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann2","name":"layoutCompact","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:layoutCompact"},{"display_html":"<a href=\"#v:layoutPretty\">layoutPretty</a> :: <a href=\"Elara-Data-Pretty.html#t:LayoutOptions\" title=\"Elara.Data.Pretty\">LayoutOptions</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann","name":"layoutPretty","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:layoutPretty"},{"display_html":"<a href=\"#v:layoutSmart\">layoutSmart</a> :: <a href=\"Elara-Data-Pretty.html#t:LayoutOptions\" title=\"Elara.Data.Pretty\">LayoutOptions</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann","name":"layoutSmart","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:layoutSmart"},{"display_html":"<a href=\"#v:line\">line</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"line","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:line"},{"display_html":"<a href=\"#v:line-39-\">line'</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"line'","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:line-39-"},{"display_html":"<a href=\"#v:list\">list</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"list","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:list"},{"display_html":"<a href=\"#v:nest\">nest</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"nest","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:nest"},{"display_html":"<a href=\"#v:nesting\">nesting</a> :: (<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"nesting","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:nesting"},{"display_html":"<a href=\"#v:pageWidth\">pageWidth</a> :: (<a href=\"Elara-Data-Pretty.html#t:PageWidth\" title=\"Elara.Data.Pretty\">PageWidth</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"pageWidth","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:pageWidth"},{"display_html":"<a href=\"#v:plural\">plural</a> :: (<a href=\"Prelude.html#t:Num\" title=\"Prelude\">Num</a> amount, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> amount) =&gt; doc -&gt; doc -&gt; amount -&gt; doc","name":"plural","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:plural"},{"display_html":"<a href=\"#v:punctuate\">punctuate</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann]","name":"punctuate","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:punctuate"},{"display_html":"<a href=\"#v:reAnnotate\">reAnnotate</a> :: (ann -&gt; ann') -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann'","name":"reAnnotate","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:reAnnotate"},{"display_html":"<a href=\"#v:reAnnotateS\">reAnnotateS</a> :: (ann -&gt; ann') -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann'","name":"reAnnotateS","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:reAnnotateS"},{"display_html":"<a href=\"#v:removeTrailingWhitespace\">removeTrailingWhitespace</a> :: <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann","name":"removeTrailingWhitespace","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:removeTrailingWhitespace"},{"display_html":"<a href=\"#v:sep\">sep</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"sep","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:sep"},{"display_html":"<a href=\"#v:softline\">softline</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"softline","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:softline"},{"display_html":"<a href=\"#v:softline-39-\">softline'</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"softline'","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:softline-39-"},{"display_html":"<a href=\"#v:surround\">surround</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"surround","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:surround"},{"display_html":"<a href=\"#v:tupled\">tupled</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"tupled","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:tupled"},{"display_html":"<a href=\"#v:unAnnotate\">unAnnotate</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> xxx","name":"unAnnotate","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:unAnnotate"},{"display_html":"<a href=\"#v:unAnnotateS\">unAnnotateS</a> :: <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> xxx","name":"unAnnotateS","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:unAnnotateS"},{"display_html":"<a href=\"#v:unsafeViaShow\">unsafeViaShow</a> :: <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a =&gt; a -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"unsafeViaShow","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:unsafeViaShow"},{"display_html":"<a href=\"#v:vcat\">vcat</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"vcat","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:vcat"},{"display_html":"<a href=\"#v:viaShow\">viaShow</a> :: <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a =&gt; a -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"viaShow","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:viaShow"},{"display_html":"<a href=\"#v:vsep\">vsep</a> :: [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"vsep","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:vsep"},{"display_html":"<a href=\"#v:width\">width</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; (<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"width","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:width"},{"display_html":"<a href=\"#v:angles\">angles</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"angles","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:angles"},{"display_html":"<a href=\"#v:backslash\">backslash</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"backslash","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:backslash"},{"display_html":"<a href=\"#v:braces\">braces</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"braces","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:braces"},{"display_html":"<a href=\"#v:brackets\">brackets</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"brackets","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:brackets"},{"display_html":"<a href=\"#v:colon\">colon</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"colon","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:colon"},{"display_html":"<a href=\"#v:comma\">comma</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"comma","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:comma"},{"display_html":"<a href=\"#v:dot\">dot</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"dot","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:dot"},{"display_html":"<a href=\"#v:dquote\">dquote</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"dquote","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:dquote"},{"display_html":"<a href=\"#v:dquotes\">dquotes</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"dquotes","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:dquotes"},{"display_html":"<a href=\"#v:equals\">equals</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"equals","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:equals"},{"display_html":"<a href=\"#v:langle\">langle</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"langle","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:langle"},{"display_html":"<a href=\"#v:lbrace\">lbrace</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"lbrace","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:lbrace"},{"display_html":"<a href=\"#v:lbracket\">lbracket</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"lbracket","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:lbracket"},{"display_html":"<a href=\"#v:lparen\">lparen</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"lparen","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:lparen"},{"display_html":"<a href=\"#v:parens\">parens</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"parens","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:parens"},{"display_html":"<a href=\"#v:pipe\">pipe</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"pipe","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:pipe"},{"display_html":"<a href=\"#v:rangle\">rangle</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"rangle","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:rangle"},{"display_html":"<a href=\"#v:rbrace\">rbrace</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"rbrace","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:rbrace"},{"display_html":"<a href=\"#v:rbracket\">rbracket</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"rbracket","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:rbracket"},{"display_html":"<a href=\"#v:rparen\">rparen</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"rparen","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:rparen"},{"display_html":"<a href=\"#v:semi\">semi</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"semi","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:semi"},{"display_html":"<a href=\"#v:slash\">slash</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"slash","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:slash"},{"display_html":"<a href=\"#v:space\">space</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"space","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:space"},{"display_html":"<a href=\"#v:squote\">squote</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"squote","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:squote"},{"display_html":"<a href=\"#v:squotes\">squotes</a> :: <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"squotes","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:squotes"},{"display_html":"<a href=\"#v:-60--62-\">(&lt;&gt;)</a> :: <a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> a =&gt; a -&gt; a -&gt; a","name":"<>","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:-60--62-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Doc\">Doc</a> ann","name":"Doc","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#t:Doc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FusionDepth\">FusionDepth</a><ul class=\"subs\"><li>= <a href=\"#v:Shallow\">Shallow</a></li><li>| <a href=\"#v:Deep\">Deep</a></li></ul>","name":"FusionDepth Deep Shallow","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#t:FusionDepth"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:LayoutOptions\">LayoutOptions</a> = <a href=\"#v:LayoutOptions\">LayoutOptions</a> {<ul class=\"subs\"><li><a href=\"#v:layoutPageWidth\">layoutPageWidth</a> :: <a href=\"Elara-Data-Pretty.html#t:PageWidth\" title=\"Elara.Data.Pretty\">PageWidth</a></li></ul>}","name":"LayoutOptions LayoutOptions layoutPageWidth","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#t:LayoutOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PageWidth\">PageWidth</a><ul class=\"subs\"><li>= <a href=\"#v:AvailablePerLine\">AvailablePerLine</a> !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> !<a href=\"Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li>| <a href=\"#v:Unbounded\">Unbounded</a></li></ul>","name":"PageWidth AvailablePerLine Unbounded","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#t:PageWidth"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SimpleDocStream\">SimpleDocStream</a> ann<ul class=\"subs\"><li>= <a href=\"#v:SFail\">SFail</a></li><li>| <a href=\"#v:SEmpty\">SEmpty</a></li><li>| <a href=\"#v:SChar\">SChar</a> !<a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a> (<a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann)</li><li>| <a href=\"#v:SText\">SText</a> !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> !<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> (<a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann)</li><li>| <a href=\"#v:SLine\">SLine</a> !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> (<a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann)</li><li>| <a href=\"#v:SAnnPush\">SAnnPush</a> ann (<a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann)</li><li>| <a href=\"#v:SAnnPop\">SAnnPop</a> (<a href=\"Elara-Data-Pretty.html#t:SimpleDocStream\" title=\"Elara.Data.Pretty\">SimpleDocStream</a> ann)</li></ul>","name":"SimpleDocStream SAnnPop SAnnPush SChar SEmpty SFail SLine SText","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#t:SimpleDocStream"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AnsiStyle\">AnsiStyle</a>","name":"AnsiStyle","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#t:AnsiStyle"},{"display_html":"<a href=\"#v:listToText\">listToText</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; [a] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"listToText","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:listToText"},{"display_html":"<a href=\"#v:bracedBlock\">bracedBlock</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; [a] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"bracedBlock","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:bracedBlock"},{"display_html":"<a href=\"#v:renderStrict\">renderStrict</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; a -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"renderStrict","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:renderStrict"},{"display_html":"<a href=\"#v:prettyToText\">prettyToText</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; a -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"prettyToText","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:prettyToText"},{"display_html":"<a href=\"#v:prettyToUnannotatedText\">prettyToUnannotatedText</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; a -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"prettyToUnannotatedText","module":"Elara.Data.Pretty","link":"elara/Elara-Data-Pretty.html#v:prettyToUnannotatedText"},{"display_html":"<a href=\"#v:dbgPretty\">dbgPretty</a> :: (<a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Debug.html#t:MonadParsecDbg\" title=\"Text.Megaparsec.Debug\">MonadParsecDbg</a> e s m, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a) =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; m a -&gt; m a","name":"dbgPretty","module":"Elara.Parse.Debug","link":"elara/Elara-Parse-Debug.html#v:dbgPretty"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:PrettyDbg\">PrettyDbg</a> p = <a href=\"#v:PrettyDbg\">PrettyDbg</a> {<ul class=\"subs\"><li><a href=\"#v:unPrettyDbg\">unPrettyDbg</a> :: p</li></ul>}","name":"PrettyDbg PrettyDbg unPrettyDbg","module":"Elara.Parse.Debug","link":"elara/Elara-Parse-Debug.html#t:PrettyDbg"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StructuredDebug\">StructuredDebug</a> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Debug\">Debug</a> :: <span class=\"keyword\">forall</span> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> a ()</li><li><a href=\"#v:DebugWith\">DebugWith</a> :: <span class=\"keyword\">forall</span> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b. <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; a b -&gt; <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> a b</li><li><a href=\"#v:DebugNS\">DebugNS</a> :: <span class=\"keyword\">forall</span> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; [<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> a ()</li><li><a href=\"#v:DebugWithNS\">DebugWithNS</a> :: <span class=\"keyword\">forall</span> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b. <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; [<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; a b -&gt; <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> a b</li></ul>","name":"StructuredDebug Debug DebugNS DebugWith DebugWithNS","module":"Elara.Logging","link":"elara/Elara-Logging.html#t:StructuredDebug"},{"display_html":"<a href=\"#v:debug\">debug</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"debug","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:debug"},{"display_html":"<a href=\"#v:debugWith\">debugWith</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"debugWith","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:debugWith"},{"display_html":"<a href=\"#v:debugWithResult\">debugWithResult</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a) =&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"debugWithResult","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:debugWithResult"},{"display_html":"<a href=\"#v:debugNS\">debugNS</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>) =&gt; [<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"debugNS","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:debugNS"},{"display_html":"<a href=\"#v:debugWithNS\">debugWithNS</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>) =&gt; [<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"debugWithNS","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:debugWithNS"},{"display_html":"<a href=\"#v:structuredDebugToLog\">structuredDebugToLog</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"https://hackage.haskell.org/package/co-log-effectful-0.0.0.1/docs/Effectful-Colog.html#t:Log\" title=\"Effectful.Colog\">Log</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"structuredDebugToLog","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:structuredDebugToLog"},{"display_html":"<a href=\"#v:ignoreStructuredDebug\">ignoreStructuredDebug</a> :: <span class=\"keyword\">forall</span> (r :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"ignoreStructuredDebug","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:ignoreStructuredDebug"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:TraceableFn\">TraceableFn</a> (name :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) a b = <a href=\"#v:TraceableFn\">TraceableFn</a> (<span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m =&gt; (a -&gt; m b) -&gt; a -&gt; m b)","name":"TraceableFn TraceableFn","module":"Elara.Logging","link":"elara/Elara-Logging.html#t:TraceableFn"},{"display_html":"<a href=\"#v:runTraceable\">runTraceable</a> :: <span class=\"keyword\">forall</span> (name :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) a b. <a href=\"Elara-Logging.html#t:TraceableFn\" title=\"Elara.Logging\">TraceableFn</a> name a b -&gt; a -&gt; b","name":"runTraceable","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:runTraceable"},{"display_html":"<a href=\"#v:traceFn\">traceFn</a> :: <span class=\"keyword\">forall</span> (name :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) a b (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> b, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#t:KnownSymbol\" title=\"GHC.TypeLits\">KnownSymbol</a> name) =&gt; <a href=\"Elara-Logging.html#t:TraceableFn\" title=\"Elara.Logging\">TraceableFn</a> name a b -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r b","name":"traceFn","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:traceFn"},{"display_html":"<a href=\"#v:fib\">fib</a> :: <a href=\"Elara-Logging.html#t:TraceableFn\" title=\"Elara.Logging\">TraceableFn</a> &quot;fib&quot; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"fib","module":"Elara.Logging","link":"elara/Elara-Logging.html#v:fib"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ErrorCode\">ErrorCode</a> = <span class=\"keyword\">forall</span> ann. <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> ann","name":"ErrorCode","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#t:ErrorCode"},{"display_html":"<a href=\"#v:fileReadError\">fileReadError</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"fileReadError","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:fileReadError"},{"display_html":"<a href=\"#v:tooMuchIndentation\">tooMuchIndentation</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"tooMuchIndentation","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:tooMuchIndentation"},{"display_html":"<a href=\"#v:genericParseError\">genericParseError</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"genericParseError","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:genericParseError"},{"display_html":"<a href=\"#v:unterminatedStringLiteral\">unterminatedStringLiteral</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"unterminatedStringLiteral","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:unterminatedStringLiteral"},{"display_html":"<a href=\"#v:unknownName\">unknownName</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"unknownName","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:unknownName"},{"display_html":"<a href=\"#v:unknownModule\">unknownModule</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"unknownModule","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:unknownModule"},{"display_html":"<a href=\"#v:ambiguousName\">ambiguousName</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"ambiguousName","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:ambiguousName"},{"display_html":"<a href=\"#v:qualifiedWithWrongModule\">qualifiedWithWrongModule</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"qualifiedWithWrongModule","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:qualifiedWithWrongModule"},{"display_html":"<a href=\"#v:duplicateDefinition\">duplicateDefinition</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"duplicateDefinition","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:duplicateDefinition"},{"display_html":"<a href=\"#v:defWithoutLet\">defWithoutLet</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"defWithoutLet","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:defWithoutLet"},{"display_html":"<a href=\"#v:partialNamesNotEqual\">partialNamesNotEqual</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"partialNamesNotEqual","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:partialNamesNotEqual"},{"display_html":"<a href=\"#v:tooManyDeclarations\">tooManyDeclarations</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"tooManyDeclarations","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:tooManyDeclarations"},{"display_html":"<a href=\"#v:nonExistentModuleDeclaration\">nonExistentModuleDeclaration</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"nonExistentModuleDeclaration","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:nonExistentModuleDeclaration"},{"display_html":"<a href=\"#v:infixDeclarationWithoutValue\">infixDeclarationWithoutValue</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"infixDeclarationWithoutValue","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:infixDeclarationWithoutValue"},{"display_html":"<a href=\"#v:duplicateFixityAnnotations\">duplicateFixityAnnotations</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"duplicateFixityAnnotations","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:duplicateFixityAnnotations"},{"display_html":"<a href=\"#v:tuplePatternTooShort\">tuplePatternTooShort</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"tuplePatternTooShort","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:tuplePatternTooShort"},{"display_html":"<a href=\"#v:samePrecedence\">samePrecedence</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"samePrecedence","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:samePrecedence"},{"display_html":"<a href=\"#v:unknownPrecedence\">unknownPrecedence</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"unknownPrecedence","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:unknownPrecedence"},{"display_html":"<a href=\"#v:unknownVariableTC\">unknownVariableTC</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"unknownVariableTC","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:unknownVariableTC"},{"display_html":"<a href=\"#v:coreTypeMismatch\">coreTypeMismatch</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"coreTypeMismatch","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:coreTypeMismatch"},{"display_html":"<a href=\"#v:invokeStaticLocal\">invokeStaticLocal</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"invokeStaticLocal","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:invokeStaticLocal"},{"display_html":"<a href=\"#v:localVariableNotFound\">localVariableNotFound</a> :: <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a>","name":"localVariableNotFound","module":"Elara.Error.Codes","link":"elara/Elara-Error-Codes.html#v:localVariableNotFound"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ReportableError\">ReportableError</a> e <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:errorCode\">errorCode</a> :: e -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Error-Codes.html#t:ErrorCode\" title=\"Elara.Error.Codes\">ErrorCode</a></li><li><a href=\"#v:getReport\">getReport</a> :: e -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Report.html#t:Report\" title=\"Error.Diagnose.Report\">Report</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>))</li><li><a href=\"#v:report\">report</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; e -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()</li></ul>","name":"ReportableError errorCode getReport report $dmerrorCode $dmgetReport $dmreport","module":"Elara.Error","link":"elara/Elara-Error.html#t:ReportableError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeReportableError\">SomeReportableError</a> = <a href=\"Elara-Error.html#t:ReportableError\" title=\"Elara.Error\">ReportableError</a> x =&gt;  <a href=\"#v:SomeReportableError\">SomeReportableError</a> x","name":"SomeReportableError SomeReportableError","module":"Elara.Error","link":"elara/Elara-Error.html#t:SomeReportableError"},{"display_html":"<a href=\"#v:runErrorOrReport\">runErrorOrReport</a> :: <span class=\"keyword\">forall</span> e (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error.html#t:ReportableError\" title=\"Elara.Error\">ReportableError</a> e) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> e ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"runErrorOrReport","module":"Elara.Error","link":"elara/Elara-Error.html#v:runErrorOrReport"},{"display_html":"<a href=\"#v:defaultReport\">defaultReport</a> :: <span class=\"keyword\">forall</span> e (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Error.html#t:ReportableError\" title=\"Elara.Error\">ReportableError</a> e, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> e, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; e -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"defaultReport","module":"Elara.Error","link":"elara/Elara-Error.html#v:defaultReport"},{"display_html":"<a href=\"#v:addPosition\">addPosition</a> :: (<a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Position.html#t:Position\" title=\"Error.Diagnose.Position\">Position</a>, <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Report.html#t:Marker\" title=\"Error.Diagnose.Report\">Marker</a> msg) -&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Report.html#t:Report\" title=\"Error.Diagnose.Report\">Report</a> msg -&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Report.html#t:Report\" title=\"Error.Diagnose.Report\">Report</a> msg","name":"addPosition","module":"Elara.Error","link":"elara/Elara-Error.html#v:addPosition"},{"display_html":"<a href=\"#v:concatDiagnostics\">concatDiagnostics</a> :: <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Diagnostic.html#t:Diagnostic\" title=\"Error.Diagnose.Diagnostic\">Diagnostic</a> msg -&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Diagnostic.html#t:Diagnostic\" title=\"Error.Diagnose.Diagnostic\">Diagnostic</a> msg -&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Diagnostic.html#t:Diagnostic\" title=\"Error.Diagnose.Diagnostic\">Diagnostic</a> msg","name":"concatDiagnostics","module":"Elara.Error","link":"elara/Elara-Error.html#v:concatDiagnostics"},{"display_html":"module <a href=\"Elara-Error-Effect.html\">Elara.Error.Effect</a>","name":"","module":"Elara.Error","link":"elara"},{"display_html":"<a href=\"#v:nativeCallsForConversion\">nativeCallsForConversion</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"nativeCallsForConversion","module":"Elara.ReadFile","link":"elara/Elara-ReadFile.html#v:nativeCallsForConversion"},{"display_html":"<a href=\"#v:readFileUniversalNewlineConversion\">readFileUniversalNewlineConversion</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.12.2.0/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"readFileUniversalNewlineConversion","module":"Elara.ReadFile","link":"elara/Elara-ReadFile.html#v:readFileUniversalNewlineConversion"},{"display_html":"<a href=\"#v:readFileNativeNewlineConversion\">readFileNativeNewlineConversion</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.12.2.0/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"readFileNativeNewlineConversion","module":"Elara.ReadFile","link":"elara/Elara-ReadFile.html#v:readFileNativeNewlineConversion"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ReadFileError\">ReadFileError</a> = <a href=\"#v:DecodeError\">DecodeError</a> !<a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> !<a href=\"Prelude.html#t:UnicodeException\" title=\"Prelude\">UnicodeException</a>","name":"ReadFileError DecodeError","module":"Elara.ReadFile","link":"elara/Elara-ReadFile.html#t:ReadFileError"},{"display_html":"<a href=\"#v:getInputFiles\">getInputFiles</a> :: <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> '[<a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a>] (<a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>)","name":"getInputFiles","module":"Elara.ReadFile","link":"elara/Elara-ReadFile.html#v:getInputFiles"},{"display_html":"<a href=\"#v:runGetFileContentsQuery\">runGetFileContentsQuery</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es <a href=\"Elara-ReadFile.html#t:FileContents\" title=\"Elara.ReadFile\">FileContents</a>","name":"runGetFileContentsQuery","module":"Elara.ReadFile","link":"elara/Elara-ReadFile.html#v:runGetFileContentsQuery"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FileContents\">FileContents</a> = <a href=\"#v:FileContents\">FileContents</a> {<ul class=\"subs\"><li><a href=\"#v:filePath\">filePath</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li><li><a href=\"#v:fileContents\">fileContents</a> :: <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li></ul>}","name":"FileContents FileContents fileContents filePath","module":"Elara.ReadFile","link":"elara/Elara-ReadFile.html#t:FileContents"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Unique\">Unique</a> a = <a href=\"#v:Unique\">Unique</a> !a !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"Unique Unique","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#t:Unique"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Unique-39-\">Unique'</a> :: a -&gt; <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> a","name":"Unique'","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:Unique-39-"},{"display_html":"<a href=\"#v:uniqueId\">uniqueId</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> a) <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"uniqueId","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:uniqueId"},{"display_html":"<a href=\"#v:uniqueVal\">uniqueVal</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> a) a","name":"uniqueVal","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:uniqueVal"},{"display_html":"<a href=\"#v:unsafeMkUnique\">unsafeMkUnique</a> :: a -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> a","name":"unsafeMkUnique","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:unsafeMkUnique"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:UniqueId\">UniqueId</a> = <a href=\"#v:UniqueId\">UniqueId</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> ())","name":"UniqueId UniqueId","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#t:UniqueId"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:UniqueSupply\">UniqueSupply</a> = <a href=\"#v:UniqueSupply\">UniqueSupply</a> {<ul class=\"subs\"><li><a href=\"#v:_uniqueSupplyUniques\">_uniqueSupplyUniques</a> :: [<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>]</li></ul>}","name":"UniqueSupply UniqueSupply _uniqueSupplyUniques","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#t:UniqueSupply"},{"display_html":"<a href=\"#v:freshUniqueSupply\">freshUniqueSupply</a> :: <a href=\"Elara-Data-Unique.html#t:UniqueSupply\" title=\"Elara.Data.Unique\">UniqueSupply</a>","name":"freshUniqueSupply","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:freshUniqueSupply"},{"display_html":"<a href=\"#v:globalUniqueSupply\">globalUniqueSupply</a> :: <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> <a href=\"Elara-Data-Unique.html#t:UniqueSupply\" title=\"Elara.Data.Unique\">UniqueSupply</a>","name":"globalUniqueSupply","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:globalUniqueSupply"},{"display_html":"<a href=\"#v:resetGlobalUniqueSupply\">resetGlobalUniqueSupply</a> :: <a href=\"Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()","name":"resetGlobalUniqueSupply","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:resetGlobalUniqueSupply"},{"display_html":"<a href=\"#v:uniqueSupplyUniques\">uniqueSupplyUniques</a> :: <a href=\"Prelude.html#t:Iso-39-\" title=\"Prelude\">Iso'</a> <a href=\"Elara-Data-Unique.html#t:UniqueSupply\" title=\"Elara.Data.Unique\">UniqueSupply</a> [<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>]","name":"uniqueSupplyUniques","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:uniqueSupplyUniques"},{"display_html":"<a href=\"#v:getUniqueId\">getUniqueId</a> :: <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> a -&gt; <a href=\"Elara-Data-Unique.html#t:UniqueId\" title=\"Elara.Data.Unique\">UniqueId</a>","name":"getUniqueId","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:getUniqueId"},{"display_html":"<a href=\"#v:uniqueToText\">uniqueToText</a> :: (a -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) -&gt; <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> a -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"uniqueToText","module":"Elara.Data.Unique","link":"elara/Elara-Data-Unique.html#v:uniqueToText"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UniqueGen\">UniqueGen</a> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:NewUniqueNum\">NewUniqueNum</a> :: <span class=\"keyword\">forall</span> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> a <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li></ul>","name":"UniqueGen NewUniqueNum","module":"Elara.Data.Unique.Effect","link":"elara/Elara-Data-Unique-Effect.html#t:UniqueGen"},{"display_html":"<a href=\"#v:newUniqueNum\">newUniqueNum</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"newUniqueNum","module":"Elara.Data.Unique.Effect","link":"elara/Elara-Data-Unique-Effect.html#v:newUniqueNum"},{"display_html":"<a href=\"#v:uniqueGenToState\">uniqueGenToState</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Shared.html#t:State\" title=\"Effectful.State.Static.Shared\">State</a> <a href=\"Elara-Data-Unique.html#t:UniqueSupply\" title=\"Elara.Data.Unique\">UniqueSupply</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"uniqueGenToState","module":"Elara.Data.Unique.Effect","link":"elara/Elara-Data-Unique-Effect.html#v:uniqueGenToState"},{"display_html":"<a href=\"#v:uniqueGenToIORef\">uniqueGenToIORef</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> <a href=\"Elara-Data-Unique.html#t:UniqueSupply\" title=\"Elara.Data.Unique\">UniqueSupply</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"uniqueGenToIORef","module":"Elara.Data.Unique.Effect","link":"elara/Elara-Data-Unique-Effect.html#v:uniqueGenToIORef"},{"display_html":"<a href=\"#v:uniqueGenToGlobalIO\">uniqueGenToGlobalIO</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> ': r) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"uniqueGenToGlobalIO","module":"Elara.Data.Unique.Effect","link":"elara/Elara-Data-Unique-Effect.html#v:uniqueGenToGlobalIO"},{"display_html":"<a href=\"#v:makeUniqueId\">makeUniqueId</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Data-Unique.html#t:UniqueId\" title=\"Elara.Data.Unique\">UniqueId</a>","name":"makeUniqueId","module":"Elara.Data.Unique.Effect","link":"elara/Elara-Data-Unique-Effect.html#v:makeUniqueId"},{"display_html":"<a href=\"#v:makeUnique\">makeUnique</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> a)","name":"makeUnique","module":"Elara.Data.Unique.Effect","link":"elara/Elara-Data-Unique-Effect.html#v:makeUnique"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UniqueTyVar\">UniqueTyVar</a> = <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)","name":"UniqueTyVar","module":"Elara.TypeInfer.Unique","link":"elara/Elara-TypeInfer-Unique.html#t:UniqueTyVar"},{"display_html":"<a href=\"#v:uniqueIdToTyVar\">uniqueIdToTyVar</a> :: <a href=\"Elara-Data-Unique.html#t:UniqueId\" title=\"Elara.Data.Unique\">UniqueId</a> -&gt; <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>","name":"uniqueIdToTyVar","module":"Elara.TypeInfer.Unique","link":"elara/Elara-TypeInfer-Unique.html#v:uniqueIdToTyVar"},{"display_html":"<a href=\"#v:makeUniqueTyVar\">makeUniqueTyVar</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>","name":"makeUniqueTyVar","module":"Elara.TypeInfer.Unique","link":"elara/Elara-TypeInfer-Unique.html#v:makeUniqueTyVar"},{"display_html":"<a href=\"#v:makeUniqueTyVarWith\">makeUniqueTyVarWith</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>","name":"makeUniqueTyVarWith","module":"Elara.TypeInfer.Unique","link":"elara/Elara-TypeInfer-Unique.html#v:makeUniqueTyVarWith"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> (<a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a) =&gt; <a href=\"#t:HasDependencies\">HasDependencies</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:Key\">Key</a> a</li><li><a href=\"#v:keys\">keys</a> :: a -&gt; <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a)</li><li><a href=\"#v:key\">key</a> :: a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a</li><li><a href=\"#v:dependencies\">dependencies</a> :: a -&gt; [<a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a]</li></ul>","name":"HasDependencies Key dependencies key keys $dmkey $dmkeys","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#t:HasDependencies"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TopologicalGraph\">TopologicalGraph</a> a = <a href=\"#v:TopologicalGraph\">TopologicalGraph</a> {<ul class=\"subs\"><li><a href=\"#v:_moduleGraph\">_moduleGraph</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Graph\" title=\"Data.Graph\">Graph</a></li><li><a href=\"#v:_nodeFromVertex\">_nodeFromVertex</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Vertex\" title=\"Data.Graph\">Vertex</a> -&gt; (a, <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a, [<a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a])</li><li><a href=\"#v:_vertexFromKey\">_vertexFromKey</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Vertex\" title=\"Data.Graph\">Vertex</a></li></ul>}","name":"TopologicalGraph TopologicalGraph _moduleGraph _nodeFromVertex _vertexFromKey","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#t:TopologicalGraph"},{"display_html":"<a href=\"#v:moduleGraph\">moduleGraph</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a) <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Graph\" title=\"Data.Graph\">Graph</a>","name":"moduleGraph","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:moduleGraph"},{"display_html":"<a href=\"#v:nodeFromVertex\">nodeFromVertex</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a) (<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Vertex\" title=\"Data.Graph\">Vertex</a> -&gt; (a, <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a, [<a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a]))","name":"nodeFromVertex","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:nodeFromVertex"},{"display_html":"<a href=\"#v:vertexFromKey\">vertexFromKey</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a) (<a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Vertex\" title=\"Data.Graph\">Vertex</a>)","name":"vertexFromKey","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:vertexFromKey"},{"display_html":"<a href=\"#v:mapGraph\">mapGraph</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> m =&gt; (a -&gt; m) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m","name":"mapGraph","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:mapGraph"},{"display_html":"<a href=\"#v:traverseGraph\">traverseGraph</a> :: (<a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> m, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; (a -&gt; f m) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; f (<a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m)","name":"traverseGraph","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:traverseGraph"},{"display_html":"<a href=\"#v:traverseGraph_\">traverseGraph_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; (a -&gt; f b) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; f ()","name":"traverseGraph_","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:traverseGraph_"},{"display_html":"<a href=\"#v:traverseGraphTopologically\">traverseGraphTopologically</a> :: (<a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> m, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; (a -&gt; f m) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; f (<a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m)","name":"traverseGraphTopologically","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:traverseGraphTopologically"},{"display_html":"<a href=\"#v:traverseGraphTopologically_\">traverseGraphTopologically_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; (a -&gt; f m) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; f ()","name":"traverseGraphTopologically_","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:traverseGraphTopologically_"},{"display_html":"<a href=\"#v:traverseGraphRevTopologically\">traverseGraphRevTopologically</a> :: (<a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> m, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; (a -&gt; f m) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; f (<a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m)","name":"traverseGraphRevTopologically","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:traverseGraphRevTopologically"},{"display_html":"<a href=\"#v:traverseGraphRevTopologically_\">traverseGraphRevTopologically_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; (a -&gt; f m) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; f ()","name":"traverseGraphRevTopologically_","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:traverseGraphRevTopologically_"},{"display_html":"<a href=\"#v:genericGraphTraverse\">genericGraphTraverse</a> :: (<a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> a, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; (<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Graph\" title=\"Data.Graph\">Graph</a> -&gt; [<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Vertex\" title=\"Data.Graph\">Vertex</a>]) -&gt; (m -&gt; f a) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m -&gt; f (<a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a)","name":"genericGraphTraverse","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:genericGraphTraverse"},{"display_html":"<a href=\"#v:genericGraphTraverse_\">genericGraphTraverse_</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; (<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Graph\" title=\"Data.Graph\">Graph</a> -&gt; [<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:Vertex\" title=\"Data.Graph\">Vertex</a>]) -&gt; (m -&gt; f a) -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m -&gt; f ()","name":"genericGraphTraverse_","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:genericGraphTraverse_"},{"display_html":"<a href=\"#v:createGraph\">createGraph</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> a =&gt; [a] -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a","name":"createGraph","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:createGraph"},{"display_html":"<a href=\"#v:createEdge\">createEdge</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> a =&gt; a -&gt; <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (a, <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a, [<a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a])","name":"createEdge","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:createEdge"},{"display_html":"<a href=\"#v:removeNode\">removeNode</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> a =&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a","name":"removeNode","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:removeNode"},{"display_html":"<a href=\"#v:addNode\">addNode</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> a =&gt; a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a","name":"addNode","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:addNode"},{"display_html":"<a href=\"#v:replaceNode\">replaceNode</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> a =&gt; a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a","name":"replaceNode","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:replaceNode"},{"display_html":"<a href=\"#v:replaceNodeAt\">replaceNodeAt</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> a =&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a -&gt; a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a","name":"replaceNodeAt","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:replaceNodeAt"},{"display_html":"<a href=\"#v:allEntries\">allEntries</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m -&gt; [m]","name":"allEntries","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:allEntries"},{"display_html":"<a href=\"#v:allEntriesTopologically\">allEntriesTopologically</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> m =&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m -&gt; [m]","name":"allEntriesTopologically","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:allEntriesTopologically"},{"display_html":"<a href=\"#v:allEntriesRevTopologically\">allEntriesRevTopologically</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> m =&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> m -&gt; [m]","name":"allEntriesRevTopologically","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:allEntriesRevTopologically"},{"display_html":"<a href=\"#v:dependenciesOf\">dependenciesOf</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; [<a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a]","name":"dependenciesOf","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:dependenciesOf"},{"display_html":"<a href=\"#v:moduleFromName\">moduleFromName</a> :: <a href=\"Elara-Data-TopologicalGraph.html#t:Key\" title=\"Elara.Data.TopologicalGraph\">Key</a> a -&gt; <a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> a -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a","name":"moduleFromName","module":"Elara.Data.TopologicalGraph","link":"elara/Elara-Data-TopologicalGraph.html#v:moduleFromName"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Bind\">Bind</a> b (expr :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)<ul class=\"subs\"><li>= <a href=\"#v:Recursive\">Recursive</a> [(b, expr b)]</li><li>| <a href=\"#v:NonRecursive\">NonRecursive</a> (b, expr b)</li></ul>","name":"Bind NonRecursive Recursive","module":"Elara.Core.Generic","link":"elara/Elara-Core-Generic.html#t:Bind"},{"display_html":"<a href=\"#v:binds\">binds</a> :: <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b expr -&gt; [(b, expr b)]","name":"binds","module":"Elara.Core.Generic","link":"elara/Elara-Core-Generic.html#v:binds"},{"display_html":"<a href=\"#v:binders\">binders</a> :: <span class=\"keyword\">forall</span> b (expr :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b expr -&gt; [b]","name":"binders","module":"Elara.Core.Generic","link":"elara/Elara-Core-Generic.html#v:binders"},{"display_html":"<a href=\"#v:mapBind\">mapBind</a> :: (b -&gt; b') -&gt; (expr b -&gt; expr' b') -&gt; <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b expr -&gt; <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b' expr'","name":"mapBind","module":"Elara.Core.Generic","link":"elara/Elara-Core-Generic.html#v:mapBind"},{"display_html":"<a href=\"#v:traverseBind\">traverseBind</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; (b -&gt; f b') -&gt; (expr b -&gt; f (expr' b')) -&gt; <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b expr -&gt; f (<a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b' expr')","name":"traverseBind","module":"Elara.Core.Generic","link":"elara/Elara-Core-Generic.html#v:traverseBind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LocatedAST\">LocatedAST</a><ul class=\"subs\"><li>= <a href=\"#v:Frontend\">Frontend</a></li><li>| <a href=\"#v:Desugared\">Desugared</a></li><li>| <a href=\"#v:Renamed\">Renamed</a></li><li>| <a href=\"#v:Shunted\">Shunted</a></li><li>| <a href=\"#v:MidKinded\">MidKinded</a></li><li>| <a href=\"#v:Kinded\">Kinded</a></li><li>| <a href=\"#v:Typed\">Typed</a></li><li>| <a href=\"#v:Core\">Core</a></li></ul>","name":"LocatedAST Core Desugared Frontend Kinded MidKinded Renamed Shunted Typed","module":"Elara.AST.Select","link":"elara/Elara-AST-Select.html#t:LocatedAST"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnlocatedAST\">UnlocatedAST</a><ul class=\"subs\"><li>= <a href=\"#v:UnlocatedFrontend\">UnlocatedFrontend</a></li><li>| <a href=\"#v:UnlocatedDesugared\">UnlocatedDesugared</a></li><li>| <a href=\"#v:UnlocatedRenamed\">UnlocatedRenamed</a></li><li>| <a href=\"#v:UnlocatedShunted\">UnlocatedShunted</a></li><li>| <a href=\"#v:UnlocatedTyped\">UnlocatedTyped</a></li></ul>","name":"UnlocatedAST UnlocatedDesugared UnlocatedFrontend UnlocatedRenamed UnlocatedShunted UnlocatedTyped","module":"Elara.AST.Select","link":"elara/Elara-AST-Select.html#t:UnlocatedAST"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DataConCantHappen\">DataConCantHappen</a>","name":"DataConCantHappen","module":"Elara.AST.Generic.Common","link":"elara/Elara-AST-Generic-Common.html#t:DataConCantHappen"},{"display_html":"<a href=\"#v:dataConCantHappen\">dataConCantHappen</a> :: <a href=\"Elara-AST-Generic-Common.html#t:DataConCantHappen\" title=\"Elara.AST.Generic.Common\">DataConCantHappen</a> -&gt; a","name":"dataConCantHappen","module":"Elara.AST.Generic.Common","link":"elara/Elara-AST-Generic-Common.html#v:dataConCantHappen"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NoFieldValue\">NoFieldValue</a> = <a href=\"#v:NoFieldValue\">NoFieldValue</a>","name":"NoFieldValue NoFieldValue","module":"Elara.AST.Generic.Common","link":"elara/Elara-AST-Generic-Common.html#t:NoFieldValue"},{"display_html":"<a href=\"#v:use-39-\">use'</a> :: <span class=\"keyword\">forall</span> k a (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) b. (<a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> a <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is a b -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r b","name":"use'","module":"Effectful.State.Extra","link":"elara/Effectful-State-Extra.html#v:use-39-"},{"display_html":"<a href=\"#v:locally\">locally</a> :: <span class=\"keyword\">forall</span> s (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> s <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; (s -&gt; s) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"locally","module":"Effectful.State.Extra","link":"elara/Effectful-State-Extra.html#v:locally"},{"display_html":"<a href=\"#v:scoped\">scoped</a> :: <span class=\"keyword\">forall</span> s (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> s <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"scoped","module":"Effectful.State.Extra","link":"elara/Effectful-State-Extra.html#v:scoped"},{"display_html":"<a href=\"#v:fromEither\">fromEither</a> :: <span class=\"keyword\">forall</span> e (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> e <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> e) =&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> e a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"fromEither","module":"Effectful.Error.Extra","link":"elara/Effectful-Error-Extra.html#v:fromEither"},{"display_html":"<a href=\"#v:elaraDebug\">elaraDebug</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"elaraDebug","module":"Print","link":"elara/Print.html#v:elaraDebug"},{"display_html":"<a href=\"#v:printColored\">printColored</a> :: (<a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m) =&gt; a -&gt; m ()","name":"printColored","module":"Print","link":"elara/Print.html#v:printColored"},{"display_html":"<a href=\"#v:printPretty\">printPretty</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, <a href=\"Prelude.html#t:MonadIO\" title=\"Prelude\">MonadIO</a> m) =&gt; a -&gt; m ()","name":"printPretty","module":"Print","link":"elara/Print.html#v:printPretty"},{"display_html":"<a href=\"#v:showColored\">showColored</a> :: (<a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"Prelude.html#t:IsString\" title=\"Prelude\">IsString</a> s) =&gt; a -&gt; s","name":"showColored","module":"Print","link":"elara/Print.html#v:showColored"},{"display_html":"<a href=\"#v:showPretty\">showPretty</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; a -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"showPretty","module":"Print","link":"elara/Print.html#v:showPretty"},{"display_html":"<a href=\"#v:prettyToString\">prettyToString</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; a -&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"prettyToString","module":"Print","link":"elara/Print.html#v:prettyToString"},{"display_html":"<a href=\"#v:showPrettyUnannotated\">showPrettyUnannotated</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; a -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"showPrettyUnannotated","module":"Print","link":"elara/Print.html#v:showPrettyUnannotated"},{"display_html":"<a href=\"#v:debugColored\">debugColored</a> :: (<a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f) =&gt; a -&gt; f ()","name":"debugColored","module":"Print","link":"elara/Print.html#v:debugColored"},{"display_html":"<a href=\"#v:debugColoredStr\">debugColoredStr</a> :: <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f =&gt; <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a> -&gt; f ()","name":"debugColoredStr","module":"Print","link":"elara/Print.html#v:debugColoredStr"},{"display_html":"<a href=\"#v:debugPretty\">debugPretty</a> :: (<a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> m, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a) =&gt; a -&gt; m ()","name":"debugPretty","module":"Print","link":"elara/Print.html#v:debugPretty"},{"display_html":"<a href=\"#v:debugWithResult\">debugWithResult</a> :: (<a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a1, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a2) =&gt; a1 -&gt; a2 -&gt; a2","name":"debugWithResult","module":"Print","link":"elara/Print.html#v:debugWithResult"},{"display_html":"<a href=\"#v:runLogToStdoutAndFile\">runLogToStdoutAndFile</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"https://hackage.haskell.org/package/co-log-effectful-0.0.0.1/docs/Effectful-Colog.html#t:Log\" title=\"Effectful.Colog\">Log</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) ': es) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a","name":"runLogToStdoutAndFile","module":"Elara.Pipeline","link":"elara/Elara-Pipeline.html#v:runLogToStdoutAndFile"},{"display_html":"<a href=\"#v:generatedFileName\">generatedFileName</a> :: <a href=\"Prelude.html#t:String\" title=\"Prelude\">String</a>","name":"generatedFileName","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:generatedFileName"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RealPosition\">RealPosition</a> = <a href=\"#v:Position\">Position</a> {<ul class=\"subs\"><li><a href=\"#v:_line\">_line</a> :: !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li><a href=\"#v:_column\">_column</a> :: !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li></ul>}","name":"RealPosition Position _column _line","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:RealPosition"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Position\">Position</a><ul class=\"subs\"><li>= <a href=\"#v:RealPosition\">RealPosition</a> !<a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a></li><li>| <a href=\"#v:GeneratedPosition\">GeneratedPosition</a></li></ul>","name":"Position GeneratedPosition RealPosition","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:Position"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RealSourceRegion\">RealSourceRegion</a> = <a href=\"#v:UnsafeMkSourceRegion\">UnsafeMkSourceRegion</a> {<ul class=\"subs\"><li><a href=\"#v:_sourceFile\">_sourceFile</a> :: !(<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>)</li><li><a href=\"#v:_startPos\">_startPos</a> :: !<a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a></li><li><a href=\"#v:_endPos\">_endPos</a> :: !<a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a></li></ul>}","name":"RealSourceRegion UnsafeMkSourceRegion _endPos _sourceFile _startPos","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:RealSourceRegion"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SourceRegion\">SourceRegion</a><ul class=\"subs\"><li>= <a href=\"#v:RealSourceRegion\">RealSourceRegion</a> !<a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a></li><li>| <a href=\"#v:GeneratedRegion\">GeneratedRegion</a> !<a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li></ul>","name":"SourceRegion GeneratedRegion RealSourceRegion","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:SourceRegion"},{"display_html":"<a href=\"#v:_RealPosition\">_RealPosition</a> :: <a href=\"Prelude.html#t:Prism-39-\" title=\"Prelude\">Prism'</a> <a href=\"Elara-AST-Region.html#t:Position\" title=\"Elara.AST.Region\">Position</a> <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a>","name":"_RealPosition","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:_RealPosition"},{"display_html":"<a href=\"#v:_GeneratedPosition\">_GeneratedPosition</a> :: <a href=\"Prelude.html#t:Prism-39-\" title=\"Prelude\">Prism'</a> <a href=\"Elara-AST-Region.html#t:Position\" title=\"Elara.AST.Region\">Position</a> ()","name":"_GeneratedPosition","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:_GeneratedPosition"},{"display_html":"<a href=\"#v:column\">column</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"column","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:column"},{"display_html":"<a href=\"#v:line\">line</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"line","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:line"},{"display_html":"<a href=\"#v:_RealSourceRegion\">_RealSourceRegion</a> :: <a href=\"Prelude.html#t:Prism-39-\" title=\"Prelude\">Prism'</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a>","name":"_RealSourceRegion","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:_RealSourceRegion"},{"display_html":"<a href=\"#v:_GeneratedRegion\">_GeneratedRegion</a> :: <a href=\"Prelude.html#t:Prism-39-\" title=\"Prelude\">Prism'</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"_GeneratedRegion","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:_GeneratedRegion"},{"display_html":"<a href=\"#v:endPos\">endPos</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a> <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a>","name":"endPos","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:endPos"},{"display_html":"<a href=\"#v:sourceFile\">sourceFile</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>)","name":"sourceFile","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:sourceFile"},{"display_html":"<a href=\"#v:startPos\">startPos</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a> <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a>","name":"startPos","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:startPos"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:HasPath\">HasPath</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:path\">path</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> a (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>)</li></ul>","name":"HasPath path","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:HasPath"},{"display_html":"<a href=\"#v:mkSourceRegion\">mkSourceRegion</a> :: <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Pos.html#t:SourcePos\" title=\"Text.Megaparsec.Pos\">SourcePos</a> -&gt; <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Pos.html#t:SourcePos\" title=\"Text.Megaparsec.Pos\">SourcePos</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a>","name":"mkSourceRegion","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:mkSourceRegion"},{"display_html":"<a href=\"#v:mkSourceRegionIn\">mkSourceRegionIn</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a>","name":"mkSourceRegionIn","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:mkSourceRegionIn"},{"display_html":"<a href=\"#v:spToPosition\">spToPosition</a> :: <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Pos.html#t:SourcePos\" title=\"Text.Megaparsec.Pos\">SourcePos</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a>","name":"spToPosition","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:spToPosition"},{"display_html":"<a href=\"#v:positionToSp\">positionToSp</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> -&gt; <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Pos.html#t:SourcePos\" title=\"Text.Megaparsec.Pos\">SourcePos</a>","name":"positionToSp","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:positionToSp"},{"display_html":"<a href=\"#v:generatedSourcePos\">generatedSourcePos</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Pos.html#t:SourcePos\" title=\"Text.Megaparsec.Pos\">SourcePos</a>","name":"generatedSourcePos","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:generatedSourcePos"},{"display_html":"<a href=\"#v:generatedSourceRegion\">generatedSourceRegion</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"generatedSourceRegion","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:generatedSourceRegion"},{"display_html":"<a href=\"#v:generatedLocated\">generatedLocated</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; a -&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a","name":"generatedLocated","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:generatedLocated"},{"display_html":"<a href=\"#v:sourceRegionToDiagnosePosition\">sourceRegionToDiagnosePosition</a> :: <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Position.html#t:Position\" title=\"Error.Diagnose.Position\">Position</a>","name":"sourceRegionToDiagnosePosition","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:sourceRegionToDiagnosePosition"},{"display_html":"<a href=\"#v:positionToDiagnosePosition\">positionToDiagnosePosition</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> -&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Position.html#t:Position\" title=\"Error.Diagnose.Position\">Position</a>","name":"positionToDiagnosePosition","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:positionToDiagnosePosition"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Located\">Located</a> a = <a href=\"#v:Located\">Located</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> a","name":"Located Located","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:Located"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:HasSourceRegion\">HasSourceRegion</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:sourceRegion\">sourceRegion</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> a <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a></li></ul>","name":"HasSourceRegion sourceRegion","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:HasSourceRegion"},{"display_html":"<a href=\"#v:_Located\">_Located</a> :: <a href=\"Prelude.html#t:Iso\" title=\"Prelude\">Iso</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a1) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a2) (<a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>, a1) (<a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>, a2)","name":"_Located","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:_Located"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:Unlocate\">Unlocate</a> g <span class=\"keyword\">where ...</span>","name":"Unlocate","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:Unlocate"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:IgnoreLocation\">IgnoreLocation</a> a = <a href=\"#v:IgnoreLocation\">IgnoreLocation</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a)","name":"IgnoreLocation IgnoreLocation","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#t:IgnoreLocation"},{"display_html":"<a href=\"#v:_IgnoreLocation\">_IgnoreLocation</a> :: <a href=\"Prelude.html#t:Iso\" title=\"Prelude\">Iso</a> (<a href=\"Elara-AST-Region.html#t:IgnoreLocation\" title=\"Elara.AST.Region\">IgnoreLocation</a> a1) (<a href=\"Elara-AST-Region.html#t:IgnoreLocation\" title=\"Elara.AST.Region\">IgnoreLocation</a> a2) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a1) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a2)","name":"_IgnoreLocation","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:_IgnoreLocation"},{"display_html":"<a href=\"#v:generatedSourceRegionFrom\">generatedSourceRegionFrom</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a -&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"generatedSourceRegionFrom","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:generatedSourceRegionFrom"},{"display_html":"<a href=\"#v:unlocated\">unlocated</a> :: <a href=\"Prelude.html#t:Lens\" title=\"Prelude\">Lens</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> b) a b","name":"unlocated","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:unlocated"},{"display_html":"<a href=\"#v:withLocationOf\">withLocationOf</a> :: <a href=\"Elara-AST-Region.html#t:HasSourceRegion\" title=\"Elara.AST.Region\">HasSourceRegion</a> b =&gt; a -&gt; b -&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a","name":"withLocationOf","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:withLocationOf"},{"display_html":"<a href=\"#v:merge\">merge</a> :: (<a href=\"Elara-AST-Region.html#t:HasSourceRegion\" title=\"Elara.AST.Region\">HasSourceRegion</a> a, <a href=\"Elara-AST-Region.html#t:HasSourceRegion\" title=\"Elara.AST.Region\">HasSourceRegion</a> b) =&gt; (a -&gt; b -&gt; c) -&gt; a -&gt; b -&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> c","name":"merge","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:merge"},{"display_html":"<a href=\"#v:enclosingRegion\">enclosingRegion</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a>","name":"enclosingRegion","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:enclosingRegion"},{"display_html":"<a href=\"#v:enclosingRegion-39-\">enclosingRegion'</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"enclosingRegion'","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:enclosingRegion-39-"},{"display_html":"<a href=\"#v:spanningRegion\">spanningRegion</a> :: <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a>","name":"spanningRegion","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:spanningRegion"},{"display_html":"<a href=\"#v:spanningRegion-39-\">spanningRegion'</a> :: <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"spanningRegion'","module":"Elara.AST.Region","link":"elara/Elara-AST-Region.html#v:spanningRegion-39-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Unwrap\">Unwrap</a> (c :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:unwrap\">unwrap</a> :: c a -&gt; a</li></ul>","name":"Unwrap unwrap","module":"Elara.Data.Unwrap","link":"elara/Elara-Data-Unwrap.html#t:Unwrap"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:StripLocation\">StripLocation</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:stripLocation\">stripLocation</a> :: a -&gt; b</li></ul>","name":"StripLocation stripLocation","module":"Elara.AST.StripLocation","link":"elara/Elara-AST-StripLocation.html#t:StripLocation"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ModuleName\">ModuleName</a> = <a href=\"#v:ModuleName\">ModuleName</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)","name":"ModuleName ModuleName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:ModuleName"},{"display_html":"<a href=\"#v:appendModule\">appendModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>","name":"appendModule","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#v:appendModule"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:VarName\">VarName</a><ul class=\"subs\"><li>= <a href=\"#v:NormalVarName\">NormalVarName</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a></li><li>| <a href=\"#v:OperatorVarName\">OperatorVarName</a> <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a></li></ul>","name":"VarName NormalVarName OperatorVarName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:VarName"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:LowerAlphaName\">LowerAlphaName</a> = <a href=\"#v:LowerAlphaName\">LowerAlphaName</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"LowerAlphaName LowerAlphaName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:LowerAlphaName"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:TypeName\">TypeName</a> = <a href=\"#v:TypeName\">TypeName</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"TypeName TypeName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:TypeName"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:OpName\">OpName</a> = <a href=\"#v:OpName\">OpName</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"OpName OpName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:OpName"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:VarOrConName\">VarOrConName</a><ul class=\"subs\"><li>= <a href=\"#v:VarName\">VarName</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a></li><li>| <a href=\"#v:ConName\">ConName</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a></li></ul>","name":"VarOrConName ConName VarName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:VarOrConName"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Name\">Name</a><ul class=\"subs\"><li>= <a href=\"#v:NVarName\">NVarName</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a></li><li>| <a href=\"#v:NTypeName\">NTypeName</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a></li></ul>","name":"Name NTypeName NVarName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:Name"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UniqueName\">UniqueName</a> = <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>","name":"UniqueName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:UniqueName"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:NameLike\">NameLike</a> name <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:nameText\">nameText</a> :: name -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:fullNameText\">fullNameText</a> :: name -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:moduleName\">moduleName</a> :: name -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li></ul>","name":"NameLike fullNameText moduleName nameText $dmmoduleName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:NameLike"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToName\">ToName</a> name <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toName\">toName</a> :: name -&gt; <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a></li></ul>","name":"ToName toName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:ToName"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MaybeQualified\">MaybeQualified</a> name = <a href=\"#v:MaybeQualified\">MaybeQualified</a> {<ul class=\"subs\"><li><a href=\"#v:_maybeQualifiedName\">_maybeQualifiedName</a> :: name</li><li><a href=\"#v:_maybeQualifiedQualifier\">_maybeQualifiedQualifier</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li></ul>}","name":"MaybeQualified MaybeQualified _maybeQualifiedName _maybeQualifiedQualifier","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:MaybeQualified"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Qualified\">Qualified</a> name = <a href=\"#v:Qualified\">Qualified</a> {<ul class=\"subs\"><li><a href=\"#v:_qualifiedName\">_qualifiedName</a> :: name</li><li><a href=\"#v:qualifier\">qualifier</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li></ul>}","name":"Qualified Qualified _qualifiedName qualifier","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:Qualified"},{"display_html":"<a href=\"#v:unqualified\">unqualified</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> name) name","name":"unqualified","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#v:unqualified"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Unqualified\">Unqualified</a> name = <a href=\"#v:Unqualified\">Unqualified</a> {<ul class=\"subs\"><li><a href=\"#v:_unqualifiedName\">_unqualifiedName</a> :: name</li></ul>}","name":"Unqualified Unqualified _unqualifiedName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:Unqualified"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:HasName\">HasName</a> a n | a -&gt; n <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> a n</li></ul>","name":"HasName name","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:HasName"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ContainsName\">ContainsName</a> a n | a -&gt; n <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:containedName\">containedName</a> :: <a href=\"Prelude.html#t:Getter\" title=\"Prelude\">Getter</a> a n</li></ul>","name":"ContainsName containedName","module":"Elara.AST.Name","link":"elara/Elara-AST-Name.html#t:ContainsName"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypeVariable\">TypeVariable</a><ul class=\"subs\"><li>= <a href=\"#v:UnificationVar\">UnificationVar</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a></li><li>| <a href=\"#v:SkolemVar\">SkolemVar</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a></li></ul>","name":"TypeVariable SkolemVar UnificationVar","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:TypeVariable"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Type\">Type</a> loc<ul class=\"subs\"><li>= <a href=\"#v:Polytype\">Polytype</a> !(<a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> loc)</li><li>| <a href=\"#v:Lifted\">Lifted</a> (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)</li></ul>","name":"Type Lifted Polytype","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:Type"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Polytype\">Polytype</a> loc = <a href=\"#v:Forall\">Forall</a> loc [<a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>] (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc) (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)","name":"Polytype Forall","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:Polytype"},{"display_html":"<a href=\"#v:typeLoc\">typeLoc</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc -&gt; loc","name":"typeLoc","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:typeLoc"},{"display_html":"<a href=\"#v:polytypeLoc\">polytypeLoc</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> loc -&gt; loc","name":"polytypeLoc","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:polytypeLoc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Constraint\">Constraint</a> loc<ul class=\"subs\"><li>= <a href=\"#v:EmptyConstraint\">EmptyConstraint</a> loc</li><li>| <a href=\"#v:Conjunction\">Conjunction</a> loc (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc) (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc)</li><li>| <a href=\"#v:Equality\">Equality</a> loc (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc) (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)</li></ul>","name":"Constraint Conjunction EmptyConstraint Equality","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:Constraint"},{"display_html":"<a href=\"#v:constraintLoc\">constraintLoc</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc -&gt; loc","name":"constraintLoc","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:constraintLoc"},{"display_html":"<a href=\"#v:emptyLocation\">emptyLocation</a> :: <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"emptyLocation","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:emptyLocation"},{"display_html":"<a href=\"#v:reduce\">reduce</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> a -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> a","name":"reduce","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:reduce"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AxiomScheme\">AxiomScheme</a> (loc :: k)<ul class=\"subs\"><li>= <a href=\"#v:EmptyAxiomScheme\">EmptyAxiomScheme</a></li><li>| <a href=\"#v:ConjunctionAxiomScheme\">ConjunctionAxiomScheme</a> (<a href=\"Elara-TypeInfer-Type.html#t:AxiomScheme\" title=\"Elara.TypeInfer.Type\">AxiomScheme</a> loc) (<a href=\"Elara-TypeInfer-Type.html#t:AxiomScheme\" title=\"Elara.TypeInfer.Type\">AxiomScheme</a> loc)</li><li>| <a href=\"#v:ForallAxiomScheme\">ForallAxiomScheme</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a> (<a href=\"Elara-TypeInfer-Type.html#t:AxiomScheme\" title=\"Elara.TypeInfer.Type\">AxiomScheme</a> loc) (<a href=\"Elara-TypeInfer-Type.html#t:AxiomScheme\" title=\"Elara.TypeInfer.Type\">AxiomScheme</a> loc)</li></ul>","name":"AxiomScheme ConjunctionAxiomScheme EmptyAxiomScheme ForallAxiomScheme","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:AxiomScheme"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Monotype\">Monotype</a> loc<ul class=\"subs\"><li>= <a href=\"#v:TypeVar\">TypeVar</a> loc <a href=\"Elara-TypeInfer-Type.html#t:TypeVariable\" title=\"Elara.TypeInfer.Type\">TypeVariable</a></li><li>| <a href=\"#v:Scalar\">Scalar</a> loc <a href=\"Elara-TypeInfer-Type.html#t:Scalar\" title=\"Elara.TypeInfer.Type\">Scalar</a></li><li>| <a href=\"#v:TypeConstructor\">TypeConstructor</a> loc (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) [<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc]</li><li>| <a href=\"#v:Function\">Function</a> loc (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc) (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)</li></ul>","name":"Monotype Function Scalar TypeConstructor TypeVar","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:Monotype"},{"display_html":"<a href=\"#v:monotypeLoc\">monotypeLoc</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; loc","name":"monotypeLoc","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:monotypeLoc"},{"display_html":"<a href=\"#v:functionMonotypeResult\">functionMonotypeResult</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc","name":"functionMonotypeResult","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:functionMonotypeResult"},{"display_html":"<a href=\"#v:functionMonotypeArgs\">functionMonotypeArgs</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; [<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc]","name":"functionMonotypeArgs","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:functionMonotypeArgs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Scalar\">Scalar</a><ul class=\"subs\"><li>= <a href=\"#v:ScalarInt\">ScalarInt</a></li><li>| <a href=\"#v:ScalarFloat\">ScalarFloat</a></li><li>| <a href=\"#v:ScalarString\">ScalarString</a></li><li>| <a href=\"#v:ScalarChar\">ScalarChar</a></li><li>| <a href=\"#v:ScalarUnit\">ScalarUnit</a></li></ul>","name":"Scalar ScalarChar ScalarFloat ScalarInt ScalarString ScalarUnit","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:Scalar"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DataCon\">DataCon</a> = <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"DataCon","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:DataCon"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Substitution\">Substitution</a> loc = <a href=\"#v:Substitution\">Substitution</a> (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a> (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc))","name":"Substitution Substitution","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:Substitution"},{"display_html":"<a href=\"#v:substitution\">substitution</a> :: (<a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>, <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc) -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc","name":"substitution","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#v:substitution"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Substitutable\">Substitutable</a> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) loc <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:substitute\">substitute</a> :: <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; a loc -&gt; a loc</li><li><a href=\"#v:substituteAll\">substituteAll</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc -&gt; a loc -&gt; a loc</li></ul>","name":"Substitutable substitute substituteAll $dmsubstituteAll","module":"Elara.TypeInfer.Type","link":"elara/Elara-TypeInfer-Type.html#t:Substitutable"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:TypeEnvironment\">TypeEnvironment</a> loc = <a href=\"#v:TypeEnvironment\">TypeEnvironment</a> (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc) (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc))","name":"TypeEnvironment TypeEnvironment","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#t:TypeEnvironment"},{"display_html":"<a href=\"#v:emptyTypeEnvironment\">emptyTypeEnvironment</a> :: <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc","name":"emptyTypeEnvironment","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:emptyTypeEnvironment"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypeEnvKey\">TypeEnvKey</a> (loc :: k)<ul class=\"subs\"><li>= <a href=\"#v:DataConKey\">DataConKey</a> <a href=\"Elara-TypeInfer-Type.html#t:DataCon\" title=\"Elara.TypeInfer.Type\">DataCon</a></li><li>| <a href=\"#v:TermVarKey\">TermVarKey</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)</li></ul>","name":"TypeEnvKey DataConKey TermVarKey","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#t:TypeEnvKey"},{"display_html":"<a href=\"#v:addType\">addType</a> :: <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc -&gt; <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc -&gt; <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc","name":"addType","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:addType"},{"display_html":"<a href=\"#v:addType-39-\">addType'</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"addType'","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:addType-39-"},{"display_html":"<a href=\"#v:lookupTypeMaybe\">lookupTypeMaybe</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc))","name":"lookupTypeMaybe","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:lookupTypeMaybe"},{"display_html":"<a href=\"#v:lookupType\">lookupType</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-Environment.html#t:InferError\" title=\"Elara.TypeInfer.Environment\">InferError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc) =&gt; <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc)","name":"lookupType","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:lookupType"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:LocalTypeEnvironment\">LocalTypeEnvironment</a> loc = <a href=\"#v:LocalTypeEnvironment\">LocalTypeEnvironment</a> (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc))","name":"LocalTypeEnvironment LocalTypeEnvironment","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment"},{"display_html":"<a href=\"#v:emptyLocalTypeEnvironment\">emptyLocalTypeEnvironment</a> :: <a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc","name":"emptyLocalTypeEnvironment","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:emptyLocalTypeEnvironment"},{"display_html":"<a href=\"#v:addLocalType\">addLocalType</a> :: <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc -&gt; <a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc -&gt; <a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc","name":"addLocalType","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:addLocalType"},{"display_html":"<a href=\"#v:withLocalType\">withLocalType</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"withLocalType","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:withLocalType"},{"display_html":"<a href=\"#v:lookupLocalVarType\">lookupLocalVarType</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-Environment.html#t:InferError\" title=\"Elara.TypeInfer.Environment\">InferError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc) =&gt; <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc)","name":"lookupLocalVarType","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:lookupLocalVarType"},{"display_html":"<a href=\"#v:lookupLocalVar\">lookupLocalVar</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-Environment.html#t:InferError\" title=\"Elara.TypeInfer.Environment\">InferError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc) =&gt; <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc)","name":"lookupLocalVar","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#v:lookupLocalVar"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InferError\">InferError</a> loc<ul class=\"subs\"><li>= <a href=\"#v:UnboundTermVar\">UnboundTermVar</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc) (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc)</li><li>| <a href=\"#v:UnboundLocalVar\">UnboundLocalVar</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) (<a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc)</li></ul>","name":"InferError UnboundLocalVar UnboundTermVar","module":"Elara.TypeInfer.Environment","link":"elara/Elara-TypeInfer-Environment.html#t:InferError"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Ftv\">Ftv</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:ftv\">ftv</a> :: a -&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-TypeInfer-Type.html#t:TypeVariable\" title=\"Elara.TypeInfer.Type\">TypeVariable</a></li></ul>","name":"Ftv ftv","module":"Elara.TypeInfer.Ftv","link":"elara/Elara-TypeInfer-Ftv.html#t:Ftv"},{"display_html":"<a href=\"#v:occurs\">occurs</a> :: <a href=\"Elara-TypeInfer-Ftv.html#t:Ftv\" title=\"Elara.TypeInfer.Ftv\">Ftv</a> a =&gt; <a href=\"Elara-TypeInfer-Type.html#t:TypeVariable\" title=\"Elara.TypeInfer.Type\">TypeVariable</a> -&gt; a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"occurs","module":"Elara.TypeInfer.Ftv","link":"elara/Elara-TypeInfer-Ftv.html#v:occurs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Fuv\">Fuv</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fuv\">fuv</a> :: a -&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a></li></ul>","name":"Fuv fuv","module":"Elara.TypeInfer.Ftv","link":"elara/Elara-TypeInfer-Ftv.html#t:Fuv"},{"display_html":"<a href=\"#v:generalise\">generalise</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"generalise","module":"Elara.TypeInfer.Generalise","link":"elara/Elara-TypeInfer-Generalise.html#v:generalise"},{"display_html":"<a href=\"#v:removeSkolems\">removeSkolems</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc","name":"removeSkolems","module":"Elara.TypeInfer.Generalise","link":"elara/Elara-TypeInfer-Generalise.html#v:removeSkolems"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:BinderSet\">BinderSet</a> = <a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)","name":"BinderSet","module":"Elara.SCC.Type","link":"elara/Elara-SCC-Type.html#t:BinderSet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ReachableSubgraph\">ReachableSubgraph</a> = <a href=\"#v:ReachableSubgraph\">ReachableSubgraph</a> {<ul class=\"subs\"><li><a href=\"#v:root\">root</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a></li><li><a href=\"#v:nodes\">nodes</a> :: <a href=\"Elara-SCC-Type.html#t:BinderSet\" title=\"Elara.SCC.Type\">BinderSet</a></li><li><a href=\"#v:edges\">edges</a> :: <a href=\"Prelude.html#t:HashMap\" title=\"Prelude\">HashMap</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) <a href=\"Elara-SCC-Type.html#t:BinderSet\" title=\"Elara.SCC.Type\">BinderSet</a></li></ul>}","name":"ReachableSubgraph ReachableSubgraph edges nodes root","module":"Elara.SCC.Type","link":"elara/Elara-SCC-Type.html#t:ReachableSubgraph"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SCCKey\">SCCKey</a> = <a href=\"#v:SCCKey\">SCCKey</a> {<ul class=\"subs\"><li><a href=\"#v:members\">members</a> :: <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)</li></ul>}","name":"SCCKey SCCKey members","module":"Elara.SCC.Type","link":"elara/Elara-SCC-Type.html#t:SCCKey"},{"display_html":"<a href=\"#v:sccKeyToSCC\">sccKeyToSCC</a> :: <a href=\"Elara-SCC-Type.html#t:SCCKey\" title=\"Elara.SCC.Type\">SCCKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)","name":"sccKeyToSCC","module":"Elara.SCC.Type","link":"elara/Elara-SCC-Type.html#v:sccKeyToSCC"},{"display_html":"<a href=\"#v:sccKeyFromSCC\">sccKeyFromSCC</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) -&gt; <a href=\"Elara-SCC-Type.html#t:SCCKey\" title=\"Elara.SCC.Type\">SCCKey</a>","name":"sccKeyFromSCC","module":"Elara.SCC.Type","link":"elara/Elara-SCC-Type.html#v:sccKeyFromSCC"},{"display_html":"<a href=\"#v:mkSCCKey\">mkSCCKey</a> :: <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) -&gt; <a href=\"Elara-SCC-Type.html#t:SCCKey\" title=\"Elara.SCC.Type\">SCCKey</a>","name":"mkSCCKey","module":"Elara.SCC.Type","link":"elara/Elara-SCC-Type.html#v:mkSCCKey"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Lexeme\">Lexeme</a> = <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a>","name":"Lexeme","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#t:Lexeme"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TokPosition\">TokPosition</a> = <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a>","name":"TokPosition","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#t:TokPosition"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Token\">Token</a><ul class=\"subs\"><li>= <a href=\"#v:TokenSemicolon\">TokenSemicolon</a></li><li>| <a href=\"#v:TokenComma\">TokenComma</a></li><li>| <a href=\"#v:TokenDot\">TokenDot</a></li><li>| <a href=\"#v:TokenColon\">TokenColon</a></li><li>| <a href=\"#v:TokenDoubleColon\">TokenDoubleColon</a></li><li>| <a href=\"#v:TokenEquals\">TokenEquals</a></li><li>| <a href=\"#v:TokenBackslash\">TokenBackslash</a></li><li>| <a href=\"#v:TokenPipe\">TokenPipe</a></li><li>| <a href=\"#v:TokenLeftParen\">TokenLeftParen</a></li><li>| <a href=\"#v:TokenRightParen\">TokenRightParen</a></li><li>| <a href=\"#v:TokenLeftBrace\">TokenLeftBrace</a></li><li>| <a href=\"#v:TokenRightBrace\">TokenRightBrace</a></li><li>| <a href=\"#v:TokenLeftBracket\">TokenLeftBracket</a></li><li>| <a href=\"#v:TokenRightBracket\">TokenRightBracket</a></li><li>| <a href=\"#v:TokenLeftArrow\">TokenLeftArrow</a></li><li>| <a href=\"#v:TokenRightArrow\">TokenRightArrow</a></li><li>| <a href=\"#v:TokenDoubleRightArrow\">TokenDoubleRightArrow</a></li><li>| <a href=\"#v:TokenAt\">TokenAt</a></li><li>| <a href=\"#v:TokenBacktick\">TokenBacktick</a></li><li>| <a href=\"#v:TokenInt\">TokenInt</a> <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:TokenFloat\">TokenFloat</a> <a href=\"Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li>| <a href=\"#v:TokenChar\">TokenChar</a> <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a></li><li>| <a href=\"#v:TokenString\">TokenString</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:TokenLet\">TokenLet</a></li><li>| <a href=\"#v:TokenDef\">TokenDef</a></li><li>| <a href=\"#v:TokenIn\">TokenIn</a></li><li>| <a href=\"#v:TokenIf\">TokenIf</a></li><li>| <a href=\"#v:TokenThen\">TokenThen</a></li><li>| <a href=\"#v:TokenElse\">TokenElse</a></li><li>| <a href=\"#v:TokenCase\">TokenCase</a></li><li>| <a href=\"#v:TokenOf\">TokenOf</a></li><li>| <a href=\"#v:TokenData\">TokenData</a></li><li>| <a href=\"#v:TokenType\">TokenType</a></li><li>| <a href=\"#v:TokenAlias\">TokenAlias</a></li><li>| <a href=\"#v:TokenModule\">TokenModule</a></li><li>| <a href=\"#v:TokenImport\">TokenImport</a></li><li>| <a href=\"#v:TokenAs\">TokenAs</a></li><li>| <a href=\"#v:TokenQualified\">TokenQualified</a></li><li>| <a href=\"#v:TokenExposing\">TokenExposing</a></li><li>| <a href=\"#v:TokenWhere\">TokenWhere</a></li><li>| <a href=\"#v:TokenForall\">TokenForall</a></li><li>| <a href=\"#v:TokenClass\">TokenClass</a></li><li>| <a href=\"#v:TokenInstance\">TokenInstance</a></li><li>| <a href=\"#v:TokenDeriving\">TokenDeriving</a></li><li>| <a href=\"#v:TokenMatch\">TokenMatch</a></li><li>| <a href=\"#v:TokenWith\">TokenWith</a></li><li>| <a href=\"#v:TokenInfixL\">TokenInfixL</a></li><li>| <a href=\"#v:TokenInfixR\">TokenInfixR</a></li><li>| <a href=\"#v:TokenInfix\">TokenInfix</a></li><li>| <a href=\"#v:TokenVariableIdentifier\">TokenVariableIdentifier</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:TokenConstructorIdentifier\">TokenConstructorIdentifier</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:TokenOperatorIdentifier\">TokenOperatorIdentifier</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:TokenQVariableIdentifier\">TokenQVariableIdentifier</a> (<a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>, <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)</li><li>| <a href=\"#v:TokenQConstructorIdentifier\">TokenQConstructorIdentifier</a> (<a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>, <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)</li><li>| <a href=\"#v:TokenQOperatorIdentifier\">TokenQOperatorIdentifier</a> (<a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>, <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)</li><li>| <a href=\"#v:TokenUnderscore\">TokenUnderscore</a></li><li>| <a href=\"#v:TokenIndent\">TokenIndent</a></li><li>| <a href=\"#v:TokenDedent\">TokenDedent</a></li><li>| <a href=\"#v:TokenLineSeparator\">TokenLineSeparator</a></li><li>| <a href=\"#v:TokenEOF\">TokenEOF</a></li></ul>","name":"Token TokenAlias TokenAs TokenAt TokenBackslash TokenBacktick TokenCase TokenChar TokenClass TokenColon TokenComma TokenConstructorIdentifier TokenData TokenDedent TokenDef TokenDeriving TokenDot TokenDoubleColon TokenDoubleRightArrow TokenEOF TokenElse TokenEquals TokenExposing TokenFloat TokenForall TokenIf TokenImport TokenIn TokenIndent TokenInfix TokenInfixL TokenInfixR TokenInstance TokenInt TokenLeftArrow TokenLeftBrace TokenLeftBracket TokenLeftParen TokenLet TokenLineSeparator TokenMatch TokenModule TokenOf TokenOperatorIdentifier TokenPipe TokenQConstructorIdentifier TokenQOperatorIdentifier TokenQVariableIdentifier TokenQualified TokenRightArrow TokenRightBrace TokenRightBracket TokenRightParen TokenSemicolon TokenString TokenThen TokenType TokenUnderscore TokenVariableIdentifier TokenWhere TokenWith","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#t:Token"},{"display_html":"<a href=\"#v:tokenRepr\">tokenRepr</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"tokenRepr","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#v:tokenRepr"},{"display_html":"<a href=\"#v:unsafeTokenText\">unsafeTokenText</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"unsafeTokenText","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#v:unsafeTokenText"},{"display_html":"<a href=\"#v:unsafeTokenInt\">unsafeTokenInt</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>","name":"unsafeTokenInt","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#v:unsafeTokenInt"},{"display_html":"<a href=\"#v:unsafeTokenFloat\">unsafeTokenFloat</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Prelude.html#t:Double\" title=\"Prelude\">Double</a>","name":"unsafeTokenFloat","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#v:unsafeTokenFloat"},{"display_html":"<a href=\"#v:isIndent\">isIndent</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isIndent","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#v:isIndent"},{"display_html":"<a href=\"#v:tokenEndsExpr\">tokenEndsExpr</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"tokenEndsExpr","module":"Elara.Lexer.Token","link":"elara/Elara-Lexer-Token.html#v:tokenEndsExpr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TokenStream\">TokenStream</a> = <a href=\"#v:TokenStream\">TokenStream</a> {<ul class=\"subs\"><li><a href=\"#v:tokenStreamInput\">tokenStreamInput</a> :: !<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:tokenStreamTokens\">tokenStreamTokens</a> :: ![<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]</li><li><a href=\"#v:skipIndents\">skipIndents</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li></ul>}","name":"TokenStream TokenStream skipIndents tokenStreamInput tokenStreamTokens","module":"Elara.Parse.Stream","link":"elara/Elara-Parse-Stream.html#t:TokenStream"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:L\">L</a> :: a -&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a","name":"L","module":"Elara.Parse.Stream","link":"elara/Elara-Parse-Stream.html#v:L"},{"display_html":"<a href=\"#v:sourceRegionToSourcePos\">sourceRegionToSourcePos</a> :: <a href=\"Elara-AST-Region.html#t:HasPath\" title=\"Elara.AST.Region\">HasPath</a> a1 =&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a2 -&gt; <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a2) a1 -&gt; <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a> <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> -&gt; <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Pos.html#t:SourcePos\" title=\"Text.Megaparsec.Pos\">SourcePos</a>","name":"sourceRegionToSourcePos","module":"Elara.Parse.Stream","link":"elara/Elara-Parse-Stream.html#v:sourceRegionToSourcePos"},{"display_html":"<a href=\"#v:realPositionToSourcePos\">realPositionToSourcePos</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> -&gt; <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Pos.html#t:SourcePos\" title=\"Text.Megaparsec.Pos\">SourcePos</a>","name":"realPositionToSourcePos","module":"Elara.Parse.Stream","link":"elara/Elara-Parse-Stream.html#v:realPositionToSourcePos"},{"display_html":"<a href=\"#v:tokenLength\">tokenLength</a> :: <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"tokenLength","module":"Elara.Parse.Stream","link":"elara/Elara-Parse-Stream.html#v:tokenLength"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ElaraParseError\">ElaraParseError</a><ul class=\"subs\"><li>= <a href=\"#v:KeywordUsedAsName\">KeywordUsedAsName</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>))</li><li>| <a href=\"#v:EmptyRecord\">EmptyRecord</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a></li><li>| <a href=\"#v:EmptyLambda\">EmptyLambda</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a></li><li>| <a href=\"#v:InfixPrecTooHigh\">InfixPrecTooHigh</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>)</li></ul>","name":"ElaraParseError EmptyLambda EmptyRecord InfixPrecTooHigh KeywordUsedAsName","module":"Elara.Parse.Error","link":"elara/Elara-Parse-Error.html#t:ElaraParseError"},{"display_html":"<a href=\"#v:parseErrorSources\">parseErrorSources</a> :: <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a> -&gt; [<a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>]","name":"parseErrorSources","module":"Elara.Parse.Error","link":"elara/Elara-Parse-Error.html#v:parseErrorSources"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WParseErrorBundle\">WParseErrorBundle</a> e m = <a href=\"#v:WParseErrorBundle\">WParseErrorBundle</a> {<ul class=\"subs\"><li><a href=\"#v:unWParseErrorBundle\">unWParseErrorBundle</a> :: <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Error.html#t:ParseErrorBundle\" title=\"Text.Megaparsec.Error\">ParseErrorBundle</a> e m</li></ul>}","name":"WParseErrorBundle WParseErrorBundle unWParseErrorBundle","module":"Elara.Parse.Error","link":"elara/Elara-Parse-Error.html#t:WParseErrorBundle"},{"display_html":"<a href=\"#v:diagnosticFromBundle\">diagnosticFromBundle</a> :: <span class=\"keyword\">forall</span> msg s e. (<a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Stream.html#t:Token\" title=\"Text.Megaparsec.Stream\">Token</a> s <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>, e <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a>, <a href=\"Prelude.html#t:IsString\" title=\"Prelude\">IsString</a> msg, <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Compat-Megaparsec.html#t:HasHints\" title=\"Error.Diagnose.Compat.Megaparsec\">HasHints</a> e msg, <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Error.html#t:ShowErrorComponent\" title=\"Text.Megaparsec.Error\">ShowErrorComponent</a> e, <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Stream.html#t:VisualStream\" title=\"Text.Megaparsec.Stream\">VisualStream</a> s, <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Stream.html#t:TraversableStream\" title=\"Text.Megaparsec.Stream\">TraversableStream</a> s) =&gt; (<a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Error.html#t:ParseError\" title=\"Text.Megaparsec.Error\">ParseError</a> s e -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> msg -&gt; msg -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> [<a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Report.html#t:Note\" title=\"Error.Diagnose.Report\">Note</a> msg] -&gt; <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec-Error.html#t:ParseErrorBundle\" title=\"Text.Megaparsec.Error\">ParseErrorBundle</a> s <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a> -&gt; <a href=\"https://hackage.haskell.org/package/diagnose-2.5.1/docs/Error-Diagnose-Diagnostic.html#t:Diagnostic\" title=\"Error.Diagnose.Diagnostic\">Diagnostic</a> msg","name":"diagnosticFromBundle","module":"Elara.Parse.Error","link":"elara/Elara-Parse-Error.html#v:diagnosticFromBundle"},{"display_html":"<a href=\"#v:both\">both</a> :: (a -&gt; b) -&gt; (a, a) -&gt; (b, b)","name":"both","module":"Elara.Parse.Error","link":"elara/Elara-Parse-Error.html#v:both"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Parser\">Parser</a> = <a href=\"https://hackage.haskell.org/package/megaparsec-9.6.1/docs/Text-Megaparsec.html#t:Parsec\" title=\"Text.Megaparsec\">Parsec</a> <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a> <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a>","name":"Parser","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#t:Parser"},{"display_html":"<a href=\"#v:fmapLocated\">fmapLocated</a> :: (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a -&gt; b) -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> b","name":"fmapLocated","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:fmapLocated"},{"display_html":"<a href=\"#v:located\">located</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a)","name":"located","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:located"},{"display_html":"<a href=\"#v:optionallyInParens\">optionallyInParens</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a","name":"optionallyInParens","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:optionallyInParens"},{"display_html":"<a href=\"#v:inParens\">inParens</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a","name":"inParens","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:inParens"},{"display_html":"<a href=\"#v:inBraces\">inBraces</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a","name":"inBraces","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:inBraces"},{"display_html":"<a href=\"#v:commaSeparated\">commaSeparated</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> [a]","name":"commaSeparated","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:commaSeparated"},{"display_html":"<a href=\"#v:oneOrCommaSeparatedInParens\">oneOrCommaSeparatedInParens</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> [a]","name":"oneOrCommaSeparatedInParens","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:oneOrCommaSeparatedInParens"},{"display_html":"<a href=\"#v:token\">token</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a>","name":"token","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:token"},{"display_html":"<a href=\"#v:token_\">token_</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> ()","name":"token_","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:token_"},{"display_html":"<a href=\"#v:withPredicate\">withPredicate</a> :: (t -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) -&gt; (t -&gt; <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a>) -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> t -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> t","name":"withPredicate","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:withPredicate"},{"display_html":"<a href=\"#v:satisfyMap\">satisfyMap</a> :: (<a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a","name":"satisfyMap","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:satisfyMap"},{"display_html":"<a href=\"#v:lexeme\">lexeme</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>","name":"lexeme","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:lexeme"},{"display_html":"<a href=\"#v:locatedTokens-39-\">locatedTokens'</a> :: <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"locatedTokens'","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:locatedTokens-39-"},{"display_html":"<a href=\"#v:ignoringIndents\">ignoringIndents</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a","name":"ignoringIndents","module":"Elara.Parse.Primitives","link":"elara/Elara-Parse-Primitives.html#v:ignoringIndents"},{"display_html":"<a href=\"#v:moduleName\">moduleName</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>","name":"moduleName","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:moduleName"},{"display_html":"<a href=\"#v:varOrConName\">varOrConName</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:VarOrConName\" title=\"Elara.AST.Name\">VarOrConName</a>)","name":"varOrConName","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:varOrConName"},{"display_html":"<a href=\"#v:varName\">varName</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)","name":"varName","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:varName"},{"display_html":"<a href=\"#v:unqualifiedVarName\">unqualifiedVarName</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>","name":"unqualifiedVarName","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:unqualifiedVarName"},{"display_html":"<a href=\"#v:normalVarName\">normalVarName</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>)","name":"normalVarName","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:normalVarName"},{"display_html":"<a href=\"#v:conName\">conName</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)","name":"conName","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:conName"},{"display_html":"<a href=\"#v:opName\">opName</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)","name":"opName","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:opName"},{"display_html":"<a href=\"#v:qVarId\">qVarId</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>)","name":"qVarId","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:qVarId"},{"display_html":"<a href=\"#v:qConId\">qConId</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)","name":"qConId","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:qConId"},{"display_html":"<a href=\"#v:qOpId\">qOpId</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)","name":"qOpId","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:qOpId"},{"display_html":"<a href=\"#v:varId\">varId</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>","name":"varId","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:varId"},{"display_html":"<a href=\"#v:conId\">conId</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"conId","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:conId"},{"display_html":"<a href=\"#v:opId\">opId</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>","name":"opId","module":"Elara.Parse.Names","link":"elara/Elara-Parse-Names.html#v:opId"},{"display_html":"<a href=\"#v:charLiteral\">charLiteral</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>","name":"charLiteral","module":"Elara.Parse.Literal","link":"elara/Elara-Parse-Literal.html#v:charLiteral"},{"display_html":"<a href=\"#v:stringLiteral\">stringLiteral</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"stringLiteral","module":"Elara.Parse.Literal","link":"elara/Elara-Parse-Literal.html#v:stringLiteral"},{"display_html":"<a href=\"#v:integerLiteral\">integerLiteral</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>","name":"integerLiteral","module":"Elara.Parse.Literal","link":"elara/Elara-Parse-Literal.html#v:integerLiteral"},{"display_html":"<a href=\"#v:floatLiteral\">floatLiteral</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Prelude.html#t:Double\" title=\"Prelude\">Double</a>","name":"floatLiteral","module":"Elara.Parse.Literal","link":"elara/Elara-Parse-Literal.html#v:floatLiteral"},{"display_html":"<a href=\"#v:unitLiteral\">unitLiteral</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> ()","name":"unitLiteral","module":"Elara.Parse.Literal","link":"elara/Elara-Parse-Literal.html#v:unitLiteral"},{"display_html":"<a href=\"#v:sepBy1-39-\">sepBy1'</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> sep -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a)","name":"sepBy1'","module":"Elara.Parse.Combinators","link":"elara/Elara-Parse-Combinators.html#v:sepBy1-39-"},{"display_html":"<a href=\"#v:sepEndBy1-39-\">sepEndBy1'</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> sep -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a)","name":"sepEndBy1'","module":"Elara.Parse.Combinators","link":"elara/Elara-Parse-Combinators.html#v:sepEndBy1-39-"},{"display_html":"<a href=\"#v:liftedBinary\">liftedBinary</a> :: (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:JoinKinds\" title=\"Optics.Optic\">JoinKinds</a> k1 <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-IxLens.html#t:A_Lens\" title=\"Optics.IxLens\">A_Lens</a> k2, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m, <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k2 <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>, <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> (<a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Re.html#t:ReversedOptic\" title=\"Optics.Re\">ReversedOptic</a> k1) <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>, <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Re.html#t:ReversibleOptic\" title=\"Optics.Re\">ReversibleOptic</a> k1) =&gt; m t -&gt; (t -&gt; a1 -&gt; a1 -&gt; a2) -&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> k1 <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:NoIx\" title=\"Optics.Optic\">NoIx</a> a1 a1 (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a2) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a2) -&gt; m (a1 -&gt; a1 -&gt; a1)","name":"liftedBinary","module":"Elara.Parse.Combinators","link":"elara/Elara-Parse-Combinators.html#v:liftedBinary"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlexInput\">AlexInput</a> = <a href=\"#v:AlexInput\">AlexInput</a> {<ul class=\"subs\"><li><a href=\"#v:_filePath\">_filePath</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li><li><a href=\"#v:_prev\">_prev</a> :: <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a></li><li><a href=\"#v:_bytes\">_bytes</a> :: [<a href=\"Prelude.html#t:Word8\" title=\"Prelude\">Word8</a>]</li><li><a href=\"#v:_rest\">_rest</a> :: <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:_position\">_position</a> :: <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a></li></ul>}","name":"AlexInput AlexInput _bytes _filePath _position _prev _rest","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#t:AlexInput"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IndentInfo\">IndentInfo</a> = <a href=\"#v:IndentInfo\">IndentInfo</a> {<ul class=\"subs\"><li><a href=\"#v:_indent\">_indent</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li><a href=\"#v:_indentPos\">_indentPos</a> :: <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a></li><li><a href=\"#v:_openedAtDepth\">_openedAtDepth</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li></ul>}","name":"IndentInfo IndentInfo _indent _indentPos _openedAtDepth","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#t:IndentInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ParseState\">ParseState</a> = <a href=\"#v:ParseState\">ParseState</a> {<ul class=\"subs\"><li><a href=\"#v:_input\">_input</a> :: <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a></li><li><a href=\"#v:_lexSC\">_lexSC</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li><a href=\"#v:_stringBuf\">_stringBuf</a> :: <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:_pendingTokens\">_pendingTokens</a> :: [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]</li><li><a href=\"#v:_indentStack\">_indentStack</a> :: <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Elara-Lexer-Utils.html#t:IndentInfo\" title=\"Elara.Lexer.Utils\">IndentInfo</a></li><li><a href=\"#v:_pendingPosition\">_pendingPosition</a> :: <a href=\"Elara-Lexer-Token.html#t:TokPosition\" title=\"Elara.Lexer.Token\">TokPosition</a></li><li><a href=\"#v:_prevEndsExpr\">_prevEndsExpr</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:_delimDepth\">_delimDepth</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li></ul>}","name":"ParseState ParseState _delimDepth _indentStack _input _lexSC _pendingPosition _pendingTokens _prevEndsExpr _stringBuf","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#t:ParseState"},{"display_html":"<a href=\"#v:bytes\">bytes</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> [<a href=\"Prelude.html#t:Word8\" title=\"Prelude\">Word8</a>]","name":"bytes","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:bytes"},{"display_html":"<a href=\"#v:filePath\">filePath</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"filePath","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:filePath"},{"display_html":"<a href=\"#v:position\">position</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a>","name":"position","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:position"},{"display_html":"<a href=\"#v:prev\">prev</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>","name":"prev","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:prev"},{"display_html":"<a href=\"#v:rest\">rest</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"rest","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:rest"},{"display_html":"<a href=\"#v:indent\">indent</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:IndentInfo\" title=\"Elara.Lexer.Utils\">IndentInfo</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"indent","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:indent"},{"display_html":"<a href=\"#v:indentPos\">indentPos</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:IndentInfo\" title=\"Elara.Lexer.Utils\">IndentInfo</a> <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a>","name":"indentPos","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:indentPos"},{"display_html":"<a href=\"#v:openedAtDepth\">openedAtDepth</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:IndentInfo\" title=\"Elara.Lexer.Utils\">IndentInfo</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"openedAtDepth","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:openedAtDepth"},{"display_html":"<a href=\"#v:delimDepth\">delimDepth</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"delimDepth","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:delimDepth"},{"display_html":"<a href=\"#v:indentStack\">indentStack</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Elara-Lexer-Utils.html#t:IndentInfo\" title=\"Elara.Lexer.Utils\">IndentInfo</a>)","name":"indentStack","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:indentStack"},{"display_html":"<a href=\"#v:input\">input</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a> <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a>","name":"input","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:input"},{"display_html":"<a href=\"#v:lexSC\">lexSC</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"lexSC","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:lexSC"},{"display_html":"<a href=\"#v:pendingPosition\">pendingPosition</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a> <a href=\"Elara-Lexer-Token.html#t:TokPosition\" title=\"Elara.Lexer.Token\">TokPosition</a>","name":"pendingPosition","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:pendingPosition"},{"display_html":"<a href=\"#v:pendingTokens\">pendingTokens</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a> [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]","name":"pendingTokens","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:pendingTokens"},{"display_html":"<a href=\"#v:prevEndsExpr\">prevEndsExpr</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a> <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"prevEndsExpr","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:prevEndsExpr"},{"display_html":"<a href=\"#v:stringBuf\">stringBuf</a> :: <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"stringBuf","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:stringBuf"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LexMonad\">LexMonad</a> a = <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Lexer-Utils.html#t:LexerError\" title=\"Elara.Lexer.Utils\">LexerError</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a>] a","name":"LexMonad","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#t:LexMonad"},{"display_html":"<a href=\"#v:setPrevEndsExpr\">setPrevEndsExpr</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> ()","name":"setPrevEndsExpr","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:setPrevEndsExpr"},{"display_html":"<a href=\"#v:getPrevEndsExpr\">getPrevEndsExpr</a> :: <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"getPrevEndsExpr","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:getPrevEndsExpr"},{"display_html":"<a href=\"#v:mkIndentInfo\">mkIndentInfo</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> <a href=\"Elara-Lexer-Utils.html#t:IndentInfo\" title=\"Elara.Lexer.Utils\">IndentInfo</a>","name":"mkIndentInfo","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:mkIndentInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LexerError\">LexerError</a><ul class=\"subs\"><li>= <a href=\"#v:TooMuchIndentation\">TooMuchIndentation</a> <a href=\"Elara-Lexer-Utils.html#t:IndentInfo\" title=\"Elara.Lexer.Utils\">IndentInfo</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Utils.html#t:IndentInfo\" title=\"Elara.Lexer.Utils\">IndentInfo</a>) <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a></li><li>| <a href=\"#v:UnterminatedStringLiteral\">UnterminatedStringLiteral</a> <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a></li></ul>","name":"LexerError TooMuchIndentation UnterminatedStringLiteral","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#t:LexerError"},{"display_html":"<a href=\"#v:initialState\">initialState</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:ParseState\" title=\"Elara.Lexer.Utils\">ParseState</a>","name":"initialState","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:initialState"},{"display_html":"<a href=\"#v:pushFront\">pushFront</a> :: <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> ()","name":"pushFront","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:pushFront"},{"display_html":"<a href=\"#v:pushBack\">pushBack</a> :: <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> ()","name":"pushBack","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:pushBack"},{"display_html":"<a href=\"#v:emitAt\">emitAt</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"emitAt","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:emitAt"},{"display_html":"<a href=\"#v:popPending\">popPending</a> :: <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"popPending","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:popPending"},{"display_html":"<a href=\"#v:emitCloser\">emitCloser</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"emitCloser","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:emitCloser"},{"display_html":"<a href=\"#v:flushLayoutBeforeCloser\">flushLayoutBeforeCloser</a> :: <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> ()","name":"flushLayoutBeforeCloser","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:flushLayoutBeforeCloser"},{"display_html":"<a href=\"#v:emitLayoutAt\">emitLayoutAt</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"emitLayoutAt","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:emitLayoutAt"},{"display_html":"<a href=\"#v:emitIndentAt\">emitIndentAt</a> :: <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"emitIndentAt","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:emitIndentAt"},{"display_html":"<a href=\"#v:emitDedentAt\">emitDedentAt</a> :: <a href=\"Elara-Lexer-Token.html#t:TokPosition\" title=\"Elara.Lexer.Token\">TokPosition</a> -&gt; <a href=\"Elara-Lexer-Token.html#t:TokPosition\" title=\"Elara.Lexer.Token\">TokPosition</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"emitDedentAt","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:emitDedentAt"},{"display_html":"<a href=\"#v:emitLineSepAt\">emitLineSepAt</a> :: <a href=\"Elara-AST-Region.html#t:RealPosition\" title=\"Elara.AST.Region\">RealPosition</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"emitLineSepAt","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:emitLineSepAt"},{"display_html":"<a href=\"#v:fake\">fake</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"fake","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:fake"},{"display_html":"<a href=\"#v:startWhite\">startWhite</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"startWhite","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:startWhite"},{"display_html":"<a href=\"#v:cleanIndentation\">cleanIndentation</a> :: <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]","name":"cleanIndentation","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:cleanIndentation"},{"display_html":"<a href=\"#v:alexGetByte\">alexGetByte</a> :: <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Prelude.html#t:Word8\" title=\"Prelude\">Word8</a>, <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a>)","name":"alexGetByte","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:alexGetByte"},{"display_html":"<a href=\"#v:getLineNo\">getLineNo</a> :: <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"getLineNo","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:getLineNo"},{"display_html":"<a href=\"#v:getColNo\">getColNo</a> :: <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"getColNo","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:getColNo"},{"display_html":"<a href=\"#v:getPosition\">getPosition</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> <a href=\"Elara-Lexer-Token.html#t:TokPosition\" title=\"Elara.Lexer.Token\">TokPosition</a>","name":"getPosition","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:getPosition"},{"display_html":"<a href=\"#v:createRegion\">createRegion</a> :: <a href=\"Elara-Lexer-Token.html#t:TokPosition\" title=\"Elara.Lexer.Token\">TokPosition</a> -&gt; <a href=\"Elara-Lexer-Token.html#t:TokPosition\" title=\"Elara.Lexer.Token\">TokPosition</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a>","name":"createRegion","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:createRegion"},{"display_html":"<a href=\"#v:createRegionStartingAt\">createRegionStartingAt</a> :: <a href=\"Elara-Lexer-Token.html#t:TokPosition\" title=\"Elara.Lexer.Token\">TokPosition</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> <a href=\"Elara-AST-Region.html#t:RealSourceRegion\" title=\"Elara.AST.Region\">RealSourceRegion</a>","name":"createRegionStartingAt","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:createRegionStartingAt"},{"display_html":"<a href=\"#v:splitQualName\">splitQualName</a> :: <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; (<a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>, <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)","name":"splitQualName","module":"Elara.Lexer.Utils","link":"elara/Elara-Lexer-Utils.html#v:splitQualName"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:NumberOfCharsMatched\">NumberOfCharsMatched</a> = <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"NumberOfCharsMatched","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#t:NumberOfCharsMatched"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MatchedSequence\">MatchedSequence</a> = <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"MatchedSequence","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#t:MatchedSequence"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LexAction\">LexAction</a> = <a href=\"Elara-Lexer-Action.html#t:NumberOfCharsMatched\" title=\"Elara.Lexer.Action\">NumberOfCharsMatched</a> -&gt; <a href=\"Elara-Lexer-Action.html#t:MatchedSequence\" title=\"Elara.Lexer.Action\">MatchedSequence</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"LexAction","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#t:LexAction"},{"display_html":"<a href=\"#v:simpleTok\">simpleTok</a> :: <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a> -&gt; <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"simpleTok","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#v:simpleTok"},{"display_html":"<a href=\"#v:parametrizedTok\">parametrizedTok</a> :: (a -&gt; <a href=\"Elara-Lexer-Token.html#t:Token\" title=\"Elara.Lexer.Token\">Token</a>) -&gt; (<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; a) -&gt; <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"parametrizedTok","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#v:parametrizedTok"},{"display_html":"<a href=\"#v:beginString\">beginString</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"beginString","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#v:beginString"},{"display_html":"<a href=\"#v:appendToString\">appendToString</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"appendToString","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#v:appendToString"},{"display_html":"<a href=\"#v:appendToStringWith\">appendToStringWith</a> :: (<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>) -&gt; <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"appendToStringWith","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#v:appendToStringWith"},{"display_html":"<a href=\"#v:endString\">endString</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"endString","module":"Elara.Lexer.Action","link":"elara/Elara-Lexer-Action.html#v:endString"},{"display_html":"<a href=\"#v:alex_tab_size\">alex_tab_size</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"alex_tab_size","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_tab_size"},{"display_html":"<a href=\"#v:alex_base\">alex_base</a> :: <a href=\"Elara-Lexer-Lexer.html#t:AlexAddr\" title=\"Elara.Lexer.Lexer\">AlexAddr</a>","name":"alex_base","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_base"},{"display_html":"<a href=\"#v:alex_table\">alex_table</a> :: <a href=\"Elara-Lexer-Lexer.html#t:AlexAddr\" title=\"Elara.Lexer.Lexer\">AlexAddr</a>","name":"alex_table","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_table"},{"display_html":"<a href=\"#v:alex_check\">alex_check</a> :: <a href=\"Elara-Lexer-Lexer.html#t:AlexAddr\" title=\"Elara.Lexer.Lexer\">AlexAddr</a>","name":"alex_check","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_check"},{"display_html":"<a href=\"#v:alex_deflt\">alex_deflt</a> :: <a href=\"Elara-Lexer-Lexer.html#t:AlexAddr\" title=\"Elara.Lexer.Lexer\">AlexAddr</a>","name":"alex_deflt","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_deflt"},{"display_html":"<a href=\"#v:alex_accept\">alex_accept</a> :: <span class=\"keyword\">forall</span> {k} {user :: k}. <a href=\"https://hackage.haskell.org/package/array-0.5.8.0/docs/Data-Array.html#t:Array\" title=\"Data.Array\">Array</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> (<a href=\"Elara-Lexer-Lexer.html#t:AlexAcc\" title=\"Elara.Lexer.Lexer\">AlexAcc</a> user)","name":"alex_accept","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_accept"},{"display_html":"<a href=\"#v:alex_actions\">alex_actions</a> :: <a href=\"https://hackage.haskell.org/package/array-0.5.8.0/docs/Data-Array.html#t:Array\" title=\"Data.Array\">Array</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_actions","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_actions"},{"display_html":"<a href=\"#v:stringSC\">stringSC</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"stringSC","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:stringSC"},{"display_html":"<a href=\"#v:alex_action_0\">alex_action_0</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_0","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_0"},{"display_html":"<a href=\"#v:alex_action_1\">alex_action_1</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_1","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_1"},{"display_html":"<a href=\"#v:alex_action_2\">alex_action_2</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_2","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_2"},{"display_html":"<a href=\"#v:alex_action_3\">alex_action_3</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_3","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_3"},{"display_html":"<a href=\"#v:alex_action_4\">alex_action_4</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_4","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_4"},{"display_html":"<a href=\"#v:alex_action_6\">alex_action_6</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>)","name":"alex_action_6","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_6"},{"display_html":"<a href=\"#v:alex_action_8\">alex_action_8</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_8","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_8"},{"display_html":"<a href=\"#v:alex_action_9\">alex_action_9</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_9","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_9"},{"display_html":"<a href=\"#v:alex_action_10\">alex_action_10</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_10","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_10"},{"display_html":"<a href=\"#v:alex_action_11\">alex_action_11</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_11","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_11"},{"display_html":"<a href=\"#v:alex_action_12\">alex_action_12</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_12","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_12"},{"display_html":"<a href=\"#v:alex_action_13\">alex_action_13</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_13","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_13"},{"display_html":"<a href=\"#v:alex_action_14\">alex_action_14</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_14","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_14"},{"display_html":"<a href=\"#v:alex_action_15\">alex_action_15</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_15","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_15"},{"display_html":"<a href=\"#v:alex_action_16\">alex_action_16</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_16","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_16"},{"display_html":"<a href=\"#v:alex_action_17\">alex_action_17</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_17","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_17"},{"display_html":"<a href=\"#v:alex_action_18\">alex_action_18</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_18","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_18"},{"display_html":"<a href=\"#v:alex_action_19\">alex_action_19</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_19","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_19"},{"display_html":"<a href=\"#v:alex_action_20\">alex_action_20</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_20","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_20"},{"display_html":"<a href=\"#v:alex_action_21\">alex_action_21</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_21","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_21"},{"display_html":"<a href=\"#v:alex_action_22\">alex_action_22</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_22","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_22"},{"display_html":"<a href=\"#v:alex_action_23\">alex_action_23</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_23","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_23"},{"display_html":"<a href=\"#v:alex_action_24\">alex_action_24</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_24","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_24"},{"display_html":"<a href=\"#v:alex_action_25\">alex_action_25</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_25","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_25"},{"display_html":"<a href=\"#v:alex_action_26\">alex_action_26</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_26","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_26"},{"display_html":"<a href=\"#v:alex_action_27\">alex_action_27</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_27","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_27"},{"display_html":"<a href=\"#v:alex_action_28\">alex_action_28</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_28","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_28"},{"display_html":"<a href=\"#v:alex_action_29\">alex_action_29</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_29","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_29"},{"display_html":"<a href=\"#v:alex_action_30\">alex_action_30</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_30","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_30"},{"display_html":"<a href=\"#v:alex_action_31\">alex_action_31</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_31","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_31"},{"display_html":"<a href=\"#v:alex_action_32\">alex_action_32</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_32","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_32"},{"display_html":"<a href=\"#v:alex_action_33\">alex_action_33</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_33","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_33"},{"display_html":"<a href=\"#v:alex_action_34\">alex_action_34</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_34","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_34"},{"display_html":"<a href=\"#v:alex_action_35\">alex_action_35</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_35","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_35"},{"display_html":"<a href=\"#v:alex_action_36\">alex_action_36</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_36","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_36"},{"display_html":"<a href=\"#v:alex_action_37\">alex_action_37</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_37","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_37"},{"display_html":"<a href=\"#v:alex_action_38\">alex_action_38</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_38","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_38"},{"display_html":"<a href=\"#v:alex_action_39\">alex_action_39</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_39","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_39"},{"display_html":"<a href=\"#v:alex_action_40\">alex_action_40</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_40","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_40"},{"display_html":"<a href=\"#v:alex_action_41\">alex_action_41</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_41","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_41"},{"display_html":"<a href=\"#v:alex_action_42\">alex_action_42</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_42","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_42"},{"display_html":"<a href=\"#v:alex_action_43\">alex_action_43</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_43","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_43"},{"display_html":"<a href=\"#v:alex_action_44\">alex_action_44</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_44","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_44"},{"display_html":"<a href=\"#v:alex_action_45\">alex_action_45</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_45","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_45"},{"display_html":"<a href=\"#v:alex_action_46\">alex_action_46</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_46","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_46"},{"display_html":"<a href=\"#v:alex_action_47\">alex_action_47</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_47","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_47"},{"display_html":"<a href=\"#v:alex_action_48\">alex_action_48</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_48","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_48"},{"display_html":"<a href=\"#v:alex_action_49\">alex_action_49</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_49","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_49"},{"display_html":"<a href=\"#v:alex_action_50\">alex_action_50</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_50","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_50"},{"display_html":"<a href=\"#v:alex_action_51\">alex_action_51</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_51","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_51"},{"display_html":"<a href=\"#v:alex_action_52\">alex_action_52</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_52","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_52"},{"display_html":"<a href=\"#v:alex_action_53\">alex_action_53</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_53","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_53"},{"display_html":"<a href=\"#v:alex_action_54\">alex_action_54</a> :: <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alex_action_54","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_action_54"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlexAddr\">AlexAddr</a> = <a href=\"#v:AlexA-35-\">AlexA#</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Addr-35-\" title=\"GHC.Exts\">Addr#</a>","name":"AlexAddr AlexA#","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#t:AlexAddr"},{"display_html":"<a href=\"#v:alexIndexInt16OffAddr\">alexIndexInt16OffAddr</a> :: <a href=\"Elara-Lexer-Lexer.html#t:AlexAddr\" title=\"Elara.Lexer.Lexer\">AlexAddr</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Int-35-\" title=\"GHC.Exts\">Int#</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Int-35-\" title=\"GHC.Exts\">Int#</a>","name":"alexIndexInt16OffAddr","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alexIndexInt16OffAddr"},{"display_html":"<a href=\"#v:alexIndexInt32OffAddr\">alexIndexInt32OffAddr</a> :: <a href=\"Elara-Lexer-Lexer.html#t:AlexAddr\" title=\"Elara.Lexer.Lexer\">AlexAddr</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Int-35-\" title=\"GHC.Exts\">Int#</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Int-35-\" title=\"GHC.Exts\">Int#</a>","name":"alexIndexInt32OffAddr","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alexIndexInt32OffAddr"},{"display_html":"<a href=\"#v:quickIndex\">quickIndex</a> :: <a href=\"https://hackage.haskell.org/package/array-0.5.8.0/docs/Data-Array.html#t:Array\" title=\"Data.Array\">Array</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> (<a href=\"Elara-Lexer-Lexer.html#t:AlexAcc\" title=\"Elara.Lexer.Lexer\">AlexAcc</a> (ZonkAny 1 :: ZonkAny 0 :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)) -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Lexer-Lexer.html#t:AlexAcc\" title=\"Elara.Lexer.Lexer\">AlexAcc</a> (ZonkAny 1 :: ZonkAny 0 :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"quickIndex","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:quickIndex"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlexReturn\">AlexReturn</a> a<ul class=\"subs\"><li>= <a href=\"#v:AlexEOF\">AlexEOF</a></li><li>| <a href=\"#v:AlexError\">AlexError</a> !<a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a></li><li>| <a href=\"#v:AlexSkip\">AlexSkip</a> !<a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li>| <a href=\"#v:AlexToken\">AlexToken</a> !<a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> a</li></ul>","name":"AlexReturn AlexEOF AlexError AlexSkip AlexToken","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#t:AlexReturn"},{"display_html":"<a href=\"#v:alexScan\">alexScan</a> :: <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Lexer-Lexer.html#t:AlexReturn\" title=\"Elara.Lexer.Lexer\">AlexReturn</a> <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alexScan","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alexScan"},{"display_html":"<a href=\"#v:alexScanUser\">alexScanUser</a> :: t -&gt; <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Lexer-Lexer.html#t:AlexReturn\" title=\"Elara.Lexer.Lexer\">AlexReturn</a> <a href=\"Elara-Lexer-Action.html#t:LexAction\" title=\"Elara.Lexer.Action\">LexAction</a>","name":"alexScanUser","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alexScanUser"},{"display_html":"<a href=\"#v:alex_scan_tkn\">alex_scan_tkn</a> :: t1 -&gt; t2 -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Int-35-\" title=\"GHC.Exts\">Int#</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Int-35-\" title=\"GHC.Exts\">Int#</a> -&gt; <a href=\"Elara-Lexer-Lexer.html#t:AlexLastAcc\" title=\"Elara.Lexer.Lexer\">AlexLastAcc</a> -&gt; (<a href=\"Elara-Lexer-Lexer.html#t:AlexLastAcc\" title=\"Elara.Lexer.Lexer\">AlexLastAcc</a>, <a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a>)","name":"alex_scan_tkn","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#v:alex_scan_tkn"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlexLastAcc\">AlexLastAcc</a><ul class=\"subs\"><li>= <a href=\"#v:AlexNone\">AlexNone</a></li><li>| <a href=\"#v:AlexLastAcc\">AlexLastAcc</a> !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> !<a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li>| <a href=\"#v:AlexLastSkip\">AlexLastSkip</a> !<a href=\"Elara-Lexer-Utils.html#t:AlexInput\" title=\"Elara.Lexer.Utils\">AlexInput</a> !<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li></ul>","name":"AlexLastAcc AlexLastAcc AlexLastSkip AlexNone","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#t:AlexLastAcc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlexAcc\">AlexAcc</a> (user :: k)<ul class=\"subs\"><li>= <a href=\"#v:AlexAccNone\">AlexAccNone</a></li><li>| <a href=\"#v:AlexAcc\">AlexAcc</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li>| <a href=\"#v:AlexAccSkip\">AlexAccSkip</a></li></ul>","name":"AlexAcc AlexAcc AlexAccNone AlexAccSkip","module":"Elara.Lexer.Lexer","link":"elara/Elara-Lexer-Lexer.html#t:AlexAcc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ElaraKind\">ElaraKind</a><ul class=\"subs\"><li>= <a href=\"#v:TypeKind\">TypeKind</a></li><li>| <a href=\"#v:FunctionKind\">FunctionKind</a> <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li><li>| <a href=\"#v:VarKind\">VarKind</a> <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a></li><li>| <a href=\"#v:KindScheme\">KindScheme</a> [<a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>] <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li></ul>","name":"ElaraKind FunctionKind KindScheme TypeKind VarKind","module":"Elara.Data.Kind","link":"elara/Elara-Data-Kind.html#t:ElaraKind"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:KindVar\">KindVar</a> = <a href=\"Elara-Data-Unique.html#t:UniqueId\" title=\"Elara.Data.Unique\">UniqueId</a>","name":"KindVar","module":"Elara.Data.Kind","link":"elara/Elara-Data-Kind.html#t:KindVar"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypeVar\">TypeVar</a> = <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>","name":"TypeVar","module":"Elara.Data.Kind","link":"elara/Elara-Data-Kind.html#t:TypeVar"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:VarRefKind\">VarRefKind</a><ul class=\"subs\"><li>= <a href=\"#t:LocatedVarRefKind\">LocatedVarRefKind</a></li><li>| <a href=\"#t:UnlocatedVarRefKind\">UnlocatedVarRefKind</a></li><li>| <a href=\"#t:IgnoreLocVarRefKind\">IgnoreLocVarRefKind</a></li></ul>","name":"VarRefKind IgnoreLocVarRefKind LocatedVarRefKind UnlocatedVarRefKind","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#t:VarRefKind"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:VarRefImpl\">VarRefImpl</a> (c :: <a href=\"Elara-AST-VarRef.html#t:VarRefKind\" title=\"Elara.AST.VarRef\">VarRefKind</a>) a <span class=\"keyword\">where ...</span>","name":"VarRefImpl","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#t:VarRefImpl"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:MapVarRefImpl\">MapVarRefImpl</a> (c :: <a href=\"Elara-AST-VarRef.html#t:VarRefKind\" title=\"Elara.AST.VarRef\">VarRefKind</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mapVarRefImpl\">mapVarRefImpl</a> :: (a -&gt; b) -&gt; <a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c a -&gt; <a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c b</li></ul>","name":"MapVarRefImpl mapVarRefImpl","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#t:MapVarRefImpl"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:VarRef-39-\">VarRef'</a> (c :: <a href=\"Elara-AST-VarRef.html#t:VarRefKind\" title=\"Elara.AST.VarRef\">VarRefKind</a>) n<ul class=\"subs\"><li>= <a href=\"#v:Global\">Global</a> (<a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> n))</li><li>| <a href=\"#v:Local\">Local</a> (<a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> n))</li></ul>","name":"VarRef' Global Local","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#t:VarRef-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:VarRef\">VarRef</a> n = <a href=\"Elara-AST-VarRef.html#t:VarRef-39-\" title=\"Elara.AST.VarRef\">VarRef'</a> '<a href=\"Elara-AST-VarRef.html#t:LocatedVarRefKind\" title=\"Elara.AST.VarRef\">LocatedVarRefKind</a> n","name":"VarRef","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#t:VarRef"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IgnoreLocVarRef\">IgnoreLocVarRef</a> n = <a href=\"Elara-AST-VarRef.html#t:VarRef-39-\" title=\"Elara.AST.VarRef\">VarRef'</a> '<a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRefKind\" title=\"Elara.AST.VarRef\">IgnoreLocVarRefKind</a> n","name":"IgnoreLocVarRef","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#t:IgnoreLocVarRef"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UnlocatedVarRef\">UnlocatedVarRef</a> n = <a href=\"Elara-AST-VarRef.html#t:VarRef-39-\" title=\"Elara.AST.VarRef\">VarRef'</a> '<a href=\"Elara-AST-VarRef.html#t:UnlocatedVarRefKind\" title=\"Elara.AST.VarRef\">UnlocatedVarRefKind</a> n","name":"UnlocatedVarRef","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#t:UnlocatedVarRef"},{"display_html":"<a href=\"#v:varRefVal\">varRefVal</a> :: <span class=\"keyword\">forall</span> (c :: <a href=\"Elara-AST-VarRef.html#t:VarRefKind\" title=\"Elara.AST.VarRef\">VarRefKind</a>) n. <a href=\"Elara-AST-VarRef.html#t:MapVarRefImpl\" title=\"Elara.AST.VarRef\">MapVarRefImpl</a> c =&gt; <a href=\"Elara-AST-VarRef.html#t:VarRef-39-\" title=\"Elara.AST.VarRef\">VarRef'</a> c n -&gt; <a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c n","name":"varRefVal","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#v:varRefVal"},{"display_html":"<a href=\"#v:varRefVal-39-\">varRefVal'</a> :: <a href=\"Prelude.html#t:Traversal\" title=\"Prelude\">Traversal</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> n) (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> n') n n'","name":"varRefVal'","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#v:varRefVal-39-"},{"display_html":"<a href=\"#v:ignoreLocation\">ignoreLocation</a> :: <a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> n -&gt; <a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRef\" title=\"Elara.AST.VarRef\">IgnoreLocVarRef</a> n","name":"ignoreLocation","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#v:ignoreLocation"},{"display_html":"<a href=\"#v:withName\">withName</a> :: <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> n =&gt; <a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> n -&gt; <a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>","name":"withName","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#v:withName"},{"display_html":"<a href=\"#v:withName-39-\">withName'</a> :: <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> n =&gt; <a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> n -&gt; <a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRef\" title=\"Elara.AST.VarRef\">IgnoreLocVarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>","name":"withName'","module":"Elara.AST.VarRef","link":"elara/Elara-AST-VarRef.html#v:withName-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypeVariable\">TypeVariable</a> = <a href=\"#v:TypeVariable\">TypeVariable</a> {<ul class=\"subs\"><li><a href=\"#v:tvName\">tvName</a> :: <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a></li><li><a href=\"#v:tvKind\">tvKind</a> :: <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li></ul>}","name":"TypeVariable TypeVariable tvKind tvName","module":"Elara.Core","link":"elara/Elara-Core.html#t:TypeVariable"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Var\">Var</a><ul class=\"subs\"><li>= <a href=\"#v:TyVar\">TyVar</a> <a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a></li><li>| <a href=\"#v:Id\">Id</a> (<a href=\"Elara-AST-VarRef.html#t:UnlocatedVarRef\" title=\"Elara.AST.VarRef\">UnlocatedVarRef</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>)</li></ul>","name":"Var Id TyVar","module":"Elara.Core","link":"elara/Elara-Core.html#t:Var"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Expr\">Expr</a> b<ul class=\"subs\"><li>= <a href=\"#v:Var\">Var</a> b</li><li>| <a href=\"#v:Lit\">Lit</a> <a href=\"Elara-Core.html#t:Literal\" title=\"Elara.Core\">Literal</a></li><li>| <a href=\"#v:App\">App</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> b) (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> b)</li><li>| <a href=\"#v:TyApp\">TyApp</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> b) <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li>| <a href=\"#v:Lam\">Lam</a> b (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> b)</li><li>| <a href=\"#v:TyLam\">TyLam</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> b)</li><li>| <a href=\"#v:Let\">Let</a> (<a href=\"Elara-Core.html#t:Bind\" title=\"Elara.Core\">Bind</a> b) (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> b)</li><li>| <a href=\"#v:Match\">Match</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> b) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b) [<a href=\"Elara-Core.html#t:Alt\" title=\"Elara.Core\">Alt</a> b]</li></ul>","name":"Expr App Lam Let Lit Match TyApp TyLam Var","module":"Elara.Core","link":"elara/Elara-Core.html#t:Expr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CoreExpr\">CoreExpr</a> = <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"CoreExpr","module":"Elara.Core","link":"elara/Elara-Core.html#t:CoreExpr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CoreAlt\">CoreAlt</a> = <a href=\"Elara-Core.html#t:Alt\" title=\"Elara.Core\">Alt</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"CoreAlt","module":"Elara.Core","link":"elara/Elara-Core.html#t:CoreAlt"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CoreBind\">CoreBind</a> = <a href=\"Elara-Core.html#t:Bind\" title=\"Elara.Core\">Bind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"CoreBind","module":"Elara.Core","link":"elara/Elara-Core.html#t:CoreBind"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Bind\">Bind</a> b = <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a>","name":"Bind","module":"Elara.Core","link":"elara/Elara-Core.html#t:Bind"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Alt\">Alt</a> b = (<a href=\"Elara-Core.html#t:AltCon\" title=\"Elara.Core\">AltCon</a>, [b], <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> b)","name":"Alt","module":"Elara.Core","link":"elara/Elara-Core.html#t:Alt"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AltCon\">AltCon</a><ul class=\"subs\"><li>= <a href=\"#v:DataAlt\">DataAlt</a> <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a></li><li>| <a href=\"#v:LitAlt\">LitAlt</a> <a href=\"Elara-Core.html#t:Literal\" title=\"Elara.Core\">Literal</a></li><li>| <a href=\"#v:DEFAULT\">DEFAULT</a></li></ul>","name":"AltCon DEFAULT DataAlt LitAlt","module":"Elara.Core","link":"elara/Elara-Core.html#t:AltCon"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DataCon\">DataCon</a> = <a href=\"#v:DataCon\">DataCon</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:dataConType\">dataConType</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li><a href=\"#v:dataConDataType\">dataConDataType</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a></li></ul>}","name":"DataCon DataCon dataConDataType dataConType name","module":"Elara.Core","link":"elara/Elara-Core.html#t:DataCon"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Type\">Type</a><ul class=\"subs\"><li>= <a href=\"#v:TyVarTy\">TyVarTy</a> <a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a></li><li>| <a href=\"#v:FuncTy\">FuncTy</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li>| <a href=\"#v:AppTy\">AppTy</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li>| <a href=\"#v:ConTy\">ConTy</a> <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a></li><li>| <a href=\"#v:ForAllTy\">ForAllTy</a> !<a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a> !<a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li></ul>","name":"Type AppTy ConTy ForAllTy FuncTy TyVarTy","module":"Elara.Core","link":"elara/Elara-Core.html#t:Type"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TyCon\">TyCon</a> = <a href=\"#v:TyCon\">TyCon</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Core.html#t:TyConDetails\" title=\"Elara.Core\">TyConDetails</a>","name":"TyCon TyCon","module":"Elara.Core","link":"elara/Elara-Core.html#t:TyCon"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TyConDetails\">TyConDetails</a><ul class=\"subs\"><li>= <a href=\"#v:TyADT\">TyADT</a> [<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>]</li><li>| <a href=\"#v:TyAlias\">TyAlias</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li>| <a href=\"#v:Prim\">Prim</a></li></ul>","name":"TyConDetails Prim TyADT TyAlias","module":"Elara.Core","link":"elara/Elara-Core.html#t:TyConDetails"},{"display_html":"<a href=\"#v:typeArity\">typeArity</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"typeArity","module":"Elara.Core","link":"elara/Elara-Core.html#v:typeArity"},{"display_html":"<a href=\"#v:functionTypeArgs\">functionTypeArgs</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; [<a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>]","name":"functionTypeArgs","module":"Elara.Core","link":"elara/Elara-Core.html#v:functionTypeArgs"},{"display_html":"<a href=\"#v:conTyArgs\">conTyArgs</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; [<a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>]","name":"conTyArgs","module":"Elara.Core","link":"elara/Elara-Core.html#v:conTyArgs"},{"display_html":"<a href=\"#v:functionTypeResult\">functionTypeResult</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"functionTypeResult","module":"Elara.Core","link":"elara/Elara-Core.html#v:functionTypeResult"},{"display_html":"<a href=\"#v:instantiate\">instantiate</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"instantiate","module":"Elara.Core","link":"elara/Elara-Core.html#v:instantiate"},{"display_html":"<a href=\"#v:substTypeVar\">substTypeVar</a> :: <a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"substTypeVar","module":"Elara.Core","link":"elara/Elara-Core.html#v:substTypeVar"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Literal\">Literal</a><ul class=\"subs\"><li>= <a href=\"#v:Int\">Int</a> !<a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:String\">String</a> !<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:Char\">Char</a> !<a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a></li><li>| <a href=\"#v:Double\">Double</a> !<a href=\"Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li>| <a href=\"#v:Unit\">Unit</a></li></ul>","name":"Literal Char Double Int String Unit","module":"Elara.Core","link":"elara/Elara-Core.html#t:Literal"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AExpr\">AExpr</a> b<ul class=\"subs\"><li>= <a href=\"#v:Var\">Var</a> b</li><li>| <a href=\"#v:Lit\">Lit</a> <a href=\"Elara-Core.html#t:Literal\" title=\"Elara.Core\">Literal</a></li><li>| <a href=\"#v:Lam\">Lam</a> b (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> b)</li><li>| <a href=\"#v:TyApp\">TyApp</a> (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> b) <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li>| <a href=\"#v:TyLam\">TyLam</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> b)</li></ul>","name":"AExpr Lam Lit TyApp TyLam Var","module":"Elara.Core.ANF","link":"elara/Elara-Core-ANF.html#t:AExpr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CExpr\">CExpr</a> b<ul class=\"subs\"><li>= <a href=\"#v:App\">App</a> (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> b) (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> b)</li><li>| <a href=\"#v:AExpr\">AExpr</a> (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> b)</li><li>| <a href=\"#v:Match\">Match</a> (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> b) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> b) [<a href=\"Elara-Core-ANF.html#t:Alt\" title=\"Elara.Core.ANF\">Alt</a> b]</li></ul>","name":"CExpr AExpr App Match","module":"Elara.Core.ANF","link":"elara/Elara-Core-ANF.html#t:CExpr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Expr\">Expr</a> b<ul class=\"subs\"><li>= <a href=\"#v:Let\">Let</a> (<a href=\"Elara-Core-ANF.html#t:Bind\" title=\"Elara.Core.ANF\">Bind</a> b) (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> b)</li><li>| <a href=\"#v:CExpr\">CExpr</a> (<a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> b)</li></ul>","name":"Expr CExpr Let","module":"Elara.Core.ANF","link":"elara/Elara-Core-ANF.html#t:Expr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Bind\">Bind</a> b = <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b <a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a>","name":"Bind","module":"Elara.Core.ANF","link":"elara/Elara-Core-ANF.html#t:Bind"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TopLevelBind\">TopLevelBind</a> b = <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> b <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a>","name":"TopLevelBind","module":"Elara.Core.ANF","link":"elara/Elara-Core-ANF.html#t:TopLevelBind"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Alt\">Alt</a> b = (<a href=\"Elara-Core.html#t:AltCon\" title=\"Elara.Core\">AltCon</a>, [b], <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> b)","name":"Alt","module":"Elara.Core.ANF","link":"elara/Elara-Core-ANF.html#t:Alt"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToMaybe\">ToMaybe</a> i o <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toMaybe\">toMaybe</a> :: i -&gt; o</li></ul>","name":"ToMaybe toMaybe","module":"Elara.AST.Generic.Utils","link":"elara/Elara-AST-Generic-Utils.html#t:ToMaybe"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToList\">ToList</a> i o <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fieldToList\">fieldToList</a> :: i -&gt; o</li></ul>","name":"ToList fieldToList","module":"Elara.AST.Generic.Utils","link":"elara/Elara-AST-Generic-Utils.html#t:ToList"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ApplyAsFunctorish\">ApplyAsFunctorish</a> i o a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:applyAsFunctorish\">applyAsFunctorish</a> :: (a -&gt; b) -&gt; i -&gt; o</li></ul>","name":"ApplyAsFunctorish applyAsFunctorish","module":"Elara.AST.Generic.Utils","link":"elara/Elara-AST-Generic-Utils.html#t:ApplyAsFunctorish"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:DataConAs\">DataConAs</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:dataConAs\">dataConAs</a> :: a -&gt; b</li><li><a href=\"#v:asDataCon\">asDataCon</a> :: b -&gt; a</li></ul>","name":"DataConAs asDataCon dataConAs","module":"Elara.AST.Generic.Utils","link":"elara/Elara-AST-Generic-Utils.html#t:DataConAs"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:UnwrapMaybe\">UnwrapMaybe</a> a = (k :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where ...</span>","name":"UnwrapMaybe","module":"Elara.AST.Generic.Utils","link":"elara/Elara-AST-Generic-Utils.html#t:UnwrapMaybe"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:UnwrapList\">UnwrapList</a> a = (k :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where ...</span>","name":"UnwrapList","module":"Elara.AST.Generic.Utils","link":"elara/Elara-AST-Generic-Utils.html#t:UnwrapList"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:Select\">Select</a> (s :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) (ast :: a) = (v :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"Select","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Select"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Expr-39-\">Expr'</a> (ast :: a)<ul class=\"subs\"><li>= <a href=\"#v:Int\">Int</a> <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:Float\">Float</a> <a href=\"Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li>| <a href=\"#v:String\">String</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:Char\">Char</a> <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a></li><li>| <a href=\"#v:Unit\">Unit</a></li><li>| <a href=\"#v:Var\">Var</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarRef&quot; ast))</li><li>| <a href=\"#v:Constructor\">Constructor</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConRef&quot; ast))</li><li>| <a href=\"#v:Lambda\">Lambda</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast)) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)</li><li>| <a href=\"#v:FunctionCall\">FunctionCall</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)</li><li>| <a href=\"#v:TypeApplication\">TypeApplication</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeApplication&quot; ast)</li><li>| <a href=\"#v:If\">If</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)</li><li>| <a href=\"#v:BinaryOperator\">BinaryOperator</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;BinaryOperator&quot; ast)</li><li>| <a href=\"#v:List\">List</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;List&quot; ast)</li><li>| <a href=\"#v:Match\">Match</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast) [(<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)]</li><li>| <a href=\"#v:LetIn\">LetIn</a> { <ul class=\"subs\"><li><a href=\"#v:letInParam\">letInParam</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetParamName&quot; ast)</li><li><a href=\"#v:letInPattern\">letInPattern</a> :: <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetPattern&quot; ast</li><li><a href=\"#v:letInValue\">letInValue</a> :: <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast</li><li><a href=\"#v:letInBody\">letInBody</a> :: <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast</li></ul> }</li><li>| <a href=\"#v:Let\">Let</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetParamName&quot; ast)) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetPattern&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)</li><li>| <a href=\"#v:Block\">Block</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast))</li><li>| <a href=\"#v:Tuple\">Tuple</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Tuple&quot; ast)</li><li>| <a href=\"#v:InParens\">InParens</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InParens&quot; ast)</li></ul>","name":"Expr' BinaryOperator Block Char Constructor Float FunctionCall If InParens Int Lambda Let LetIn List Match String Tuple TypeApplication Unit Var letInBody letInParam letInPattern letInValue","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Expr-39-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Expr\">Expr</a> (ast :: a) = <a href=\"#v:Expr\">Expr</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast), <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast)","name":"Expr Expr","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Expr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Pattern-39-\">Pattern'</a> (ast :: a)<ul class=\"subs\"><li>= <a href=\"#v:VarPattern\">VarPattern</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarPat&quot; ast))</li><li>| <a href=\"#v:ConstructorPattern\">ConstructorPattern</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConPat&quot; ast)) [<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast]</li><li>| <a href=\"#v:ListPattern\">ListPattern</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ListPattern&quot; ast)</li><li>| <a href=\"#v:TuplePattern\">TuplePattern</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TuplePattern&quot; ast)</li><li>| <a href=\"#v:ConsPattern\">ConsPattern</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConsPattern&quot; ast)</li><li>| <a href=\"#v:WildcardPattern\">WildcardPattern</a></li><li>| <a href=\"#v:IntegerPattern\">IntegerPattern</a> <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:FloatPattern\">FloatPattern</a> <a href=\"Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li>| <a href=\"#v:StringPattern\">StringPattern</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:CharPattern\">CharPattern</a> <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a></li><li>| <a href=\"#v:UnitPattern\">UnitPattern</a></li></ul>","name":"Pattern' CharPattern ConsPattern ConstructorPattern FloatPattern IntegerPattern ListPattern StringPattern TuplePattern UnitPattern VarPattern WildcardPattern","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Pattern-39-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Pattern\">Pattern</a> (ast :: a) = <a href=\"#v:Pattern\">Pattern</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> ast), <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast)","name":"Pattern Pattern","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Pattern"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:TypedLambdaParam\">TypedLambdaParam</a> v (ast :: a) = <a href=\"#v:TypedLambdaParam\">TypedLambdaParam</a> (v, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast)","name":"TypedLambdaParam TypedLambdaParam","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:TypedLambdaParam"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Type\">Type</a> (ast :: a) = <a href=\"#v:Type\">Type</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast), <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast)","name":"Type Type","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Type"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Type-39-\">Type'</a> (ast :: a)<ul class=\"subs\"><li>= <a href=\"#v:TypeVar\">TypeVar</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast))</li><li>| <a href=\"#v:FunctionType\">FunctionType</a> (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast)</li><li>| <a href=\"#v:UnitType\">UnitType</a></li><li>| <a href=\"#v:TypeConstructorApplication\">TypeConstructorApplication</a> (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast)</li><li>| <a href=\"#v:UserDefinedType\">UserDefinedType</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast))</li><li>| <a href=\"#v:RecordType\">RecordType</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>, <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast))</li><li>| <a href=\"#v:TupleType\">TupleType</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast))</li><li>| <a href=\"#v:ListType\">ListType</a> (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast)</li></ul>","name":"Type' FunctionType ListType RecordType TupleType TypeConstructorApplication TypeVar UnitType UserDefinedType","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Type-39-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:BinaryOperator\">BinaryOperator</a> (ast :: a) = <a href=\"#v:MkBinaryOperator\">MkBinaryOperator</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> ast))","name":"BinaryOperator MkBinaryOperator","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:BinaryOperator"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BinaryOperator-39-\">BinaryOperator'</a> (ast :: a)<ul class=\"subs\"><li>= <a href=\"#v:SymOp\">SymOp</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;SymOp&quot; ast))</li><li>| <a href=\"#v:Infixed\">Infixed</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Infixed&quot; ast)</li></ul>","name":"BinaryOperator' Infixed SymOp","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:BinaryOperator-39-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:DeclarationBody\">DeclarationBody</a> (ast :: a) = <a href=\"#v:DeclarationBody\">DeclarationBody</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody-39-\" title=\"Elara.AST.Generic.Types\">DeclarationBody'</a> ast))","name":"DeclarationBody DeclarationBody","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:DeclarationBody"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DeclarationBody-39-\">DeclarationBody'</a> (ast :: a)<ul class=\"subs\"><li>= <a href=\"#v:Value\">Value</a> { <ul class=\"subs\"><li><a href=\"#v:_valueName\">_valueName</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast)</li><li><a href=\"#v:_expression\">_expression</a> :: <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast</li><li><a href=\"#v:_patterns\">_patterns</a> :: <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValuePatterns&quot; ast</li><li><a href=\"#v:_valueType\">_valueType</a> :: <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueType&quot; ast</li><li><a href=\"#v:_valueAnnotations\">_valueAnnotations</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> ast</li></ul> }</li><li>| <a href=\"#v:ValueTypeDef\">ValueTypeDef</a> { <ul class=\"subs\"><li><a href=\"#v:_valueName\">_valueName</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast)</li><li><a href=\"#v:_valueTypeDef\">_valueTypeDef</a> :: !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueTypeDef&quot; ast)</li></ul> }</li><li>| <a href=\"#v:TypeDeclaration\">TypeDeclaration</a> { <ul class=\"subs\"><li><a href=\"#v:_typeDeclarationName\">_typeDeclarationName</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast)</li><li><a href=\"#v:typeVars\">typeVars</a> :: [<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast)]</li><li><a href=\"#v:typeDeclarationBody\">typeDeclarationBody</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> ast)</li><li><a href=\"#v:typeAnnotations\">typeAnnotations</a> :: <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclAnnotations\" title=\"Elara.AST.Generic.Types\">TypeDeclAnnotations</a> ast</li></ul> }</li><li>| <a href=\"#v:InfixDecl\">InfixDecl</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InfixDecl&quot; ast)</li></ul>","name":"DeclarationBody' InfixDecl TypeDeclaration Value ValueTypeDef _expression _patterns _typeDeclarationName _valueAnnotations _valueName _valueType _valueTypeDef typeAnnotations typeDeclarationBody typeVars","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:DeclarationBody-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypeDeclaration\">TypeDeclaration</a> (ast :: a)<ul class=\"subs\"><li>= <a href=\"#v:ADT\">ADT</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConstructorName&quot; ast), [<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ADTParam&quot; ast]))</li><li>| <a href=\"#v:Alias\">Alias</a> !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Alias&quot; ast)</li></ul>","name":"TypeDeclaration ADT Alias","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:TypeDeclaration"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Declaration\">Declaration</a> (ast :: a) = <a href=\"#v:Declaration\">Declaration</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Declaration-39-\" title=\"Elara.AST.Generic.Types\">Declaration'</a> ast))","name":"Declaration Declaration","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Declaration"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Declaration-39-\">Declaration'</a> (ast :: a) = <a href=\"#v:Declaration-39-\">Declaration'</a> {<ul class=\"subs\"><li><a href=\"#v:moduleName\">moduleName</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li><li><a href=\"#v:body\">body</a> :: <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody\" title=\"Elara.AST.Generic.Types\">DeclarationBody</a> ast</li></ul>}","name":"Declaration' Declaration' body moduleName","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Declaration-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AssociativityType\">AssociativityType</a><ul class=\"subs\"><li>= <a href=\"#v:LeftAssoc\">LeftAssoc</a></li><li>| <a href=\"#v:RightAssoc\">RightAssoc</a></li><li>| <a href=\"#v:NonAssoc\">NonAssoc</a></li></ul>","name":"AssociativityType LeftAssoc NonAssoc RightAssoc","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:AssociativityType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InfixDeclaration\">InfixDeclaration</a> (ast :: a) = <a href=\"#v:InfixDeclaration\">InfixDeclaration</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)</li><li><a href=\"#v:prec\">prec</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a></li><li><a href=\"#v:assoc\">assoc</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast <a href=\"Elara-AST-Generic-Types.html#t:AssociativityType\" title=\"Elara.AST.Generic.Types\">AssociativityType</a></li></ul>}","name":"InfixDeclaration InfixDeclaration assoc name prec","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:InfixDeclaration"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ValueDeclAnnotations\">ValueDeclAnnotations</a> (ast :: a) = <a href=\"#v:ValueDeclAnnotations\">ValueDeclAnnotations</a> {<ul class=\"subs\"><li><a href=\"#v:infixValueDecl\">infixValueDecl</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast)</li></ul>}","name":"ValueDeclAnnotations ValueDeclAnnotations infixValueDecl","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:ValueDeclAnnotations"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypeDeclAnnotations\">TypeDeclAnnotations</a> (ast :: a) = <a href=\"#v:TypeDeclAnnotations\">TypeDeclAnnotations</a> {<ul class=\"subs\"><li><a href=\"#v:infixTypeDecl\">infixTypeDecl</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast)</li><li><a href=\"#v:kindAnn\">kindAnn</a> :: !(<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;KindAnnotation&quot; ast)</li></ul>}","name":"TypeDeclAnnotations TypeDeclAnnotations infixTypeDecl kindAnn","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:TypeDeclAnnotations"},{"display_html":"<a href=\"#v:typeOf\">typeOf</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast","name":"typeOf","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:typeOf"},{"display_html":"<a href=\"#v:freeTypeVars\">freeTypeVars</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) {ast2 :: a2} {b}. (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast2)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> b, <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> b, <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2), <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> b, <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Internal-Generic.html#t:GPlateImpl\" title=\"Optics.Internal.Generic\">GPlateImpl</a> (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:K1\" title=\"GHC.Generics\">K1</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:R\" title=\"GHC.Generics\">R</a> b :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2), <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Internal-Generic.html#t:GPlateImpl\" title=\"Optics.Internal.Generic\">GPlateImpl</a> (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:K1\" title=\"GHC.Generics\">K1</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:R\" title=\"GHC.Generics\">R</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast2) :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2), <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Internal-Generic.html#t:GPlateImpl\" title=\"Optics.Internal.Generic\">GPlateImpl</a> (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:K1\" title=\"GHC.Generics\">K1</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:R\" title=\"GHC.Generics\">R</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast2))) :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2), <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Internal-Generic.html#t:GPlateImpl\" title=\"Optics.Internal.Generic\">GPlateImpl</a> (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:K1\" title=\"GHC.Generics\">K1</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:R\" title=\"GHC.Generics\">R</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2))) :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2), <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Internal-Generic.html#t:GPlateImpl\" title=\"Optics.Internal.Generic\">GPlateImpl</a> (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:K1\" title=\"GHC.Generics\">K1</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:R\" title=\"GHC.Generics\">R</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>)) :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast1 -&gt; [<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast1))]","name":"freeTypeVars","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:freeTypeVars"},{"display_html":"<a href=\"#v:patternTypeOf\">patternTypeOf</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast","name":"patternTypeOf","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:patternTypeOf"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:RUnlocate\">RUnlocate</a> (ast1 :: ast) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:rUnlocate\">rUnlocate</a> :: <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a =&gt; <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 a -&gt; a</li><li><a href=\"#v:rUnlocated\">rUnlocated</a> :: <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a =&gt; <a href=\"Prelude.html#t:Getter\" title=\"Prelude\">Getter</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 a) a</li><li><a href=\"#v:fmapUnlocated\">fmapUnlocated</a> :: (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a, <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> b) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> b) =&gt; (a -&gt; b) -&gt; <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 a -&gt; <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 b</li><li><a href=\"#v:traverseUnlocated\">traverseUnlocated</a> :: (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a, <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> b) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> b) =&gt; <a href=\"Prelude.html#t:Traversal\" title=\"Prelude\">Traversal</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 a) (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 b) a b</li></ul>","name":"RUnlocate fmapUnlocated rUnlocate rUnlocated traverseUnlocated $dmrUnlocate","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:RUnlocate"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ASTLocate\">ASTLocate</a> (ast :: a) a1 = <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast a1)","name":"ASTLocate","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:ASTLocate"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ASTLocate-39-\">ASTLocate'</a> (ast :: a) :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>","name":"ASTLocate'","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:ASTLocate-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FullASTQual\">FullASTQual</a> (ast :: a) a1 = <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast a1)","name":"FullASTQual","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:FullASTQual"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ASTQual\">ASTQual</a> (ast :: a) :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>","name":"ASTQual","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:ASTQual"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:CleanupLocated\">CleanupLocated</a> g <span class=\"keyword\">where ...</span>","name":"CleanupLocated","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:CleanupLocated"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Unlocated\">Unlocated</a> a = <a href=\"#v:Unlocated\">Unlocated</a> a","name":"Unlocated Unlocated","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#t:Unlocated"},{"display_html":"<a href=\"#v:coerceType\">coerceType</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) (ast2 :: a2) {f :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>}. (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast2, <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> f (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast2)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast2)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> f (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast1), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>), <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast2","name":"coerceType","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:coerceType"},{"display_html":"<a href=\"#v:coerceType-39-\">coerceType'</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) (ast2 :: a2) {f :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>}. (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast2, <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> f (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast2)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast2)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> f (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast1), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>), <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast2","name":"coerceType'","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:coerceType-39-"},{"display_html":"<a href=\"#v:coerceTypeDeclaration\">coerceTypeDeclaration</a> :: <span class=\"keyword\">forall</span> {a1} {a2} {a3} {a4} {a5} {a6} (ast4 :: a1) (ast5 :: a2) {ast6 :: a3} {ast7 :: a4} {ast8 :: a5} {ast9 :: a6} {f1 :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>} {f2 :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>}. (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast6 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast7, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Alias&quot; ast4 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast6, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ADTParam&quot; ast4 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast8, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast8 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast9, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Alias&quot; ast5 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast7, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ADTParam&quot; ast5 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast9, <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast8 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast8)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast9 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast9)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast8 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast8)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast9 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast9)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast8 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast8)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> f1 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast8), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast8 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast9 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast9 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast9)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> f1 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast9), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast7 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast7)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> f2 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast7), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast6 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast6)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast7 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast7)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast6 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast6)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast7 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast7)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast6 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast6)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> f2 (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast6), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast6 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast7 <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast4 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConstructorName&quot; ast4)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast5 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConstructorName&quot; ast5)), <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f2, <a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f1) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> ast4 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> ast5","name":"coerceTypeDeclaration","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:coerceTypeDeclaration"},{"display_html":"<a href=\"#v:coerceInfixDeclaration\">coerceInfixDeclaration</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) (ast2 :: a2). (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast2)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Elara-AST-Generic-Types.html#t:AssociativityType\" title=\"Elara.AST.Generic.Types\">AssociativityType</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Elara-AST-Generic-Types.html#t:AssociativityType\" title=\"Elara.AST.Generic.Types\">AssociativityType</a>)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast2","name":"coerceInfixDeclaration","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:coerceInfixDeclaration"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Expr-39-\">Expr'</a> :: <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast","name":"Expr'","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:Expr-39-"},{"display_html":"<a href=\"#v:exprLocation\">exprLocation</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> =&gt; <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast) <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"exprLocation","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:exprLocation"},{"display_html":"<a href=\"#v:patternLocation\">patternLocation</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> =&gt; <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast) <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"patternLocation","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:patternLocation"},{"display_html":"<a href=\"#v:coerceTypeDeclAnnotations\">coerceTypeDeclAnnotations</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) (ast2 :: a2). (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast2)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Elara-AST-Generic-Types.html#t:AssociativityType\" title=\"Elara.AST.Generic.Types\">AssociativityType</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Elara-AST-Generic-Types.html#t:AssociativityType\" title=\"Elara.AST.Generic.Types\">AssociativityType</a>), <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;KindAnnotation&quot; ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;KindAnnotation&quot; ast2) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclAnnotations\" title=\"Elara.AST.Generic.Types\">TypeDeclAnnotations</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclAnnotations\" title=\"Elara.AST.Generic.Types\">TypeDeclAnnotations</a> ast2","name":"coerceTypeDeclAnnotations","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:coerceTypeDeclAnnotations"},{"display_html":"<a href=\"#v:coerceValueDeclAnnotations\">coerceValueDeclAnnotations</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) (ast2 :: a2). (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast2)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Elara-AST-Generic-Types.html#t:AssociativityType\" title=\"Elara.AST.Generic.Types\">AssociativityType</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Elara-AST-Generic-Types.html#t:AssociativityType\" title=\"Elara.AST.Generic.Types\">AssociativityType</a>)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> ast2","name":"coerceValueDeclAnnotations","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:coerceValueDeclAnnotations"},{"display_html":"<a href=\"#v:declarationBody-39-Name\">declarationBody'Name</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast, <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InfixDecl&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)) =&gt; <a href=\"Prelude.html#t:Getter\" title=\"Prelude\">Getter</a> (<a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody-39-\" title=\"Elara.AST.Generic.Types\">DeclarationBody'</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>))","name":"declarationBody'Name","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:declarationBody-39-Name"},{"display_html":"<a href=\"#v:declarationBodyName\">declarationBodyName</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast, <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InfixDecl&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)) =&gt; <a href=\"Prelude.html#t:Getter\" title=\"Prelude\">Getter</a> (<a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody\" title=\"Elara.AST.Generic.Types\">DeclarationBody</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>))","name":"declarationBodyName","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:declarationBodyName"},{"display_html":"<a href=\"#v:declaration-39-Name\">declaration'Name</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast, <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InfixDecl&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)) =&gt; <a href=\"Prelude.html#t:Getter\" title=\"Prelude\">Getter</a> (<a href=\"Elara-AST-Generic-Types.html#t:Declaration-39-\" title=\"Elara.AST.Generic.Types\">Declaration'</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>))","name":"declaration'Name","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:declaration-39-Name"},{"display_html":"<a href=\"#v:declarationName\">declarationName</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast), <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast, <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InfixDecl&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeName&quot; ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ValueName&quot; ast), <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;AnyName&quot; ast)) =&gt; <a href=\"Prelude.html#t:Getter\" title=\"Prelude\">Getter</a> (<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> ast) (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>))","name":"declarationName","module":"Elara.AST.Generic.Types","link":"elara/Elara-AST-Generic-Types.html#v:declarationName"},{"display_html":"<a href=\"#v:none\">none</a> :: [()]","name":"none","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:none"},{"display_html":"<a href=\"#v:nothing\">nothing</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> ()","name":"nothing","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:nothing"},{"display_html":"<a href=\"#v:prettyStringExpr\">prettyStringExpr</a> :: <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyStringExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyStringExpr"},{"display_html":"<a href=\"#v:prettyCharExpr\">prettyCharExpr</a> :: <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyCharExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyCharExpr"},{"display_html":"<a href=\"#v:prettyLambdaExpr\">prettyLambdaExpr</a> :: (?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> b) =&gt; [a] -&gt; b -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyLambdaExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyLambdaExpr"},{"display_html":"<a href=\"#v:prettyFunctionCall\">prettyFunctionCall</a> :: (?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> b) =&gt; a -&gt; b -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyFunctionCall","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyFunctionCall"},{"display_html":"<a href=\"#v:prettyFunctionCallExpr\">prettyFunctionCallExpr</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). (?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyFunctionCallExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyFunctionCallExpr"},{"display_html":"<a href=\"#v:prettyIfExpr\">prettyIfExpr</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> b, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> c) =&gt; a -&gt; b -&gt; c -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyIfExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyIfExpr"},{"display_html":"<a href=\"#v:prettyBinaryOperatorExpr\">prettyBinaryOperatorExpr</a> :: <span class=\"keyword\">forall</span> {a} b (ast :: a). (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> b, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast), <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; b -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyBinaryOperatorExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyBinaryOperatorExpr"},{"display_html":"<a href=\"#v:prettyTupleExpr\">prettyTupleExpr</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTupleExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyTupleExpr"},{"display_html":"<a href=\"#v:prettyMatchExpr\">prettyMatchExpr</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2, <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, ?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) =&gt; a1 -&gt; t a2 -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyMatchExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyMatchExpr"},{"display_html":"<a href=\"#v:prettyMatchBranch\">prettyMatchBranch</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2) =&gt; (a1, a2) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyMatchBranch","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyMatchBranch"},{"display_html":"<a href=\"#v:prettyLetInExpr\">prettyLetInExpr</a> :: <span class=\"keyword\">forall</span> {a} a1 a2 (ast :: a). (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2, ?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)) =&gt; a1 -&gt; [a2] -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyLetInExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyLetInExpr"},{"display_html":"<a href=\"#v:shouldBrace\">shouldBrace</a> :: <span class=\"keyword\">forall</span> astK (ast :: astK). <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"shouldBrace","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:shouldBrace"},{"display_html":"<a href=\"#v:shouldParen\">shouldParen</a> :: <span class=\"keyword\">forall</span> astK (ast :: astK). <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"shouldParen","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:shouldParen"},{"display_html":"<a href=\"#v:prettyLetExpr\">prettyLetExpr</a> :: <span class=\"keyword\">forall</span> {a} a1 a2 (ast :: a). (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2, <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast, ?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)) =&gt; a1 -&gt; [a2] -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyLetExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyLetExpr"},{"display_html":"<a href=\"#v:prettyBlockExpr\">prettyBlockExpr</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, ?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) =&gt; t a -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyBlockExpr","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyBlockExpr"},{"display_html":"<a href=\"#v:encloseSep-39-\">encloseSep'</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a> -&gt; [<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"encloseSep'","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:encloseSep-39-"},{"display_html":"<a href=\"#v:prettyConstructorPattern\">prettyConstructorPattern</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2) =&gt; a1 -&gt; [a2] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyConstructorPattern","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyConstructorPattern"},{"display_html":"<a href=\"#v:prettyList\">prettyList</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, ?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>) =&gt; [a] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyList","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyList"},{"display_html":"<a href=\"#v:prettyConsPattern\">prettyConsPattern</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2) =&gt; a1 -&gt; a2 -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyConsPattern","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyConsPattern"},{"display_html":"<a href=\"#v:prettyValueDeclaration\">prettyValueDeclaration</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a) a1 a2 a3. (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a3, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast)) =&gt; a1 -&gt; a2 -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a3 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyValueDeclaration","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyValueDeclaration"},{"display_html":"<a href=\"#v:prettyValueDeclAnnotations\">prettyValueDeclAnnotations</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> ast) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyValueDeclAnnotations","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyValueDeclAnnotations"},{"display_html":"<a href=\"#v:prettyValueTypeDef\">prettyValueTypeDef</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2) =&gt; a1 -&gt; a2 -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyValueTypeDef","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyValueTypeDef"},{"display_html":"<a href=\"#v:prettyTypeDeclaration\">prettyTypeDeclaration</a> :: <span class=\"keyword\">forall</span> {a} a1 a2 a3 (ast :: a). (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a1, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a2, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a3) =&gt; a1 -&gt; [a2] -&gt; a3 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclAnnotations\" title=\"Elara.AST.Generic.Types\">TypeDeclAnnotations</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTypeDeclaration","module":"Elara.AST.Pretty","link":"elara/Elara-AST-Pretty.html#v:prettyTypeDeclaration"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnknownPretty\">UnknownPretty</a> = <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt;  <a href=\"#v:UnknownPretty\">UnknownPretty</a> a","name":"UnknownPretty UnknownPretty","module":"Elara.AST.Generic.Instances.Pretty","link":"elara/Elara-AST-Generic-Instances-Pretty.html#t:UnknownPretty"},{"display_html":"<a href=\"#v:prettyExpr\">prettyExpr</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a) exprType letPatterns lambdaPatterns. (exprType <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Utils.html#t:UnwrapMaybe\" title=\"Elara.AST.Generic.Utils\">UnwrapMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast), letPatterns <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Utils.html#t:UnwrapList\" title=\"Elara.AST.Generic.Utils\">UnwrapList</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetPattern&quot; ast), lambdaPatterns <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Utils.html#t:UnwrapList\" title=\"Elara.AST.Generic.Utils\">UnwrapList</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast), (?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, ?withType :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Tuple&quot; ast) (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;BinaryOperator&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> ast, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InParens&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> letPatterns, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> exprType, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> lambdaPatterns, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeApplication&quot; ast), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarRef&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetParamName&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConRef&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Utils.html#t:UnwrapMaybe\" title=\"Elara.AST.Generic.Utils\">UnwrapMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast)), <a href=\"Elara-AST-Generic-Utils.html#t:ToMaybe\" title=\"Elara.AST.Generic.Utils\">ToMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Utils.html#t:UnwrapMaybe\" title=\"Elara.AST.Generic.Utils\">UnwrapMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast))), <a href=\"Elara-AST-Generic-Utils.html#t:ToMaybe\" title=\"Elara.AST.Generic.Utils\">ToMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> exprType), <a href=\"Elara-AST-Generic-Utils.html#t:ToList\" title=\"Elara.AST.Generic.Utils\">ToList</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;List&quot; ast) [<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast], <a href=\"Elara-AST-Generic-Utils.html#t:ToList\" title=\"Elara.AST.Generic.Utils\">ToList</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetPattern&quot; ast) [letPatterns], <a href=\"Elara-AST-Generic-Utils.html#t:ToList\" title=\"Elara.AST.Generic.Utils\">ToList</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast))) [lambdaPatterns], <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast))) (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast), <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyExpr","module":"Elara.AST.Generic.Instances.Pretty","link":"elara/Elara-AST-Generic-Instances-Pretty.html#v:prettyExpr"},{"display_html":"<a href=\"#v:prettyExpr-39-\">prettyExpr'</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a) {exprType} letPatterns lambdaPatterns. (lambdaPatterns <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Utils.html#t:UnwrapList\" title=\"Elara.AST.Generic.Utils\">UnwrapList</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast), letPatterns <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Utils.html#t:UnwrapList\" title=\"Elara.AST.Generic.Utils\">UnwrapList</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetPattern&quot; ast), ?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, ?withType :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, <a href=\"Elara-AST-Generic-Utils.html#t:UnwrapMaybe\" title=\"Elara.AST.Generic.Utils\">UnwrapMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> exprType, <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Tuple&quot; ast) (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast)), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;BinaryOperator&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> ast, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InParens&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> letPatterns, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> exprType, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> lambdaPatterns, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeApplication&quot; ast), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarRef&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetParamName&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConRef&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Utils.html#t:UnwrapMaybe\" title=\"Elara.AST.Generic.Utils\">UnwrapMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast)), <a href=\"Elara-AST-Generic-Utils.html#t:ToMaybe\" title=\"Elara.AST.Generic.Utils\">ToMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Utils.html#t:UnwrapMaybe\" title=\"Elara.AST.Generic.Utils\">UnwrapMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast))), <a href=\"Elara-AST-Generic-Utils.html#t:ToMaybe\" title=\"Elara.AST.Generic.Utils\">ToMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> exprType), <a href=\"Elara-AST-Generic-Utils.html#t:ToList\" title=\"Elara.AST.Generic.Utils\">ToList</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;List&quot; ast) [<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast], <a href=\"Elara-AST-Generic-Utils.html#t:ToList\" title=\"Elara.AST.Generic.Utils\">ToList</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetPattern&quot; ast) [letPatterns], <a href=\"Elara-AST-Generic-Utils.html#t:ToList\" title=\"Elara.AST.Generic.Utils\">ToList</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast))) [lambdaPatterns], <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast))) (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast), <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyExpr'","module":"Elara.AST.Generic.Instances.Pretty","link":"elara/Elara-AST-Generic-Instances-Pretty.html#v:prettyExpr-39-"},{"display_html":"<a href=\"#v:prettyPattern\">prettyPattern</a> :: <span class=\"keyword\">forall</span> {a} (ast :: a). (?contextFree :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>, <a href=\"Elara-AST-Generic-Utils.html#t:ToMaybe\" title=\"Elara.AST.Generic.Utils\">ToMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Utils.html#t:UnwrapMaybe\" title=\"Elara.AST.Generic.Utils\">UnwrapMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Utils.html#t:UnwrapMaybe\" title=\"Elara.AST.Generic.Utils\">UnwrapMaybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast)), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarPat&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConPat&quot; ast))), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> ast))), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ListPattern&quot; ast) [<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast], <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TuplePattern&quot; ast) (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast)), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConsPattern&quot; ast) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast, <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> ast -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyPattern","module":"Elara.AST.Generic.Instances.Pretty","link":"elara/Elara-AST-Generic-Instances-Pretty.html#v:prettyPattern"},{"display_html":"<a href=\"#v:stripExprLocation\">stripExprLocation</a> :: <span class=\"keyword\">forall</span> (ast1 :: <a href=\"Elara-AST-Select.html#t:LocatedAST\" title=\"Elara.AST.Select\">LocatedAST</a>) (ast2 :: <a href=\"Elara-AST-Select.html#t:UnlocatedAST\" title=\"Elara.AST.Select\">UnlocatedAST</a>). (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a>, <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Unlocated\" title=\"Elara.AST.Generic.Types\">Unlocated</a>, <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeApplication&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeApplication&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetPattern&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetPattern&quot; ast2), <a href=\"Elara-AST-Generic-Utils.html#t:ApplyAsFunctorish\" title=\"Elara.AST.Generic.Utils\">ApplyAsFunctorish</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast2), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;BinaryOperator&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> ast1, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1), <a href=\"Elara-AST-Generic-Utils.html#t:ApplyAsFunctorish\" title=\"Elara.AST.Generic.Utils\">ApplyAsFunctorish</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ListPattern&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ListPattern&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast2), <a href=\"Elara-AST-Generic-Utils.html#t:ApplyAsFunctorish\" title=\"Elara.AST.Generic.Utils\">ApplyAsFunctorish</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConsPattern&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConsPattern&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast2), <a href=\"Elara-AST-Generic-Utils.html#t:ApplyAsFunctorish\" title=\"Elara.AST.Generic.Utils\">ApplyAsFunctorish</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast2), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;List&quot; ast1) [<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1], <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Tuple&quot; ast1) (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1)), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InParens&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;List&quot; ast2) [<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2], <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Tuple&quot; ast2) (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2)), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;BinaryOperator&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> ast2, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2, <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2), <a href=\"Elara-AST-Generic-Utils.html#t:DataConAs\" title=\"Elara.AST.Generic.Utils\">DataConAs</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InParens&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Infixed&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Infixed&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarPat&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarPat&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConPat&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConPat&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarRef&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarRef&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;SymOp&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;SymOp&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetParamName&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetParamName&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConRef&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConRef&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast1)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2","name":"stripExprLocation","module":"Elara.AST.Generic.Instances.StripLocation","link":"elara/Elara-AST-Generic-Instances-StripLocation.html#v:stripExprLocation"},{"display_html":"<a href=\"#v:stripPatternLocation\">stripPatternLocation</a> :: <span class=\"keyword\">forall</span> (ast1 :: <a href=\"Elara-AST-Select.html#t:LocatedAST\" title=\"Elara.AST.Select\">LocatedAST</a>) (ast2 :: <a href=\"Elara-AST-Select.html#t:UnlocatedAST\" title=\"Elara.AST.Select\">UnlocatedAST</a>). (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a>, <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Unlocated\" title=\"Elara.AST.Generic.Types\">Unlocated</a>, <a href=\"Elara-AST-Generic-Utils.html#t:ApplyAsFunctorish\" title=\"Elara.AST.Generic.Utils\">ApplyAsFunctorish</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ListPattern&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ListPattern&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast2), <a href=\"Elara-AST-Generic-Utils.html#t:ApplyAsFunctorish\" title=\"Elara.AST.Generic.Utils\">ApplyAsFunctorish</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConsPattern&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConsPattern&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast2), <a href=\"Elara-AST-Generic-Utils.html#t:ApplyAsFunctorish\" title=\"Elara.AST.Generic.Utils\">ApplyAsFunctorish</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;PatternType&quot; ast2) (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarPat&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarPat&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConPat&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConPat&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast2)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> ast2","name":"stripPatternLocation","module":"Elara.AST.Generic.Instances.StripLocation","link":"elara/Elara-AST-Generic-Instances-StripLocation.html#v:stripPatternLocation"},{"display_html":"<a href=\"#v:stripBinaryOperatorLocation\">stripBinaryOperatorLocation</a> :: <span class=\"keyword\">forall</span> (ast1 :: <a href=\"Elara-AST-Select.html#t:LocatedAST\" title=\"Elara.AST.Select\">LocatedAST</a>) (ast2 :: <a href=\"Elara-AST-Select.html#t:UnlocatedAST\" title=\"Elara.AST.Select\">UnlocatedAST</a>). (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a>, <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Unlocated\" title=\"Elara.AST.Generic.Types\">Unlocated</a>, <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> ast2)) (<a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Infixed&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;Infixed&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;SymOp&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;SymOp&quot; ast2)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> ast2","name":"stripBinaryOperatorLocation","module":"Elara.AST.Generic.Instances.StripLocation","link":"elara/Elara-AST-Generic-Instances-StripLocation.html#v:stripBinaryOperatorLocation"},{"display_html":"<a href=\"#v:stripTypeLocation\">stripTypeLocation</a> :: <span class=\"keyword\">forall</span> (ast1 :: <a href=\"Elara-AST-Select.html#t:LocatedAST\" title=\"Elara.AST.Select\">LocatedAST</a>) (ast2 :: <a href=\"Elara-AST-Select.html#t:UnlocatedAST\" title=\"Elara.AST.Select\">UnlocatedAST</a>). (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a>, <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Unlocated\" title=\"Elara.AST.Generic.Types\">Unlocated</a>, <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast1))) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;UserDefinedType&quot; ast2), <a href=\"Elara-AST-StripLocation.html#t:StripLocation\" title=\"Elara.AST.StripLocation\">StripLocation</a> (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast1) (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast2)) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast1 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast2","name":"stripTypeLocation","module":"Elara.AST.Generic.Instances.StripLocation","link":"elara/Elara-AST-Generic-Instances-StripLocation.html#v:stripTypeLocation"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ForAllExpr\">ForAllExpr</a> (c :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (ast1 :: ast) = (c (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1), c (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarRef&quot; ast1)), c (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LambdaPattern&quot; ast1)), c (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ConRef&quot; ast1)), c (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;LetParamName&quot; ast1)), c (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;InParens&quot; ast1))","name":"ForAllExpr","module":"Elara.AST.Generic.Instances.Simple","link":"elara/Elara-AST-Generic-Instances-Simple.html#t:ForAllExpr"},{"display_html":"module <a href=\"Elara-AST-Generic-Instances-DataPlated.html\">Elara.AST.Generic.Instances.DataPlated</a>","name":"","module":"Elara.AST.Generic.Instances","link":"elara"},{"display_html":"module <a href=\"Elara-AST-Generic-Types.html\">Elara.AST.Generic.Types</a>","name":"","module":"Elara.AST.Generic","link":"elara"},{"display_html":"module <a href=\"Elara-AST-Generic-Instances.html\">Elara.AST.Generic.Instances</a>","name":"","module":"Elara.AST.Generic","link":"elara"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:Replace\">Replace</a> (needle :: <a href=\"Elara-AST-Select.html#t:LocatedAST\" title=\"Elara.AST.Select\">LocatedAST</a>) (replacement :: <a href=\"Elara-AST-Select.html#t:UnlocatedAST\" title=\"Elara.AST.Select\">UnlocatedAST</a>) haystack <span class=\"keyword\">where ...</span>","name":"Replace","module":"Elara.AST.Unlocated","link":"elara/Elara-AST-Unlocated.html#t:Replace"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedExpr\">TypedExpr</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedExpr","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedExpr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedExpr-39-\">TypedExpr'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedExpr'","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedExpr-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedPattern\">TypedPattern</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedPattern","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedPattern"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedPattern-39-\">TypedPattern'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedPattern'","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedPattern-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedBinaryOperator\">TypedBinaryOperator</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedBinaryOperator","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedBinaryOperator"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedBinaryOperator-39-\">TypedBinaryOperator'</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedBinaryOperator'","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedBinaryOperator-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedType\">TypedType</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedType","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedType-39-\">TypedType'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedType'","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedType-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedDeclaration\">TypedDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedDeclaration","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedDeclaration"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedDeclaration-39-\">TypedDeclaration'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration-39-\" title=\"Elara.AST.Generic.Types\">Declaration'</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedDeclaration'","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedDeclaration-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedDeclarationBody\">TypedDeclarationBody</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody\" title=\"Elara.AST.Generic.Types\">DeclarationBody</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedDeclarationBody","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedDeclarationBody"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedDeclarationBody-39-\">TypedDeclarationBody'</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody-39-\" title=\"Elara.AST.Generic.Types\">DeclarationBody'</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedDeclarationBody'","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedDeclarationBody-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TypedTypeDeclaration\">TypedTypeDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>","name":"TypedTypeDeclaration","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#t:TypedTypeDeclaration"},{"display_html":"<a href=\"#v:valueDependencies\">valueDependencies</a> :: <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a> -&gt; [<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>]","name":"valueDependencies","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#v:valueDependencies"},{"display_html":"<a href=\"#v:patternDependencies\">patternDependencies</a> :: <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a> -&gt; [<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>]","name":"patternDependencies","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#v:patternDependencies"},{"display_html":"<a href=\"#v:monotypeDependencies\">monotypeDependencies</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; [<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>]","name":"monotypeDependencies","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#v:monotypeDependencies"},{"display_html":"<a href=\"#v:typeDependencies\">typeDependencies</a> :: <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; [<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>]","name":"typeDependencies","module":"Elara.AST.Typed","link":"elara/Elara-AST-Typed.html#v:typeDependencies"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedExpr\">ShuntedExpr</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedExpr","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedExpr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedExpr-39-\">ShuntedExpr'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedExpr'","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedExpr-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedPattern\">ShuntedPattern</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedPattern","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedPattern"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedPattern-39-\">ShuntedPattern'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedPattern'","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedPattern-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedBinaryOperator\">ShuntedBinaryOperator</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedBinaryOperator","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedBinaryOperator"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedBinaryOperator-39-\">ShuntedBinaryOperator'</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedBinaryOperator'","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedBinaryOperator-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedType\">ShuntedType</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedType","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedType-39-\">ShuntedType'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedType'","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedType-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedDeclaration\">ShuntedDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedDeclaration","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedDeclaration"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedDeclaration-39-\">ShuntedDeclaration'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration-39-\" title=\"Elara.AST.Generic.Types\">Declaration'</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedDeclaration'","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedDeclaration-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedDeclarationBody\">ShuntedDeclarationBody</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody\" title=\"Elara.AST.Generic.Types\">DeclarationBody</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedDeclarationBody","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedDeclarationBody"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedDeclarationBody-39-\">ShuntedDeclarationBody'</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody-39-\" title=\"Elara.AST.Generic.Types\">DeclarationBody'</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedDeclarationBody'","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedDeclarationBody-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntedTypeDeclaration\">ShuntedTypeDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>","name":"ShuntedTypeDeclaration","module":"Elara.AST.Shunted","link":"elara/Elara-AST-Shunted.html#t:ShuntedTypeDeclaration"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:RenamedValueDeclAnnotations\">RenamedValueDeclAnnotations</a> = <a href=\"#v:RenamedValueDeclAnnotations\">RenamedValueDeclAnnotations</a> {<ul class=\"subs\"><li><a href=\"#v:infixValueDecl\">infixValueDecl</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>)</li></ul>}","name":"RenamedValueDeclAnnotations RenamedValueDeclAnnotations infixValueDecl","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedValueDeclAnnotations"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:RenamedTypeDeclAnnotations\">RenamedTypeDeclAnnotations</a> = <a href=\"#v:RenamedTypeDeclAnnotations\">RenamedTypeDeclAnnotations</a> {<ul class=\"subs\"><li><a href=\"#v:infixTypeDecl\">infixTypeDecl</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>)</li></ul>}","name":"RenamedTypeDeclAnnotations RenamedTypeDeclAnnotations infixTypeDecl","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedTypeDeclAnnotations"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedExpr\">RenamedExpr</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedExpr","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedExpr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedExpr-39-\">RenamedExpr'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedExpr'","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedExpr-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedPattern\">RenamedPattern</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedPattern","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedPattern"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedPattern-39-\">RenamedPattern'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedPattern'","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedPattern-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedBinaryOperator\">RenamedBinaryOperator</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedBinaryOperator","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedBinaryOperator"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedBinaryOperator-39-\">RenamedBinaryOperator'</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedBinaryOperator'","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedBinaryOperator-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedType\">RenamedType</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedType","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedType-39-\">RenamedType'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedType'","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedType-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedDeclaration\">RenamedDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedDeclaration","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedDeclaration"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedDeclaration-39-\">RenamedDeclaration'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration-39-\" title=\"Elara.AST.Generic.Types\">Declaration'</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedDeclaration'","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedDeclaration-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedDeclarationBody\">RenamedDeclarationBody</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody\" title=\"Elara.AST.Generic.Types\">DeclarationBody</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedDeclarationBody","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedDeclarationBody"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedDeclarationBody-39-\">RenamedDeclarationBody'</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody-39-\" title=\"Elara.AST.Generic.Types\">DeclarationBody'</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedDeclarationBody'","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedDeclarationBody-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamedTypeDeclaration\">RenamedTypeDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>","name":"RenamedTypeDeclaration","module":"Elara.AST.Renamed","link":"elara/Elara-AST-Renamed.html#t:RenamedTypeDeclaration"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:OpTable\">OpTable</a> = <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRef\" title=\"Elara.AST.VarRef\">IgnoreLocVarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>","name":"OpTable","module":"Elara.Shunt.Operator","link":"elara/Elara-Shunt-Operator.html#t:OpTable"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Precedence\">Precedence</a> = <a href=\"#v:Precedence\">Precedence</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"Precedence Precedence","module":"Elara.Shunt.Operator","link":"elara/Elara-Shunt-Operator.html#t:Precedence"},{"display_html":"<a href=\"#v:mkPrecedence\">mkPrecedence</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; <a href=\"Elara-Shunt-Operator.html#t:Precedence\" title=\"Elara.Shunt.Operator\">Precedence</a>","name":"mkPrecedence","module":"Elara.Shunt.Operator","link":"elara/Elara-Shunt-Operator.html#v:mkPrecedence"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:OpInfo\">OpInfo</a> = <a href=\"#v:OpInfo\">OpInfo</a> {<ul class=\"subs\"><li><a href=\"#v:precedence\">precedence</a> :: !<a href=\"Elara-Shunt-Operator.html#t:Precedence\" title=\"Elara.Shunt.Operator\">Precedence</a></li><li><a href=\"#v:associativity\">associativity</a> :: !<a href=\"Elara-Shunt-Operator.html#t:Associativity\" title=\"Elara.Shunt.Operator\">Associativity</a></li></ul>}","name":"OpInfo OpInfo associativity precedence","module":"Elara.Shunt.Operator","link":"elara/Elara-Shunt-Operator.html#t:OpInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Associativity\">Associativity</a><ul class=\"subs\"><li>= <a href=\"#v:LeftAssociative\">LeftAssociative</a></li><li>| <a href=\"#v:RightAssociative\">RightAssociative</a></li><li>| <a href=\"#v:NonAssociative\">NonAssociative</a></li></ul>","name":"Associativity LeftAssociative NonAssociative RightAssociative","module":"Elara.Shunt.Operator","link":"elara/Elara-Shunt-Operator.html#t:Associativity"},{"display_html":"<a href=\"#v:prettyOp\">prettyOp</a> :: <a href=\"Elara-AST-Renamed.html#t:RenamedBinaryOperator\" title=\"Elara.AST.Renamed\">RenamedBinaryOperator</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyOp","module":"Elara.Shunt.Operator","link":"elara/Elara-Shunt-Operator.html#v:prettyOp"},{"display_html":"<a href=\"#v:prettyOpTable\">prettyOpTable</a> :: <a href=\"Elara-Shunt-Operator.html#t:OpTable\" title=\"Elara.Shunt.Operator\">OpTable</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyOpTable","module":"Elara.Shunt.Operator","link":"elara/Elara-Shunt-Operator.html#v:prettyOpTable"},{"display_html":"<a href=\"#v:consName\">consName</a> :: <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"consName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:consName"},{"display_html":"<a href=\"#v:cons\">cons</a> :: <a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:VarOrConName\" title=\"Elara.AST.Name\">VarOrConName</a>","name":"cons","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:cons"},{"display_html":"<a href=\"#v:fetchPrimitiveName\">fetchPrimitiveName</a> :: <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>","name":"fetchPrimitiveName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:fetchPrimitiveName"},{"display_html":"<a href=\"#v:fetchPrimitive\">fetchPrimitive</a> :: <a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>","name":"fetchPrimitive","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:fetchPrimitive"},{"display_html":"<a href=\"#v:stringName\">stringName</a> :: <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"stringName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:stringName"},{"display_html":"<a href=\"#v:intName\">intName</a> :: <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"intName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:intName"},{"display_html":"<a href=\"#v:boolName\">boolName</a> :: <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"boolName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:boolName"},{"display_html":"<a href=\"#v:trueName\">trueName</a> :: <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"trueName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:trueName"},{"display_html":"<a href=\"#v:falseName\">falseName</a> :: <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"falseName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:falseName"},{"display_html":"<a href=\"#v:charName\">charName</a> :: <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"charName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:charName"},{"display_html":"<a href=\"#v:ioName\">ioName</a> :: <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>","name":"ioName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:ioName"},{"display_html":"<a href=\"#v:fullListName\">fullListName</a> :: <a href=\"Prelude.html#t:IsString\" title=\"Prelude\">IsString</a> a =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> a","name":"fullListName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:fullListName"},{"display_html":"<a href=\"#v:primModuleName\">primModuleName</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>","name":"primModuleName","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:primModuleName"},{"display_html":"<a href=\"#v:primRegion\">primRegion</a> :: <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"primRegion","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:primRegion"},{"display_html":"<a href=\"#v:primLocated\">primLocated</a> :: a -&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a","name":"primLocated","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:primLocated"},{"display_html":"<a href=\"#v:mkPrimQual\">mkPrimQual</a> :: c -&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> c","name":"mkPrimQual","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:mkPrimQual"},{"display_html":"<a href=\"#v:mkPrimVarRef\">mkPrimVarRef</a> :: c -&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> c)","name":"mkPrimVarRef","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:mkPrimVarRef"},{"display_html":"<a href=\"#v:primitiveVars\">primitiveVars</a> :: [<a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>]","name":"primitiveVars","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:primitiveVars"},{"display_html":"<a href=\"#v:primitiveTypes\">primitiveTypes</a> :: [<a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>]","name":"primitiveTypes","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:primitiveTypes"},{"display_html":"<a href=\"#v:primKindCheckContext\">primKindCheckContext</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>","name":"primKindCheckContext","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:primKindCheckContext"},{"display_html":"<a href=\"#v:primOpTable\">primOpTable</a> :: <a href=\"Elara-Shunt-Operator.html#t:OpTable\" title=\"Elara.Shunt.Operator\">OpTable</a>","name":"primOpTable","module":"Elara.Prim","link":"elara/Elara-Prim.html#v:primOpTable"},{"display_html":"<a href=\"#v:trueCtorName\">trueCtorName</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"trueCtorName","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:trueCtorName"},{"display_html":"<a href=\"#v:falseCtorName\">falseCtorName</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"falseCtorName","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:falseCtorName"},{"display_html":"<a href=\"#v:emptyListCtorName\">emptyListCtorName</a> :: <a href=\"Prelude.html#t:IsString\" title=\"Prelude\">IsString</a> s =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> s","name":"emptyListCtorName","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:emptyListCtorName"},{"display_html":"<a href=\"#v:consCtorName\">consCtorName</a> :: <a href=\"Prelude.html#t:IsString\" title=\"Prelude\">IsString</a> s =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> s","name":"consCtorName","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:consCtorName"},{"display_html":"<a href=\"#v:tuple2CtorName\">tuple2CtorName</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"tuple2CtorName","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:tuple2CtorName"},{"display_html":"<a href=\"#v:fetchPrimitiveName\">fetchPrimitiveName</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"fetchPrimitiveName","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:fetchPrimitiveName"},{"display_html":"<a href=\"#v:boolCon\">boolCon</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"boolCon","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:boolCon"},{"display_html":"<a href=\"#v:intCon\">intCon</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"intCon","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:intCon"},{"display_html":"<a href=\"#v:floatCon\">floatCon</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"floatCon","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:floatCon"},{"display_html":"<a href=\"#v:stringCon\">stringCon</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"stringCon","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:stringCon"},{"display_html":"<a href=\"#v:unitCon\">unitCon</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"unitCon","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:unitCon"},{"display_html":"<a href=\"#v:charCon\">charCon</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"charCon","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:charCon"},{"display_html":"<a href=\"#v:doubleCon\">doubleCon</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"doubleCon","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:doubleCon"},{"display_html":"<a href=\"#v:ioCon\">ioCon</a> :: <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"ioCon","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:ioCon"},{"display_html":"<a href=\"#v:trueCtor\">trueCtor</a> :: <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>","name":"trueCtor","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:trueCtor"},{"display_html":"<a href=\"#v:falseCtor\">falseCtor</a> :: <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>","name":"falseCtor","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:falseCtor"},{"display_html":"<a href=\"#v:unitCtor\">unitCtor</a> :: <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>","name":"unitCtor","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:unitCtor"},{"display_html":"<a href=\"#v:unitConName\">unitConName</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"unitConName","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:unitConName"},{"display_html":"<a href=\"#v:undefinedId\">undefinedId</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"undefinedId","module":"Elara.Prim.Core","link":"elara/Elara-Prim-Core.html#v:undefinedId"},{"display_html":"<a href=\"#v:estimateArity\">estimateArity</a> :: <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"estimateArity","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:estimateArity"},{"display_html":"<a href=\"#v:declaredLambdaArity\">declaredLambdaArity</a> :: <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>","name":"declaredLambdaArity","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:declaredLambdaArity"},{"display_html":"<a href=\"#v:findTyCon\">findTyCon</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"findTyCon","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:findTyCon"},{"display_html":"<a href=\"#v:guesstimateExprType\">guesstimateExprType</a> :: (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)) =&gt; <a href=\"Elara-Logging.html#t:TraceableFn\" title=\"Elara.Logging\">TraceableFn</a> &quot;guesstimateExprType&quot; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"guesstimateExprType","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:guesstimateExprType"},{"display_html":"<a href=\"#v:overForAll\">overForAll</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; (<a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>) -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"overForAll","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:overForAll"},{"display_html":"<a href=\"#v:varType\">varType</a> :: <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"varType","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:varType"},{"display_html":"<a href=\"#v:literalType\">literalType</a> :: <a href=\"Elara-Core.html#t:Literal\" title=\"Elara.Core\">Literal</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"literalType","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:literalType"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:FreeCoreVars\">FreeCoreVars</a> (ast :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:freeCoreVars\">freeCoreVars</a> :: <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> b =&gt; ast b -&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> b</li></ul>","name":"FreeCoreVars freeCoreVars","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#t:FreeCoreVars"},{"display_html":"<a href=\"#v:freeCoreVarsBind\">freeCoreVarsBind</a> :: <span class=\"keyword\">forall</span> (ast :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a. (<a href=\"Elara-Core-Analysis.html#t:FreeCoreVars\" title=\"Elara.Core.Analysis\">FreeCoreVars</a> ast, <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> a) =&gt; <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> a ast -&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> a","name":"freeCoreVarsBind","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:freeCoreVarsBind"},{"display_html":"<a href=\"#v:freeTypeVars\">freeTypeVars</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a>","name":"freeTypeVars","module":"Elara.Core.Analysis","link":"elara/Elara-Core-Analysis.html#v:freeTypeVars"},{"display_html":"<a href=\"#v:createModuleName\">createModuleName</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/h2jvm-0.5.4.9/docs/JVM-Data-Abstract-Name.html#t:QualifiedClassName\" title=\"JVM.Data.Abstract.Name\">QualifiedClassName</a>","name":"createModuleName","module":"Elara.Emit.Utils","link":"elara/Elara-Emit-Utils.html#v:createModuleName"},{"display_html":"<a href=\"#v:createQualifiedClassName\">createQualifiedClassName</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/h2jvm-0.5.4.9/docs/JVM-Data-Abstract-Name.html#t:QualifiedClassName\" title=\"JVM.Data.Abstract.Name\">QualifiedClassName</a>","name":"createQualifiedClassName","module":"Elara.Emit.Utils","link":"elara/Elara-Emit-Utils.html#v:createQualifiedClassName"},{"display_html":"<a href=\"#v:generateFieldType\">generateFieldType</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/h2jvm-0.5.4.9/docs/JVM-Data-Abstract-Type.html#t:FieldType\" title=\"JVM.Data.Abstract.Type\">FieldType</a>","name":"generateFieldType","module":"Elara.Emit.Utils","link":"elara/Elara-Emit-Utils.html#v:generateFieldType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ToANF\">ToANF</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>), <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>)","name":"ToANF","module":"Elara.Core.ToANF","link":"elara/Elara-Core-ToANF.html#t:ToANF"},{"display_html":"<a href=\"#v:toANF\">toANF</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-ToANF.html#t:ToANF\" title=\"Elara.Core.ToANF\">ToANF</a> r =&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"toANF","module":"Elara.Core.ToANF","link":"elara/Elara-Core-ToANF.html#v:toANF"},{"display_html":"<a href=\"#v:toANFCont\">toANFCont</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-ToANF.html#t:ToANF\" title=\"Elara.Core.ToANF\">ToANF</a> r =&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Cont.html#t:ContT\" title=\"Control.Monad.Cont\">ContT</a> (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>) (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r) (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"toANFCont","module":"Elara.Core.ToANF","link":"elara/Elara-Core-ToANF.html#v:toANFCont"},{"display_html":"<a href=\"#v:toANF-39-\">toANF'</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-ToANF.html#t:ToANF\" title=\"Elara.Core.ToANF\">ToANF</a> r =&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"toANF'","module":"Elara.Core.ToANF","link":"elara/Elara-Core-ToANF.html#v:toANF-39-"},{"display_html":"<a href=\"#v:toANFRec\">toANFRec</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-ToANF.html#t:ToANF\" title=\"Elara.Core.ToANF\">ToANF</a> r =&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; (<a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Cont.html#t:ContT\" title=\"Control.Monad.Cont\">ContT</a> (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>) (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r) (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"toANFRec","module":"Elara.Core.ToANF","link":"elara/Elara-Core-ToANF.html#v:toANFRec"},{"display_html":"<a href=\"#v:fromANF\">fromANF</a> :: <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"fromANF","module":"Elara.Core.ToANF","link":"elara/Elara-Core-ToANF.html#v:fromANF"},{"display_html":"<a href=\"#v:fromANFCExpr\">fromANFCExpr</a> :: <a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"fromANFCExpr","module":"Elara.Core.ToANF","link":"elara/Elara-Core-ToANF.html#v:fromANFCExpr"},{"display_html":"<a href=\"#v:fromANFAtom\">fromANFAtom</a> :: <a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"fromANFAtom","module":"Elara.Core.ToANF","link":"elara/Elara-Core-ToANF.html#v:fromANFAtom"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> v =&gt; <a href=\"#t:PrettyVar\">PrettyVar</a> v <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyVar\">prettyVar</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; v -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a></li><li><a href=\"#v:prettyVarArg\">prettyVarArg</a> :: v -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a></li></ul>","name":"PrettyVar prettyVar prettyVarArg","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#t:PrettyVar"},{"display_html":"<a href=\"#v:prettyTLLam\">prettyTLLam</a> :: (<a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v1, <a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v2) =&gt; v1 -&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v2 -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTLLam","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyTLLam"},{"display_html":"<a href=\"#v:collectLamParams\">collectLamParams</a> :: (<a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v1, <a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v2) =&gt; v1 -&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v2 -&gt; ([<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>], <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v2)","name":"collectLamParams","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:collectLamParams"},{"display_html":"<a href=\"#v:prettyExpr\">prettyExpr</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v), <a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>) =&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyExpr","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyExpr"},{"display_html":"<a href=\"#v:prettyExpr1\">prettyExpr1</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v), <a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v) =&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyExpr1","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyExpr1"},{"display_html":"<a href=\"#v:prettyExpr2\">prettyExpr2</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v), <a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v) =&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyExpr2","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyExpr2"},{"display_html":"<a href=\"#v:prettyVdefg\">prettyVdefg</a> :: <span class=\"keyword\">forall</span> v (expr :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (expr v)) =&gt; <a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> v expr -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyVdefg","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyVdefg"},{"display_html":"<a href=\"#v:prettyVdef\">prettyVdef</a> :: (<a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (expr v)) =&gt; (v, expr v) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyVdef","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyVdef"},{"display_html":"<a href=\"#v:prettyVBind\">prettyVBind</a> :: <a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v =&gt; v -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyVBind","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyVBind"},{"display_html":"<a href=\"#v:prettyAlts\">prettyAlts</a> :: <a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v =&gt; [<a href=\"Elara-Core.html#t:Alt\" title=\"Elara.Core\">Alt</a> v] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyAlts","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyAlts"},{"display_html":"<a href=\"#v:prettyAlt\">prettyAlt</a> :: (<a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> a, <a href=\"Elara-Core-Pretty.html#t:PrettyVar\" title=\"Elara.Core.Pretty\">PrettyVar</a> v) =&gt; (<a href=\"Elara-Core.html#t:AltCon\" title=\"Elara.Core\">AltCon</a>, [a], <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> v) -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyAlt","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyAlt"},{"display_html":"<a href=\"#v:prettyTypeVariables\">prettyTypeVariables</a> :: [<a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a>] -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTypeVariables","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyTypeVariables"},{"display_html":"<a href=\"#v:prettyTy\">prettyTy</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTy","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyTy"},{"display_html":"<a href=\"#v:prettyTy1\">prettyTy1</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTy1","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyTy1"},{"display_html":"<a href=\"#v:prettyTy2\">prettyTy2</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTy2","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyTy2"},{"display_html":"<a href=\"#v:prettyTypeVariable\">prettyTypeVariable</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTypeVariable","module":"Elara.Core.Pretty","link":"elara/Elara-Core-Pretty.html#v:prettyTypeVariable"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NPat\">NPat</a><ul class=\"subs\"><li>= <a href=\"#v:PWild\">PWild</a></li><li>| <a href=\"#v:PVar\">PVar</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)</li><li>| <a href=\"#v:PLit\">PLit</a> <a href=\"Elara-Core.html#t:Literal\" title=\"Elara.Core\">Literal</a></li><li>| <a href=\"#v:PCon\">PCon</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) [<a href=\"Elara-ToCore-Match.html#t:NPat\" title=\"Elara.ToCore.Match\">NPat</a>]</li></ul>","name":"NPat PCon PLit PVar PWild","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#t:NPat"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PMatrix\">PMatrix</a> a = <a href=\"#v:PMatrix\">PMatrix</a> {<ul class=\"subs\"><li><a href=\"#v:pmPats\">pmPats</a> :: <a href=\"https://hackage.haskell.org/package/matrix-0.3.6.4/docs/Data-Matrix.html#t:Matrix\" title=\"Data.Matrix\">Matrix</a> <a href=\"Elara-ToCore-Match.html#t:NPat\" title=\"Elara.ToCore.Match\">NPat</a></li><li><a href=\"#v:pmRhs\">pmRhs</a> :: [a]</li><li><a href=\"#v:pmBinds\">pmBinds</a> :: [[(<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>, <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)]]</li></ul>}","name":"PMatrix PMatrix pmBinds pmPats pmRhs","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#t:PMatrix"},{"display_html":"<a href=\"#v:buildMatrix1\">buildMatrix1</a> :: [(<a href=\"Elara-AST-Typed.html#t:TypedPattern\" title=\"Elara.AST.Typed\">TypedPattern</a>, a)] -&gt; <a href=\"Elara-ToCore-Match.html#t:PMatrix\" title=\"Elara.ToCore.Match\">PMatrix</a> a","name":"buildMatrix1","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#v:buildMatrix1"},{"display_html":"<a href=\"#v:toNPat\">toNPat</a> :: <a href=\"Elara-AST-Typed.html#t:TypedPattern\" title=\"Elara.AST.Typed\">TypedPattern</a> -&gt; <a href=\"Elara-ToCore-Match.html#t:NPat\" title=\"Elara.ToCore.Match\">NPat</a>","name":"toNPat","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#v:toNPat"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ConResolver\">ConResolver</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; m <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>","name":"ConResolver","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#t:ConResolver"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FreshLocal\">FreshLocal</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; m <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"FreshLocal","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#t:FreshLocal"},{"display_html":"<a href=\"#v:compileMatrix\">compileMatrix</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-ToCore-Match.html#t:ConResolver\" title=\"Elara.ToCore.Match\">ConResolver</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r) -&gt; <a href=\"Elara-ToCore-Match.html#t:FreshLocal\" title=\"Elara.ToCore.Match\">FreshLocal</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r) -&gt; [<a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>] -&gt; <a href=\"Elara-ToCore-Match.html#t:PMatrix\" title=\"Elara.ToCore.Match\">PMatrix</a> <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"compileMatrix","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#v:compileMatrix"},{"display_html":"<a href=\"#v:stepOnColumn0\">stepOnColumn0</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-ToCore-Match.html#t:ConResolver\" title=\"Elara.ToCore.Match\">ConResolver</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r) -&gt; <a href=\"Elara-ToCore-Match.html#t:FreshLocal\" title=\"Elara.ToCore.Match\">FreshLocal</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r) -&gt; [<a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>] -&gt; <a href=\"Elara-ToCore-Match.html#t:PMatrix\" title=\"Elara.ToCore.Match\">PMatrix</a> <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"stepOnColumn0","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#v:stepOnColumn0"},{"display_html":"<a href=\"#v:compileDefault\">compileDefault</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-ToCore-Match.html#t:ConResolver\" title=\"Elara.ToCore.Match\">ConResolver</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r) -&gt; <a href=\"Elara-ToCore-Match.html#t:FreshLocal\" title=\"Elara.ToCore.Match\">FreshLocal</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r) -&gt; <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; [<a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>] -&gt; <a href=\"Elara-ToCore-Match.html#t:PMatrix\" title=\"Elara.ToCore.Match\">PMatrix</a> <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; [(<a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a>, <a href=\"Elara-ToCore-Match.html#t:NPat\" title=\"Elara.ToCore.Match\">NPat</a>, [<a href=\"Elara-ToCore-Match.html#t:NPat\" title=\"Elara.ToCore.Match\">NPat</a>])] -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Core.html#t:CoreAlt\" title=\"Elara.Core\">CoreAlt</a>)","name":"compileDefault","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#v:compileDefault"},{"display_html":"<a href=\"#v:emitBinds\">emitBinds</a> :: [(<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>, <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)] -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"emitBinds","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#v:emitBinds"},{"display_html":"<a href=\"#v:at1\">at1</a> :: <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> -&gt; [a] -&gt; a","name":"at1","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#v:at1"},{"display_html":"<a href=\"#v:coreConstructorTypeArgs\">coreConstructorTypeArgs</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; [a]","name":"coreConstructorTypeArgs","module":"Elara.ToCore.Match","link":"elara/Elara-ToCore-Match.html#v:coreConstructorTypeArgs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CoreModule\">CoreModule</a> bind = <a href=\"#v:CoreModule\">CoreModule</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: !<a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li><li><a href=\"#v:declarations\">declarations</a> :: ![<a href=\"Elara-Core-Module.html#t:CoreDeclaration\" title=\"Elara.Core.Module\">CoreDeclaration</a> bind]</li></ul>}","name":"CoreModule CoreModule declarations name","module":"Elara.Core.Module","link":"elara/Elara-Core-Module.html#t:CoreModule"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CoreDeclaration\">CoreDeclaration</a> bind<ul class=\"subs\"><li>= <a href=\"#v:CoreValue\">CoreValue</a> bind</li><li>| <a href=\"#v:CoreType\">CoreType</a> <a href=\"Elara-Core-Module.html#t:CoreTypeDecl\" title=\"Elara.Core.Module\">CoreTypeDecl</a></li></ul>","name":"CoreDeclaration CoreType CoreValue","module":"Elara.Core.Module","link":"elara/Elara-Core-Module.html#t:CoreDeclaration"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CoreTypeDecl\">CoreTypeDecl</a> = <a href=\"#v:CoreTypeDecl\">CoreTypeDecl</a> {<ul class=\"subs\"><li><a href=\"#v:ctdName\">ctdName</a> :: !(<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)</li><li><a href=\"#v:kind\">kind</a> :: !<a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li><li><a href=\"#v:typeVars\">typeVars</a> :: ![<a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a>]</li><li><a href=\"#v:typeBody\">typeBody</a> :: <a href=\"Elara-Core-Module.html#t:CoreTypeDeclBody\" title=\"Elara.Core.Module\">CoreTypeDeclBody</a></li></ul>}","name":"CoreTypeDecl CoreTypeDecl ctdName kind typeBody typeVars","module":"Elara.Core.Module","link":"elara/Elara-Core-Module.html#t:CoreTypeDecl"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CoreTypeDeclBody\">CoreTypeDeclBody</a><ul class=\"subs\"><li>= <a href=\"#v:CoreTypeAlias\">CoreTypeAlias</a> <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li>| <a href=\"#v:CoreDataDecl\">CoreDataDecl</a> <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a> [<a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>]</li></ul>","name":"CoreTypeDeclBody CoreDataDecl CoreTypeAlias","module":"Elara.Core.Module","link":"elara/Elara-Core-Module.html#t:CoreTypeDeclBody"},{"display_html":"<a href=\"#v:prettyTdef\">prettyTdef</a> :: <a href=\"Elara-Core-Module.html#t:CoreTypeDecl\" title=\"Elara.Core.Module\">CoreTypeDecl</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyTdef","module":"Elara.Core.Module","link":"elara/Elara-Core-Module.html#v:prettyTdef"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ShuntError\">ShuntError</a> = <a href=\"#v:SamePrecedenceError\">SamePrecedenceError</a> !(<a href=\"Elara-AST-Renamed.html#t:RenamedBinaryOperator\" title=\"Elara.AST.Renamed\">RenamedBinaryOperator</a>, <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>) !(<a href=\"Elara-AST-Renamed.html#t:RenamedBinaryOperator\" title=\"Elara.AST.Renamed\">RenamedBinaryOperator</a>, <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>)","name":"ShuntError SamePrecedenceError","module":"Elara.Shunt.Error","link":"elara/Elara-Shunt-Error.html#t:ShuntError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ShuntWarning\">ShuntWarning</a> = <a href=\"#v:UnknownPrecedence\">UnknownPrecedence</a> <a href=\"Elara-Shunt-Operator.html#t:OpTable\" title=\"Elara.Shunt.Operator\">OpTable</a> <a href=\"Elara-AST-Renamed.html#t:RenamedDeclarationBody\" title=\"Elara.AST.Renamed\">RenamedDeclarationBody</a>","name":"ShuntWarning UnknownPrecedence","module":"Elara.Shunt.Error","link":"elara/Elara-Shunt-Error.html#t:ShuntWarning"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Module\">Module</a> (ast :: a) = <a href=\"#v:Module\">Module</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Module.html#t:Module-39-\" title=\"Elara.AST.Module\">Module'</a> ast))","name":"Module Module","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#t:Module"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Module-39-\">Module'</a> (ast :: a) = <a href=\"#v:Module-39-\">Module'</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li><li><a href=\"#v:exposing\">exposing</a> :: <a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> ast</li><li><a href=\"#v:imports\">imports</a> :: [<a href=\"Elara-AST-Module.html#t:Import\" title=\"Elara.AST.Module\">Import</a> ast]</li><li><a href=\"#v:declarations\">declarations</a> :: [<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> ast]</li></ul>}","name":"Module' Module' declarations exposing imports name","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#t:Module-39-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Import\">Import</a> (ast :: a) = <a href=\"#v:Import\">Import</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast (<a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast))","name":"Import Import","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#t:Import"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Import-39-\">Import'</a> (ast :: a) = <a href=\"#v:Import-39-\">Import'</a> {<ul class=\"subs\"><li><a href=\"#v:importing\">importing</a> :: <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li><li><a href=\"#v:as\">as</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>)</li><li><a href=\"#v:qualified\">qualified</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a></li><li><a href=\"#v:exposing\">exposing</a> :: <a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> ast</li></ul>}","name":"Import' Import' as exposing importing qualified","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#t:Import-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Exposing\">Exposing</a> (ast :: a)<ul class=\"subs\"><li>= <a href=\"#v:ExposingAll\">ExposingAll</a></li><li>| <a href=\"#v:ExposingSome\">ExposingSome</a> [<a href=\"Elara-AST-Module.html#t:Exposition\" title=\"Elara.AST.Module\">Exposition</a> ast]</li></ul>","name":"Exposing ExposingAll ExposingSome","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#t:Exposing"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Exposition\">Exposition</a> (ast :: a)<ul class=\"subs\"><li>= <a href=\"#v:ExposedValue\">ExposedValue</a> (<a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)</li><li>| <a href=\"#v:ExposedOp\">ExposedOp</a> (<a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)</li><li>| <a href=\"#v:ExposedType\">ExposedType</a> (<a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)</li><li>| <a href=\"#v:ExposedTypeAndAllConstructors\">ExposedTypeAndAllConstructors</a> (<a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)</li></ul>","name":"Exposition ExposedOp ExposedType ExposedTypeAndAllConstructors ExposedValue","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#t:Exposition"},{"display_html":"<a href=\"#v:traverseModule\">traverseModule</a> :: <span class=\"keyword\">forall</span> {a1} {astK} {a2} a4 f (ast :: a1) s1 t {ast2 :: astK} {ast3 :: a2} {s}. (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast3 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast3 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast3 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast3 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast3 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast3 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)), ErrorUnlessOnlyOne s1 (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> s1), <a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> s1, <a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> t, GWrapped (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> s1) (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> t) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> s) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Module.html#t:Module-39-\" title=\"Elara.AST.Module\">Module'</a> ast)), <a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Internal-Families-Changing.html#t:UnifyHead\" title=\"Data.Generics.Internal.Families.Changing\">UnifyHead</a> s1 t, <a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Internal-Families-Changing.html#t:UnifyHead\" title=\"Data.Generics.Internal.Families.Changing\">UnifyHead</a> t s1, <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast2, <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> f, <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;name&quot; s (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>)), <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;exposing&quot; s (<a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> ast3), <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;declarations&quot; s [a4], <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;imports&quot; s [<a href=\"Elara-AST-Module.html#t:Import\" title=\"Elara.AST.Module\">Import</a> ast2]) =&gt; (a4 -&gt; f (<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> ast)) -&gt; s1 -&gt; f t","name":"traverseModule","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#v:traverseModule"},{"display_html":"<a href=\"#v:traverseModule_\">traverseModule_</a> :: <span class=\"keyword\">forall</span> a4 f s1 {s} {t :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>}. (ErrorUnlessOnlyOne s1 (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> s1), <a href=\"Prelude.html#t:Applicative\" title=\"Prelude\">Applicative</a> f, <a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> s1, GWrapped (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> s1) (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> s1) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> s) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> s), <a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Internal-Families-Changing.html#t:UnifyHead\" title=\"Data.Generics.Internal.Families.Changing\">UnifyHead</a> s1 s1, <a href=\"Prelude.html#t:Foldable\" title=\"Prelude\">Foldable</a> t, <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;declarations&quot; s (t a4)) =&gt; (a4 -&gt; f ()) -&gt; s1 -&gt; f ()","name":"traverseModule_","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#v:traverseModule_"},{"display_html":"<a href=\"#v:coerceExposition\">coerceExposition</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) (ast2 :: a2). (<a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) =&gt; <a href=\"Elara-AST-Module.html#t:Exposition\" title=\"Elara.AST.Module\">Exposition</a> ast1 -&gt; <a href=\"Elara-AST-Module.html#t:Exposition\" title=\"Elara.AST.Module\">Exposition</a> ast2","name":"coerceExposition","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#v:coerceExposition"},{"display_html":"<a href=\"#v:coerceExposing\">coerceExposing</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) (ast2 :: a2). (<a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) =&gt; <a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> ast1 -&gt; <a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> ast2","name":"coerceExposing","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#v:coerceExposing"},{"display_html":"<a href=\"#v:coerceImport\">coerceImport</a> :: <span class=\"keyword\">forall</span> {a} astK (ast1 :: astK) (ast2 :: a). (<a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast1, <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast2 <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>, <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast2) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast2 (<a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast2)) =&gt; <a href=\"Elara-AST-Module.html#t:Import\" title=\"Elara.AST.Module\">Import</a> ast1 -&gt; <a href=\"Elara-AST-Module.html#t:Import\" title=\"Elara.AST.Module\">Import</a> ast2","name":"coerceImport","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#v:coerceImport"},{"display_html":"<a href=\"#v:coerceImport-39-\">coerceImport'</a> :: <span class=\"keyword\">forall</span> {a1} {a2} (ast1 :: a1) (ast2 :: a2). (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast2 <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>, <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast1 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:FullASTQual\" title=\"Elara.AST.Generic.Types\">FullASTQual</a> ast2 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) =&gt; <a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast1 -&gt; <a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast2","name":"coerceImport'","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#v:coerceImport-39-"},{"display_html":"<a href=\"#v:traverseModuleRevTopologically\">traverseModuleRevTopologically</a> :: <span class=\"keyword\">forall</span> {a1} {a2} {a3} {a4} {astK} (ast :: a1) f (ast' :: a2) (ast2 :: a3) (ast3 :: a3) {ast4 :: a4} {s} {ast5 :: astK}. (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast4 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast4 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast' <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast4 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast4 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast' <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast4 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast4 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast' <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast2 (<a href=\"Elara-AST-Module.html#t:Module-39-\" title=\"Elara.AST.Module\">Module'</a> ast2)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> s, <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast3 (<a href=\"Elara-AST-Module.html#t:Module-39-\" title=\"Elara.AST.Module\">Module'</a> ast3)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Module.html#t:Module-39-\" title=\"Elara.AST.Module\">Module'</a> ast'), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast5 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast5 <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast' <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast5 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast5 <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast' <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast5 (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast5 <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' (<a href=\"Elara-AST-Generic-Types.html#t:ASTQual\" title=\"Elara.AST.Generic.Types\">ASTQual</a> ast' <a href=\"Elara-AST-Name.html#t:OpName\" title=\"Elara.AST.Name\">OpName</a>)), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast5 (<a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast')) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' (<a href=\"Elara-AST-Module.html#t:Import-39-\" title=\"Elara.AST.Module\">Import'</a> ast')), <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast5 <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>), <a href=\"Elara-AST-Generic-Types.html#t:RUnlocate\" title=\"Elara.AST.Generic.Types\">RUnlocate</a> ast5, <a href=\"Elara-Data-TopologicalGraph.html#t:HasDependencies\" title=\"Elara.Data.TopologicalGraph\">HasDependencies</a> (<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> ast), <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> f, <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;name&quot; s (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast' <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>)), <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;exposing&quot; s (<a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> ast4), <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;declarations&quot; s [<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> ast], <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;imports&quot; s [<a href=\"Elara-AST-Module.html#t:Import\" title=\"Elara.AST.Module\">Import</a> ast5], <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Declaration-39-\" title=\"Elara.AST.Generic.Types\">Declaration'</a> ast)))) =&gt; (<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> ast -&gt; f (<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> ast')) -&gt; <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> ast2 -&gt; f (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> ast3)","name":"traverseModuleRevTopologically","module":"Elara.AST.Module","link":"elara/Elara-AST-Module.html#v:traverseModuleRevTopologically"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ReplaceKinded\">ReplaceKinded</a> (x :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) r <span class=\"keyword\">where ...</span>","name":"ReplaceKinded","module":"Elara.AST.Kinded","link":"elara/Elara-AST-Kinded.html#t:ReplaceKinded"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ReplaceMidKinded\">ReplaceMidKinded</a> (x :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Exts.html#t:Symbol\" title=\"GHC.Exts\">Symbol</a>) r <span class=\"keyword\">where ...</span>","name":"ReplaceMidKinded","module":"Elara.AST.Kinded","link":"elara/Elara-AST-Kinded.html#t:ReplaceMidKinded"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:KindedTypeDeclaration\">KindedTypeDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Kinded\" title=\"Elara.AST.Select\">Kinded</a>","name":"KindedTypeDeclaration","module":"Elara.AST.Kinded","link":"elara/Elara-AST-Kinded.html#t:KindedTypeDeclaration"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MidKindedTypeDeclaration\">MidKindedTypeDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> '<a href=\"Elara-AST-Select.html#v:MidKinded\" title=\"Elara.AST.Select\">MidKinded</a>","name":"MidKindedTypeDeclaration","module":"Elara.AST.Kinded","link":"elara/Elara-AST-Kinded.html#t:MidKindedTypeDeclaration"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:KindedType\">KindedType</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> '<a href=\"Elara-AST-Select.html#v:Kinded\" title=\"Elara.AST.Select\">Kinded</a>","name":"KindedType","module":"Elara.AST.Kinded","link":"elara/Elara-AST-Kinded.html#t:KindedType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:KindedType-39-\">KindedType'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> '<a href=\"Elara-AST-Select.html#v:Kinded\" title=\"Elara.AST.Select\">Kinded</a>","name":"KindedType'","module":"Elara.AST.Kinded","link":"elara/Elara-AST-Kinded.html#t:KindedType-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MidKindedType\">MidKindedType</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> '<a href=\"Elara-AST-Select.html#v:MidKinded\" title=\"Elara.AST.Select\">MidKinded</a>","name":"MidKindedType","module":"Elara.AST.Kinded","link":"elara/Elara-AST-Kinded.html#t:MidKindedType"},{"display_html":"<a href=\"#v:astTypeToGeneralisedInferType\">astTypeToGeneralisedInferType</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-AST-Kinded.html#t:KindedType\" title=\"Elara.AST.Kinded\">KindedType</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"astTypeToGeneralisedInferType","module":"Elara.TypeInfer.Convert","link":"elara/Elara-TypeInfer-Convert.html#v:astTypeToGeneralisedInferType"},{"display_html":"<a href=\"#v:astTypeToInferType\">astTypeToInferType</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-AST-Kinded.html#t:KindedType\" title=\"Elara.AST.Kinded\">KindedType</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"astTypeToInferType","module":"Elara.TypeInfer.Convert","link":"elara/Elara-TypeInfer-Convert.html#v:astTypeToInferType"},{"display_html":"<a href=\"#v:astTypeToInferTypeWithKind\">astTypeToInferTypeWithKind</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-AST-Kinded.html#t:KindedType\" title=\"Elara.AST.Kinded\">KindedType</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>, <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>)","name":"astTypeToInferTypeWithKind","module":"Elara.TypeInfer.Convert","link":"elara/Elara-TypeInfer-Convert.html#v:astTypeToInferTypeWithKind"},{"display_html":"<a href=\"#v:convertTyVar\">convertTyVar</a> :: (<a href=\"Prelude.html#t:Functor\" title=\"Prelude\">Functor</a> f, <a href=\"Elara-AST-Name.html#t:NameLike\" title=\"Elara.AST.Name\">NameLike</a> a) =&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (f a) -&gt; f (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)","name":"convertTyVar","module":"Elara.TypeInfer.Convert","link":"elara/Elara-TypeInfer-Convert.html#v:convertTyVar"},{"display_html":"<a href=\"#v:astTypeToInferType-39-\">astTypeToInferType'</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"Elara-AST-Kinded.html#t:KindedType-39-\" title=\"Elara.AST.Kinded\">KindedType'</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"astTypeToInferType'","module":"Elara.TypeInfer.Convert","link":"elara/Elara-TypeInfer-Convert.html#v:astTypeToInferType-39-"},{"display_html":"<a href=\"#v:assertMonotype\">assertMonotype</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"assertMonotype","module":"Elara.TypeInfer.Convert","link":"elara/Elara-TypeInfer-Convert.html#v:assertMonotype"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypeConvertError\">TypeConvertError</a><ul class=\"subs\"><li>= <a href=\"#v:HigherRankTypesNotSupported\">HigherRankTypesNotSupported</a> (<a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)</li><li>| <a href=\"#v:NotSupported\">NotSupported</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li></ul>","name":"TypeConvertError HigherRankTypesNotSupported NotSupported","module":"Elara.TypeInfer.Convert","link":"elara/Elara-TypeInfer-Convert.html#t:TypeConvertError"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FunctionCall-39-\">FunctionCall'</a> :: <span class=\"keyword\">forall</span> {a1} {a2} ast1 ast2. <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast1) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast2 =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1","name":"FunctionCall'","module":"Elara.AST.Generic.Pattern","link":"elara/Elara-AST-Generic-Pattern.html#v:FunctionCall-39-"},{"display_html":"<a href=\"#v:functionCall\">functionCall</a> :: <span class=\"keyword\">forall</span> a {a1} {a2} {ast1 :: a1} {ast2 :: a2}. (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast1) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast2, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast2 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1","name":"functionCall","module":"Elara.AST.Generic.Pattern","link":"elara/Elara-AST-Generic-Pattern.html#v:functionCall"},{"display_html":"<a href=\"#v:var\">var</a> :: <span class=\"keyword\">forall</span> {a1} {a2} {ast1 :: a1} {ast2 :: a2} {a3}. (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast1) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast2, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a3) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:ASTLocate\" title=\"Elara.AST.Generic.Types\">ASTLocate</a> ast2 (<a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;VarRef&quot; ast2) -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1","name":"var","module":"Elara.AST.Generic.Pattern","link":"elara/Elara-AST-Generic-Pattern.html#v:var"},{"display_html":"<a href=\"#v:int\">int</a> :: <span class=\"keyword\">forall</span> {a1} {a2} {ast1 :: a1} {ast2 :: a2} {a3}. (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast1 (<a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast1)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> ast2, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;ExprType&quot; ast1 <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a3) =&gt; <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> ast1","name":"int","module":"Elara.AST.Generic.Pattern","link":"elara/Elara-AST-Generic-Pattern.html#v:int"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendExpr\">FrontendExpr</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendExpr","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendExpr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendExpr-39-\">FrontendExpr'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendExpr'","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendExpr-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendPattern\">FrontendPattern</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendPattern","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendPattern"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendPattern-39-\">FrontendPattern'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendPattern'","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendPattern-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendBinaryOperator\">FrontendBinaryOperator</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendBinaryOperator","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendBinaryOperator"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendBinaryOperator-39-\">FrontendBinaryOperator'</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendBinaryOperator'","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendBinaryOperator-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendType\">FrontendType</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendType","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendType-39-\">FrontendType'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendType'","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendType-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendDeclaration\">FrontendDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendDeclaration","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendDeclaration"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendDeclaration-39-\">FrontendDeclaration'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration-39-\" title=\"Elara.AST.Generic.Types\">Declaration'</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendDeclaration'","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendDeclaration-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendDeclarationBody\">FrontendDeclarationBody</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody\" title=\"Elara.AST.Generic.Types\">DeclarationBody</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendDeclarationBody","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendDeclarationBody"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendDeclarationBody-39-\">FrontendDeclarationBody'</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody-39-\" title=\"Elara.AST.Generic.Types\">DeclarationBody'</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendDeclarationBody'","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendDeclarationBody-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FrontendTypeDeclaration\">FrontendTypeDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>","name":"FrontendTypeDeclaration","module":"Elara.AST.Frontend","link":"elara/Elara-AST-Frontend.html#t:FrontendTypeDeclaration"},{"display_html":"<a href=\"#v:type-39-\">type'</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"type'","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:type-39-"},{"display_html":"<a href=\"#v:typeNotApplication\">typeNotApplication</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"typeNotApplication","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:typeNotApplication"},{"display_html":"<a href=\"#v:locatedType\">locatedType</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType-39-\" title=\"Elara.AST.Frontend\">FrontendType'</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"locatedType","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:locatedType"},{"display_html":"<a href=\"#v:constructorApplication\">constructorApplication</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>)","name":"constructorApplication","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:constructorApplication"},{"display_html":"<a href=\"#v:functionType\">functionType</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>)","name":"functionType","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:functionType"},{"display_html":"<a href=\"#v:liftedBinaryType\">liftedBinaryType</a> :: <span class=\"keyword\">forall</span> {a1} {ast :: a1} {a2} {t1} {t2} {m} {u1} {v1} {u2} {v2} {v3} {v4} {t3}. (<a href=\"Elara-AST-Generic-Types.html#t:CleanupLocated\" title=\"Elara.AST.Generic.Types\">CleanupLocated</a> (<a href=\"Elara-AST-Generic-Types.html#t:ASTLocate-39-\" title=\"Elara.AST.Generic.Types\">ASTLocate'</a> ast (<a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> ast)) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a2, <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeKind&quot; ast <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Generic-Common.html#t:NoFieldValue\" title=\"Elara.AST.Generic.Common\">NoFieldValue</a>, ErrorUnlessOnlyOne t1 (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> t1), ErrorUnlessOnlyOne t2 (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> t2), <a href=\"Prelude.html#t:Monad\" title=\"Prelude\">Monad</a> m, <a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> t1, <a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> t2, GWrapped (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> t1) (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> t1) u1 v1, GWrapped (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> t2) (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> t2) u2 v2, <a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Internal-Families-Changing.html#t:UnifyHead\" title=\"Data.Generics.Internal.Families.Changing\">UnifyHead</a> t1 t1, <a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Internal-Families-Changing.html#t:UnifyHead\" title=\"Data.Generics.Internal.Families.Changing\">UnifyHead</a> t2 t2, <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Data-Tuple-Optics.html#t:Field1\" title=\"Data.Tuple.Optics\">Field1</a> u1 v1 v3 v3, <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Data-Tuple-Optics.html#t:Field1\" title=\"Data.Tuple.Optics\">Field1</a> u2 v2 v4 v4, <a href=\"Elara-AST-Region.html#t:HasSourceRegion\" title=\"Elara.AST.Region\">HasSourceRegion</a> v3, <a href=\"Elara-AST-Region.html#t:HasSourceRegion\" title=\"Elara.AST.Region\">HasSourceRegion</a> v4) =&gt; m t3 -&gt; (t3 -&gt; t1 -&gt; t2 -&gt; a2) -&gt; m (t1 -&gt; t2 -&gt; <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> ast)","name":"liftedBinaryType","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:liftedBinaryType"},{"display_html":"<a href=\"#v:typeTerm\">typeTerm</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"typeTerm","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:typeTerm"},{"display_html":"<a href=\"#v:typeVar\">typeVar</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"typeVar","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:typeVar"},{"display_html":"<a href=\"#v:unit\">unit</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"unit","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:unit"},{"display_html":"<a href=\"#v:namedType\">namedType</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"namedType","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:namedType"},{"display_html":"<a href=\"#v:recordType\">recordType</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"recordType","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:recordType"},{"display_html":"<a href=\"#v:emptyRecordError\">emptyRecordError</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"emptyRecordError","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:emptyRecordError"},{"display_html":"<a href=\"#v:tupleType\">tupleType</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"tupleType","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:tupleType"},{"display_html":"<a href=\"#v:listType\">listType</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendType\" title=\"Elara.AST.Frontend\">FrontendType</a>","name":"listType","module":"Elara.Parse.Type","link":"elara/Elara-Parse-Type.html#v:listType"},{"display_html":"<a href=\"#v:patParser\">patParser</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendPattern\" title=\"Elara.AST.Frontend\">FrontendPattern</a>","name":"patParser","module":"Elara.Parse.Pattern","link":"elara/Elara-Parse-Pattern.html#v:patParser"},{"display_html":"<a href=\"#v:lineSeparator\">lineSeparator</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> ()","name":"lineSeparator","module":"Elara.Parse.Indents","link":"elara/Elara-Parse-Indents.html#v:lineSeparator"},{"display_html":"<a href=\"#v:indentToken\">indentToken</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> ()","name":"indentToken","module":"Elara.Parse.Indents","link":"elara/Elara-Parse-Indents.html#v:indentToken"},{"display_html":"<a href=\"#v:dedentToken\">dedentToken</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> ()","name":"dedentToken","module":"Elara.Parse.Indents","link":"elara/Elara-Parse-Indents.html#v:dedentToken"},{"display_html":"<a href=\"#v:blockExpr\">blockExpr</a> :: <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a =&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a)","name":"blockExpr","module":"Elara.Parse.Indents","link":"elara/Elara-Parse-Indents.html#v:blockExpr"},{"display_html":"<a href=\"#v:block\">block</a> :: (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> b) =&gt; (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> a -&gt; b) -&gt; (a -&gt; b) -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> b","name":"block","module":"Elara.Parse.Indents","link":"elara/Elara-Parse-Indents.html#v:block"},{"display_html":"<a href=\"#v:exprBlock\">exprBlock</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"exprBlock","module":"Elara.Parse.Indents","link":"elara/Elara-Parse-Indents.html#v:exprBlock"},{"display_html":"<a href=\"#v:locatedExpr\">locatedExpr</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr-39-\" title=\"Elara.AST.Frontend\">FrontendExpr'</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"locatedExpr","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:locatedExpr"},{"display_html":"<a href=\"#v:exprParser\">exprParser</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"exprParser","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:exprParser"},{"display_html":"<a href=\"#v:element\">element</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"element","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:element"},{"display_html":"<a href=\"#v:statement\">statement</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"statement","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:statement"},{"display_html":"<a href=\"#v:unannotatedExpr\">unannotatedExpr</a> :: <a href=\"Prelude.html#t:Iso-39-\" title=\"Prelude\">Iso'</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr-39-\" title=\"Elara.AST.Frontend\">FrontendExpr'</a>)","name":"unannotatedExpr","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:unannotatedExpr"},{"display_html":"<a href=\"#v:binOp\">binOp</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>)","name":"binOp","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:binOp"},{"display_html":"<a href=\"#v:cons\">cons</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>)","name":"cons","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:cons"},{"display_html":"<a href=\"#v:functionCall\">functionCall</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> -&gt; <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>)","name":"functionCall","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:functionCall"},{"display_html":"<a href=\"#v:operator\">operator</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendBinaryOperator\" title=\"Elara.AST.Frontend\">FrontendBinaryOperator</a>","name":"operator","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:operator"},{"display_html":"<a href=\"#v:expression\">expression</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"expression","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:expression"},{"display_html":"<a href=\"#v:reservedWords\">reservedWords</a> :: <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>","name":"reservedWords","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:reservedWords"},{"display_html":"<a href=\"#v:parensExpr\">parensExpr</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"parensExpr","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:parensExpr"},{"display_html":"<a href=\"#v:variable\">variable</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"variable","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:variable"},{"display_html":"<a href=\"#v:constructor\">constructor</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"constructor","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:constructor"},{"display_html":"<a href=\"#v:unit\">unit</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"unit","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:unit"},{"display_html":"<a href=\"#v:int\">int</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"int","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:int"},{"display_html":"<a href=\"#v:float\">float</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"float","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:float"},{"display_html":"<a href=\"#v:string\">string</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"string","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:string"},{"display_html":"<a href=\"#v:charL\">charL</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"charL","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:charL"},{"display_html":"<a href=\"#v:match\">match</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"match","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:match"},{"display_html":"<a href=\"#v:lambda\">lambda</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"lambda","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:lambda"},{"display_html":"<a href=\"#v:ifElse\">ifElse</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"ifElse","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:ifElse"},{"display_html":"<a href=\"#v:letPreamble\">letPreamble</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>, [<a href=\"Elara-AST-Frontend.html#t:FrontendPattern\" title=\"Elara.AST.Frontend\">FrontendPattern</a>], <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>)","name":"letPreamble","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:letPreamble"},{"display_html":"<a href=\"#v:letInExpression\">letInExpression</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"letInExpression","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:letInExpression"},{"display_html":"<a href=\"#v:letStatement\">letStatement</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"letStatement","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:letStatement"},{"display_html":"<a href=\"#v:tuple\">tuple</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"tuple","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:tuple"},{"display_html":"<a href=\"#v:list\">list</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a>","name":"list","module":"Elara.Parse.Expression","link":"elara/Elara-Parse-Expression.html#v:list"},{"display_html":"<a href=\"#v:declaration\">declaration</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendDeclaration\" title=\"Elara.AST.Frontend\">FrontendDeclaration</a>","name":"declaration","module":"Elara.Parse.Declaration","link":"elara/Elara-Parse-Declaration.html#v:declaration"},{"display_html":"<a href=\"#v:defDec\">defDec</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendDeclaration\" title=\"Elara.AST.Frontend\">FrontendDeclaration</a>","name":"defDec","module":"Elara.Parse.Declaration","link":"elara/Elara-Parse-Declaration.html#v:defDec"},{"display_html":"<a href=\"#v:letDec\">letDec</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendDeclaration\" title=\"Elara.AST.Frontend\">FrontendDeclaration</a>","name":"letDec","module":"Elara.Parse.Declaration","link":"elara/Elara-Parse-Declaration.html#v:letDec"},{"display_html":"<a href=\"#v:typeDeclaration\">typeDeclaration</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendDeclaration\" title=\"Elara.AST.Frontend\">FrontendDeclaration</a>","name":"typeDeclaration","module":"Elara.Parse.Declaration","link":"elara/Elara-Parse-Declaration.html#v:typeDeclaration"},{"display_html":"<a href=\"#v:infixDecl\">infixDecl</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendDeclaration\" title=\"Elara.AST.Frontend\">FrontendDeclaration</a>","name":"infixDecl","module":"Elara.Parse.Declaration","link":"elara/Elara-Parse-Declaration.html#v:infixDecl"},{"display_html":"<a href=\"#v:adt\">adt</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendTypeDeclaration\" title=\"Elara.AST.Frontend\">FrontendTypeDeclaration</a>","name":"adt","module":"Elara.Parse.Declaration","link":"elara/Elara-Parse-Declaration.html#v:adt"},{"display_html":"<a href=\"#v:alias\">alias</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> <a href=\"Elara-AST-Frontend.html#t:FrontendTypeDeclaration\" title=\"Elara.AST.Frontend\">FrontendTypeDeclaration</a>","name":"alias","module":"Elara.Parse.Declaration","link":"elara/Elara-Parse-Declaration.html#v:alias"},{"display_html":"<a href=\"#v:module-39-\">module'</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"module'","module":"Elara.Parse.Module","link":"elara/Elara-Parse-Module.html#v:module-39-"},{"display_html":"<a href=\"#v:header\">header</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a>, <a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"header","module":"Elara.Parse.Module","link":"elara/Elara-Parse-Module.html#v:header"},{"display_html":"<a href=\"#v:exposing-39-\">exposing'</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"exposing'","module":"Elara.Parse.Module","link":"elara/Elara-Parse-Module.html#v:exposing-39-"},{"display_html":"<a href=\"#v:exposition\">exposition</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Module.html#t:Exposition\" title=\"Elara.AST.Module\">Exposition</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"exposition","module":"Elara.Parse.Module","link":"elara/Elara-Parse-Module.html#v:exposition"},{"display_html":"<a href=\"#v:import-39-\">import'</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Module.html#t:Import\" title=\"Elara.AST.Module\">Import</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"import'","module":"Elara.Parse.Module","link":"elara/Elara-Parse-Module.html#v:import-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredExpr\">DesugaredExpr</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredExpr","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredExpr"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredExpr-39-\">DesugaredExpr'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Expr-39-\" title=\"Elara.AST.Generic.Types\">Expr'</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredExpr'","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredExpr-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredPattern\">DesugaredPattern</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern\" title=\"Elara.AST.Generic.Types\">Pattern</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredPattern","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredPattern"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredPattern-39-\">DesugaredPattern'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Pattern-39-\" title=\"Elara.AST.Generic.Types\">Pattern'</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredPattern'","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredPattern-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredBinaryOperator\">DesugaredBinaryOperator</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator\" title=\"Elara.AST.Generic.Types\">BinaryOperator</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredBinaryOperator","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredBinaryOperator"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredBinaryOperator-39-\">DesugaredBinaryOperator'</a> = <a href=\"Elara-AST-Generic-Types.html#t:BinaryOperator-39-\" title=\"Elara.AST.Generic.Types\">BinaryOperator'</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredBinaryOperator'","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredBinaryOperator-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredType\">DesugaredType</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type\" title=\"Elara.AST.Generic.Types\">Type</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredType","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredType-39-\">DesugaredType'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Type-39-\" title=\"Elara.AST.Generic.Types\">Type'</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredType'","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredType-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredDeclaration\">DesugaredDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredDeclaration","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredDeclaration"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredDeclaration-39-\">DesugaredDeclaration'</a> = <a href=\"Elara-AST-Generic-Types.html#t:Declaration-39-\" title=\"Elara.AST.Generic.Types\">Declaration'</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredDeclaration'","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredDeclaration-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredDeclarationBody\">DesugaredDeclarationBody</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody\" title=\"Elara.AST.Generic.Types\">DeclarationBody</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredDeclarationBody","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredDeclarationBody"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredDeclarationBody-39-\">DesugaredDeclarationBody'</a> = <a href=\"Elara-AST-Generic-Types.html#t:DeclarationBody-39-\" title=\"Elara.AST.Generic.Types\">DeclarationBody'</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredDeclarationBody'","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredDeclarationBody-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugaredTypeDeclaration\">DesugaredTypeDeclaration</a> = <a href=\"Elara-AST-Generic-Types.html#t:TypeDeclaration\" title=\"Elara.AST.Generic.Types\">TypeDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"DesugaredTypeDeclaration","module":"Elara.AST.Desugared","link":"elara/Elara-AST-Desugared.html#t:DesugaredTypeDeclaration"},{"display_html":"<a href=\"#v:isImportedBy\">isImportedBy</a> :: <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a> -&gt; <a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isImportedBy","module":"Elara.Rename.Imports","link":"elara/Elara-Rename-Imports.html#v:isImportedBy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RenameError\">RenameError</a><ul class=\"subs\"><li>= <a href=\"#v:UnknownModule\">UnknownModule</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li><li>| <a href=\"#v:QualifiedInWrongModule\">QualifiedInWrongModule</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li><li>| <a href=\"#v:NonExistentModuleDeclaration\">NonExistentModuleDeclaration</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>)</li><li>| <a href=\"#v:UnknownTypeVariable\">UnknownTypeVariable</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a></li><li>| (<a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> name, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> name) =&gt;  <a href=\"#v:UnknownName\">UnknownName</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)) (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> name (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> name)))</li><li>| <a href=\"#v:AmbiguousVarName\">AmbiguousVarName</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>))</li><li>| <a href=\"#v:AmbiguousTypeName\">AmbiguousTypeName</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>))</li><li>| <a href=\"#v:NativeDefUnsupported\">NativeDefUnsupported</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration-39-\" title=\"Elara.AST.Desugared\">DesugaredDeclaration'</a>)</li><li>| <a href=\"#v:BlockEndsWithLet\">BlockEndsWithLet</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclarationBody\" title=\"Elara.AST.Desugared\">DesugaredDeclarationBody</a>)</li><li>| <a href=\"#v:UnknownCurrentModule\">UnknownCurrentModule</a></li></ul>","name":"RenameError AmbiguousTypeName AmbiguousVarName BlockEndsWithLet NativeDefUnsupported NonExistentModuleDeclaration QualifiedInWrongModule UnknownCurrentModule UnknownModule UnknownName UnknownTypeVariable","module":"Elara.Rename.Error","link":"elara/Elara-Rename-Error.html#t:RenameError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RenameState\">RenameState</a> = <a href=\"#v:RenameState\">RenameState</a> {<ul class=\"subs\"><li><a href=\"#v:varNames\">varNames</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>))</li><li><a href=\"#v:typeNames\">typeNames</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>))</li><li><a href=\"#v:typeVars\">typeVars</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>)</li></ul>}","name":"RenameState RenameState typeNames typeVars varNames","module":"Elara.Rename.Error","link":"elara/Elara-Rename-Error.html#t:RenameState"},{"display_html":"<a href=\"#v:primitiveRenameState\">primitiveRenameState</a> :: <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a>","name":"primitiveRenameState","module":"Elara.Prim.Rename","link":"elara/Elara-Prim-Rename.html#v:primitiveRenameState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DesugarError\">DesugarError</a><ul class=\"subs\"><li>= <a href=\"#v:DefWithoutLet\">DefWithoutLet</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredType\" title=\"Elara.AST.Desugared\">DesugaredType</a></li><li>| <a href=\"#v:InfixWithoutDeclaration\">InfixWithoutDeclaration</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)</li><li>| <a href=\"#v:DuplicateDeclaration\">DuplicateDeclaration</a> <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a> <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a></li><li>| <a href=\"#v:DuplicateAnnotations\">DuplicateAnnotations</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>) (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)</li><li>| <a href=\"#v:PartialNamesNotEqual\">PartialNamesNotEqual</a> <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a> <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a></li><li>| <a href=\"#v:TuplePatternTooShort\">TuplePatternTooShort</a> <a href=\"Elara-AST-Frontend.html#t:FrontendPattern\" title=\"Elara.AST.Frontend\">FrontendPattern</a></li></ul>","name":"DesugarError DefWithoutLet DuplicateAnnotations DuplicateDeclaration InfixWithoutDeclaration PartialNamesNotEqual TuplePatternTooShort","module":"Elara.Desugar.Error","link":"elara/Elara-Desugar-Error.html#t:DesugarError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PartialDeclaration\">PartialDeclaration</a><ul class=\"subs\"><li>= <a href=\"#v:JustDef\">JustDef</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredType\" title=\"Elara.AST.Desugared\">DesugaredType</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>))</li><li>| <a href=\"#v:JustLet\">JustLet</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>))</li><li>| <a href=\"#v:JustInfix\">JustInfix</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)</li><li>| <a href=\"#v:AllDecl\">AllDecl</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredType\" title=\"Elara.AST.Desugared\">DesugaredType</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)</li><li>| <a href=\"#v:Immediate\">Immediate</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclarationBody\" title=\"Elara.AST.Desugared\">DesugaredDeclarationBody</a></li></ul>","name":"PartialDeclaration AllDecl Immediate JustDef JustInfix JustLet","module":"Elara.Desugar.Error","link":"elara/Elara-Desugar-Error.html#t:PartialDeclaration"},{"display_html":"<a href=\"#v:partialDeclarationSourceRegion\">partialDeclarationSourceRegion</a> :: <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a> -&gt; <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>","name":"partialDeclarationSourceRegion","module":"Elara.Desugar.Error","link":"elara/Elara-Desugar-Error.html#v:partialDeclarationSourceRegion"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Rules\">Rules</a> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <span class=\"keyword\">forall</span> a (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; f es a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a","name":"Rules","module":"Rock","link":"elara/Rock.html#t:Rules"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Rock\">Rock</a> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b","name":"Rock","module":"Rock","link":"elara/Rock.html#t:Rock"},{"display_html":"<a href=\"#v:runRock\">runRock</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) a. <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> f -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> f ': es) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a","name":"runRock","module":"Rock","link":"elara/Rock.html#v:runRock"},{"display_html":"<a href=\"#v:fetch\">fetch</a> :: <span class=\"keyword\">forall</span> (xs :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) f a. (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Subset\" title=\"Effectful\">Subset</a> xs es, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> f <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>) =&gt; f xs a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a","name":"fetch","module":"Rock","link":"elara/Rock.html#v:fetch"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TimeoutQuery\">TimeoutQuery</a> (f :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TimeoutQuery\">TimeoutQuery</a> :: <span class=\"keyword\">forall</span> (f :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es1 :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) a1. f es1 a1 -&gt; <a href=\"Rock.html#t:TimeoutQuery\" title=\"Rock\">TimeoutQuery</a> f (<a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Timeout.html#t:Timeout\" title=\"Effectful.Timeout\">Timeout</a> ': es1) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a1)</li></ul>","name":"TimeoutQuery TimeoutQuery","module":"Rock","link":"elara/Rock.html#t:TimeoutQuery"},{"display_html":"<a href=\"#v:timeoutRules\">timeoutRules</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> f -&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> (<a href=\"Rock.html#t:TimeoutQuery\" title=\"Rock\">TimeoutQuery</a> f)","name":"timeoutRules","module":"Rock","link":"elara/Rock.html#v:timeoutRules"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IOQuery\">IOQuery</a> (f :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>] -&gt; k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) (a :: k) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:IOQuery\">IOQuery</a> :: <span class=\"keyword\">forall</span> {k} (f :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>] -&gt; k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es1 :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) (a :: k). f es1 a -&gt; <a href=\"Rock.html#t:IOQuery\" title=\"Rock\">IOQuery</a> f (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> ': es1) a</li></ul>","name":"IOQuery IOQuery","module":"Rock","link":"elara/Rock.html#t:IOQuery"},{"display_html":"<a href=\"#v:track\">track</a> :: <span class=\"keyword\">forall</span> f (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) k g a. (<a href=\"https://hackage.haskell.org/package/some-1.0.6/docs/Data-GADT-Compare.html#t:GEq\" title=\"Data.GADT.Compare\">GEq</a> k, <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:Some\" title=\"Data.Dependent.HashMap\">Some</a> k), <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> f <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; (<span class=\"keyword\">forall</span> (es' :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a'. f es' a' -&gt; a' -&gt; (k a', g a')) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es (a, <a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> k g)","name":"track","module":"Rock","link":"elara/Rock.html#v:track"},{"display_html":"<a href=\"#v:trackM\">trackM</a> :: <span class=\"keyword\">forall</span> f (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) k g a. (<a href=\"https://hackage.haskell.org/package/some-1.0.6/docs/Data-GADT-Compare.html#t:GEq\" title=\"Data.GADT.Compare\">GEq</a> k, <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:Some\" title=\"Data.Dependent.HashMap\">Some</a> k), <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> f <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; (<span class=\"keyword\">forall</span> (es' :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a'. f es' a' -&gt; a' -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es' (k a', g a')) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es (a, <a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> k g)","name":"trackM","module":"Rock","link":"elara/Rock.html#v:trackM"},{"display_html":"<a href=\"#v:transRock\">transRock</a> :: <span class=\"keyword\">forall</span> f g (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> f <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es =&gt; ((<span class=\"keyword\">forall</span> a' (es' :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). f es' a' -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es' a') -&gt; <span class=\"keyword\">forall</span> a' (es' :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). g es' a' -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es' a') -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> g ': es) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a","name":"transRock","module":"Rock","link":"elara/Rock.html#v:transRock"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:HideEffects\">HideEffects</a> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:HideEffects\">HideEffects</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (b :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. f b a -&gt; <a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f a</li></ul>","name":"HideEffects HideEffects","module":"Rock","link":"elara/Rock.html#t:HideEffects"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Memoise\">Memoise</a> (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:GetStartedVar\">GetStartedVar</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/some-1.0.6/docs/Data-GADT-Compare.html#t:GEq\" title=\"Data.GADT.Compare\">GEq</a> (f es), <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a1. <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> (f es a1)) =&gt; <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> a (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-MVar-Strict.html#t:MVar-39-\" title=\"Effectful.Concurrent.MVar.Strict\">MVar'</a>)</li><li><a href=\"#v:ModifyStartedVar\">ModifyStartedVar</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b. (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-MVar-Strict.html#t:MVar-39-\" title=\"Effectful.Concurrent.MVar.Strict\">MVar'</a> -&gt; (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-MVar-Strict.html#t:MVar-39-\" title=\"Effectful.Concurrent.MVar.Strict\">MVar'</a>, b)) -&gt; <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> a b</li></ul>","name":"Memoise GetStartedVar ModifyStartedVar","module":"Rock.MemoE","link":"elara/Rock-MemoE.html#t:Memoise"},{"display_html":"<a href=\"#v:modifyStartedVar\">modifyStartedVar</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-MVar-Strict.html#t:MVar-39-\" title=\"Effectful.Concurrent.MVar.Strict\">MVar'</a> -&gt; (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-MVar-Strict.html#t:MVar-39-\" title=\"Effectful.Concurrent.MVar.Strict\">MVar'</a>, b)) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es b","name":"modifyStartedVar","module":"Rock.MemoE","link":"elara/Rock-MemoE.html#v:modifyStartedVar"},{"display_html":"<a href=\"#v:getStartedVar\">getStartedVar</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <span class=\"keyword\">forall</span> (es1 :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/some-1.0.6/docs/Data-GADT-Compare.html#t:GEq\" title=\"Data.GADT.Compare\">GEq</a> (f es1), <span class=\"keyword\">forall</span> (es1 :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> (f es1 a)) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-MVar-Strict.html#t:MVar-39-\" title=\"Effectful.Concurrent.MVar.Strict\">MVar'</a>)","name":"getStartedVar","module":"Rock.MemoE","link":"elara/Rock-MemoE.html#v:getStartedVar"},{"display_html":"<a href=\"#v:memoiseAsIO\">memoiseAsIO</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es =&gt; (<span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-MVar-Strict.html#t:MVar-39-\" title=\"Effectful.Concurrent.MVar.Strict\">MVar'</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> ': es) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a","name":"memoiseAsIO","module":"Rock.MemoE","link":"elara/Rock-MemoE.html#v:memoiseAsIO"},{"display_html":"<a href=\"#v:memoiseRunIO\">memoiseRunIO</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) b. (<span class=\"keyword\">forall</span> (es1 :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/some-1.0.6/docs/Data-GADT-Compare.html#t:GEq\" title=\"Data.GADT.Compare\">GEq</a> (f es1), <span class=\"keyword\">forall</span> (es1 :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> (f es1 a), <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> ': es) b -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es b","name":"memoiseRunIO","module":"Rock.MemoE","link":"elara/Rock-MemoE.html#v:memoiseRunIO"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:HasIOE\">HasIOE</a> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withIOE\">withIOE</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. f es a -&gt; (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a</li></ul>","name":"HasIOE withIOE","module":"Rock.Memo","link":"elara/Rock-Memo.html#t:HasIOE"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:HasMemoiseE\">HasMemoiseE</a> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:withMemoiseE\">withMemoiseE</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. f es a -&gt; ((<a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a</li></ul>","name":"HasMemoiseE withMemoiseE","module":"Rock.Memo","link":"elara/Rock-Memo.html#t:HasMemoiseE"},{"display_html":"<a href=\"#v:memoise\">memoise</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/some-1.0.6/docs/Data-GADT-Compare.html#t:GEq\" title=\"Data.GADT.Compare\">GEq</a> (f es), <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> (f es a), <a href=\"Rock-Memo.html#t:HasMemoiseE\" title=\"Rock.Memo\">HasMemoiseE</a> f, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>) =&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> f -&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> f","name":"memoise","module":"Rock.Memo","link":"elara/Rock-Memo.html#v:memoise"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MemoQuery\">MemoQuery</a> (f :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>] -&gt; k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) (a :: k) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:MemoQuery\">MemoQuery</a> :: <span class=\"keyword\">forall</span> {k} (f :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>] -&gt; k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (es1 :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) (a :: k). f es1 a -&gt; <a href=\"Rock-Memo.html#t:MemoQuery\" title=\"Rock.Memo\">MemoQuery</a> f (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> ': es1) a</li></ul>","name":"MemoQuery MemoQuery","module":"Rock.Memo","link":"elara/Rock-Memo.html#t:MemoQuery"},{"display_html":"<a href=\"#v:withoutMemoisation\">withoutMemoisation</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> f -&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> (<a href=\"Rock-Memo.html#t:MemoQuery\" title=\"Rock.Memo\">MemoQuery</a> f)","name":"withoutMemoisation","module":"Rock.Memo","link":"elara/Rock-Memo.html#v:withoutMemoisation"},{"display_html":"<a href=\"#v:memoiseExplicit\">memoiseExplicit</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/some-1.0.6/docs/Data-GADT-Compare.html#t:GEq\" title=\"Data.GADT.Compare\">GEq</a> (f es), <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> (f es a)) =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a>) -&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> f -&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> (<a href=\"Rock-Memo.html#t:MemoQuery\" title=\"Rock.Memo\">MemoQuery</a> f)","name":"memoiseExplicit","module":"Rock.Memo","link":"elara/Rock-Memo.html#v:memoiseExplicit"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Cyclic\">Cyclic</a> (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"#v:Cyclic\">Cyclic</a> (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:Some\" title=\"Data.Dependent.HashMap\">Some</a> f)","name":"Cyclic Cyclic","module":"Rock.Memo","link":"elara/Rock-Memo.html#t:Cyclic"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MemoEntry\">MemoEntry</a> a<ul class=\"subs\"><li>= <a href=\"#v:Started\">Started</a> !<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> !(<a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> a)) !(<a href=\"Prelude.html#t:MVar\" title=\"Prelude\">MVar</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> [<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a>]))</li><li>| <a href=\"#v:Done\">Done</a> !a</li></ul>","name":"MemoEntry Done Started","module":"Rock.Memo","link":"elara/Rock-Memo.html#t:MemoEntry"},{"display_html":"<a href=\"#v:memoiseWithCycleDetection\">memoiseWithCycleDetection</a> :: <span class=\"keyword\">forall</span> (f :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Prelude.html#t:Typeable\" title=\"Prelude\">Typeable</a> f, <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> (f es a), <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/some-1.0.6/docs/Data-GADT-Compare.html#t:GEq\" title=\"Data.GADT.Compare\">GEq</a> (f es), <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> (f es a)) =&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> (<a href=\"https://hackage.haskell.org/package/dependent-hashmap-0.1.0.1/docs/Data-Dependent-HashMap.html#t:DHashMap\" title=\"Data.Dependent.HashMap\">DHashMap</a> (<a href=\"Rock.html#t:HideEffects\" title=\"Rock\">HideEffects</a> f) <a href=\"Rock-Memo.html#t:MemoEntry\" title=\"Rock.Memo\">MemoEntry</a>) -&gt; <a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> (<a href=\"Prelude.html#t:HashMap\" title=\"Prelude\">HashMap</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a> <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Control-Concurrent.html#t:ThreadId\" title=\"Control.Concurrent\">ThreadId</a>) -&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> f -&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> (<a href=\"Rock-Memo.html#t:MemoQuery\" title=\"Rock.Memo\">MemoQuery</a> f)","name":"memoiseWithCycleDetection","module":"Rock.Memo","link":"elara/Rock-Memo.html#v:memoiseWithCycleDetection"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MinimumQueryEffects\">MinimumQueryEffects</a> = <a href=\"Elara-Query-Effects.html#t:ConsMinimumQueryEffects\" title=\"Elara.Query.Effects\">ConsMinimumQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])","name":"MinimumQueryEffects","module":"Elara.Query.Effects","link":"elara/Elara-Query-Effects.html#t:MinimumQueryEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ConsMinimumQueryEffects\">ConsMinimumQueryEffects</a> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> ': (<a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> ': es)","name":"ConsMinimumQueryEffects","module":"Elara.Query.Effects","link":"elara/Elara-Query-Effects.html#t:ConsMinimumQueryEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StandardQueryEffects\">StandardQueryEffects</a> = <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])","name":"StandardQueryEffects","module":"Elara.Query.Effects","link":"elara/Elara-Query-Effects.html#t:StandardQueryEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ConsQueryEffects\">ConsQueryEffects</a> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> ': (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> ': (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) ': (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> ': (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> ': <a href=\"Elara-Query-Effects.html#t:ConsMinimumQueryEffects\" title=\"Elara.Query.Effects\">ConsMinimumQueryEffects</a> es))))","name":"ConsQueryEffects","module":"Elara.Query.Effects","link":"elara/Elara-Query-Effects.html#t:ConsQueryEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:QueryEffects\">QueryEffects</a> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es)","name":"QueryEffects","module":"Elara.Query.Effects","link":"elara/Elara-Query-Effects.html#t:QueryEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WithRock\">WithRock</a> (effects :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': effects","name":"WithRock","module":"Elara.Query","link":"elara/Elara-Query.html#t:WithRock"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Query\">Query</a> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:GetCompilerSettings\">GetCompilerSettings</a> :: <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:MinimumQueryEffects\" title=\"Elara.Query.Effects\">MinimumQueryEffects</a>) <a href=\"Elara-Settings.html#t:CompilerSettings\" title=\"Elara.Settings\">CompilerSettings</a></li><li><a href=\"#v:InputFiles\">InputFiles</a> :: <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsMinimumQueryEffects\" title=\"Elara.Query.Effects\">ConsMinimumQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a>]) (<a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>)</li><li><a href=\"#v:GetFileContents\">GetFileContents</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsMinimumQueryEffects\" title=\"Elara.Query.Effects\">ConsMinimumQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a>, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>)]) <a href=\"Elara-ReadFile.html#t:FileContents\" title=\"Elara.ReadFile\">FileContents</a></li><li><a href=\"#v:ModulePath\">ModulePath</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsMinimumQueryEffects\" title=\"Elara.Query.Effects\">ConsMinimumQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a>]) [<a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a>]</li><li><a href=\"#v:LexedFile\">LexedFile</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Lexer-Utils.html#t:LexerError\" title=\"Elara.Lexer.Utils\">LexerError</a>]) [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]</li><li><a href=\"#v:ParsedFile\">ParsedFile</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-Parse-Error.html#t:WParseErrorBundle\" title=\"Elara.Parse.Error\">WParseErrorBundle</a> <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a> <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a>)]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)</li><li><a href=\"#v:ParsedModule\">ParsedModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-Parse-Error.html#t:WParseErrorBundle\" title=\"Elara.Parse.Error\">WParseErrorBundle</a> <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a> <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a>)]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)</li><li><a href=\"#v:DesugaredModule\">DesugaredModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Desugar-Error.html#t:DesugarError\" title=\"Elara.Desugar.Error\">DesugarError</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)</li><li><a href=\"#v:RenamedModule\">RenamedModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>)</li><li><a href=\"#v:ShuntedModule\">ShuntedModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Shunt-Error.html#t:ShuntError\" title=\"Elara.Shunt.Error\">ShuntError</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>)</li><li><a href=\"#v:ShuntedDeclarationByName\">ShuntedDeclarationByName</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Shunt-Error.html#t:ShuntError\" title=\"Elara.Shunt.Error\">ShuntError</a>]) (<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>)</li><li><a href=\"#v:GetOpInfo\">GetOpInfo</a> :: <a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRef\" title=\"Elara.AST.VarRef\">IgnoreLocVarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Shunt-Error.html#t:ShuntWarning\" title=\"Elara.Shunt.Error\">ShuntWarning</a>)]) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>)</li><li><a href=\"#v:GetOpTableIn\">GetOpTableIn</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRef\" title=\"Elara.AST.VarRef\">IgnoreLocVarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>)</li><li><a href=\"#v:FreeVarsOf\">FreeVarsOf</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>))</li><li><a href=\"#v:ReachableSubgraphOf\">ReachableSubgraphOf</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) <a href=\"Elara-SCC-Type.html#t:ReachableSubgraph\" title=\"Elara.SCC.Type\">ReachableSubgraph</a></li><li><a href=\"#v:GetSCCsOf\">GetSCCsOf</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) [<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)]</li><li><a href=\"#v:SCCKeyOf\">SCCKeyOf</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) <a href=\"Elara-SCC-Type.html#t:SCCKey\" title=\"Elara.SCC.Type\">SCCKey</a></li><li><a href=\"#v:TypeCheckedModule\">TypeCheckedModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>)</li><li><a href=\"#v:TypeCheckedExpr\">TypeCheckedExpr</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Elara-AST-Generic-Types.html#t:Expr\" title=\"Elara.AST.Generic.Types\">Expr</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>)</li><li><a href=\"#v:TypeOf\">TypeOf</a> :: <span class=\"keyword\">forall</span> loc. loc <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> =&gt; <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc)</li><li><a href=\"#v:InferSCC\">InferSCC</a> :: <a href=\"Elara-SCC-Type.html#t:SCCKey\" title=\"Elara.SCC.Type\">SCCKey</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) (<a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>))</li><li><a href=\"#v:KindOf\">KindOf</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>)</li><li><a href=\"#v:GetCoreModule\">GetCoreModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>)</li><li><a href=\"#v:GetTyCon\">GetTyCon</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>)</li><li><a href=\"#v:GetDataCon\">GetDataCon</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>)</li><li><a href=\"#v:GetOptimisedCoreModule\">GetOptimisedCoreModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>)</li><li><a href=\"#v:GetANFCoreModule\">GetANFCoreModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-ANF.html#t:TopLevelBind\" title=\"Elara.Core.ANF\">TopLevelBind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>))</li><li><a href=\"#v:GetClosureLiftedModule\">GetClosureLiftedModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-ANF.html#t:TopLevelBind\" title=\"Elara.Core.ANF\">TopLevelBind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>))</li><li><a href=\"#v:GetFinalisedCoreModule\">GetFinalisedCoreModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> ('[] :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>])) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>)</li></ul>","name":"Query DesugaredModule FreeVarsOf GetANFCoreModule GetClosureLiftedModule GetCompilerSettings GetCoreModule GetDataCon GetFileContents GetFinalisedCoreModule GetOpInfo GetOpTableIn GetOptimisedCoreModule GetSCCsOf GetTyCon InferSCC InputFiles KindOf LexedFile ModulePath ParsedFile ParsedModule ReachableSubgraphOf RenamedModule SCCKeyOf ShuntedDeclarationByName ShuntedModule TypeCheckedExpr TypeCheckedModule TypeOf","module":"Elara.Query","link":"elara/Elara-Query.html#t:Query"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InferEffectsCons\">InferEffectsCons</a> loc (xs :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) = <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc) ': (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc) ': (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc) ': (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-Environment.html#t:InferError\" title=\"Elara.TypeInfer.Environment\">InferError</a> loc) ': (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> ': (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> ': (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) ': (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': xs)))))))","name":"InferEffectsCons","module":"Elara.TypeInfer.Monad","link":"elara/Elara-TypeInfer-Monad.html#t:InferEffectsCons"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Infer\">Infer</a> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-Environment.html#t:InferError\" title=\"Elara.TypeInfer.Environment\">InferError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r)","name":"Infer","module":"Elara.TypeInfer.Monad","link":"elara/Elara-TypeInfer-Monad.html#t:Infer"},{"display_html":"<a href=\"#v:generateConstraints\">generateConstraints</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-TypeInfer-Monad.html#t:Infer\" title=\"Elara.TypeInfer.Monad\">Infer</a> loc r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, loc <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedExpr\" title=\"Elara.AST.Shunted\">ShuntedExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a>, <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)","name":"generateConstraints","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:generateConstraints"},{"display_html":"<a href=\"#v:lookupType\">lookupType</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) loc. (<a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, loc <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc)","name":"lookupType","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:lookupType"},{"display_html":"<a href=\"#v:generateConstraints-39-\">generateConstraints'</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-TypeInfer-Monad.html#t:Infer\" title=\"Elara.TypeInfer.Monad\">Infer</a> loc r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, loc <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedExpr\" title=\"Elara.AST.Shunted\">ShuntedExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Typed.html#t:TypedExpr-39-\" title=\"Elara.AST.Typed\">TypedExpr'</a>, <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)","name":"generateConstraints'","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:generateConstraints-39-"},{"display_html":"<a href=\"#v:generatePatternConstraints\">generatePatternConstraints</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-TypeInfer-Monad.html#t:Infer\" title=\"Elara.TypeInfer.Monad\">Infer</a> loc r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, loc <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedPattern\" title=\"Elara.AST.Shunted\">ShuntedPattern</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Typed.html#t:TypedPattern\" title=\"Elara.AST.Typed\">TypedPattern</a>, <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)","name":"generatePatternConstraints","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:generatePatternConstraints"},{"display_html":"<a href=\"#v:generatePatternConstraints-39-\">generatePatternConstraints'</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-TypeInfer-Monad.html#t:Infer\" title=\"Elara.TypeInfer.Monad\">Infer</a> loc r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, loc <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedPattern-39-\" title=\"Elara.AST.Shunted\">ShuntedPattern'</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Typed.html#t:TypedPattern-39-\" title=\"Elara.AST.Typed\">TypedPattern'</a>, <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)","name":"generatePatternConstraints'","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:generatePatternConstraints-39-"},{"display_html":"<a href=\"#v:instantiate\">instantiate</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) loc. (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc), <a href=\"Elara-TypeInfer-Monad.html#t:Infer\" title=\"Elara.TypeInfer.Monad\">Infer</a> loc r) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc, [<a href=\"Elara-TypeInfer-Type.html#t:TypeVariable\" title=\"Elara.TypeInfer.Type\">TypeVariable</a>])","name":"instantiate","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:instantiate"},{"display_html":"<a href=\"#v:solveConstraint\">solveConstraint</a> :: <span class=\"keyword\">forall</span> a (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> a) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> a, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> a, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> a), <a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> a) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> a -&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> a, <a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> a)","name":"solveConstraint","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:solveConstraint"},{"display_html":"<a href=\"#v:simplifyConstraint\">simplifyConstraint</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc), <a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> loc) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc -&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc, <a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"simplifyConstraint","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:simplifyConstraint"},{"display_html":"<a href=\"#v:reduceGiven\">reduceGiven</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"reduceGiven","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:reduceGiven"},{"display_html":"<a href=\"#v:solve\">solve</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc), <a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> loc, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc, <a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"solve","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:solve"},{"display_html":"<a href=\"#v:unifyGiven\">unifyGiven</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc) =&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc) -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"unifyGiven","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:unifyGiven"},{"display_html":"<a href=\"#v:unifyGivenMany\">unifyGivenMany</a> :: <span class=\"keyword\">forall</span> {loc} {r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]}. (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc) =&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc) -&gt; [<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc] -&gt; [<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc] -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"unifyGivenMany","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:unifyGivenMany"},{"display_html":"<a href=\"#v:unify\">unify</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc), <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc, ?constraint :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc), <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc), <a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> loc) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc, <a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"unify","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:unify"},{"display_html":"<a href=\"#v:bindGiven\">bindGiven</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) loc. (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:TypeVariable\" title=\"Elara.TypeInfer.Type\">TypeVariable</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"bindGiven","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:bindGiven"},{"display_html":"<a href=\"#v:unifyVar\">unifyVar</a> :: <span class=\"keyword\">forall</span> loc (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc) =&gt; <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a> -&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc, <a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"unifyVar","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:unifyVar"},{"display_html":"<a href=\"#v:unifyMany\">unifyMany</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) loc. (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> loc, <a href=\"Prelude.html#t:Semigroup\" title=\"Prelude\">Semigroup</a> loc, <a href=\"Prelude.html#t:Monoid\" title=\"Prelude\">Monoid</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc), ?constraint :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc), <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; [<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc] -&gt; [<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc] -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc, <a href=\"Elara-TypeInfer-Type.html#t:Substitution\" title=\"Elara.TypeInfer.Type\">Substitution</a> loc)","name":"unifyMany","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#v:unifyMany"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnifyError\">UnifyError</a> loc<ul class=\"subs\"><li>= <a href=\"#v:OccursCheckFailed\">OccursCheckFailed</a> <a href=\"Elara-TypeInfer-Type.html#t:TypeVariable\" title=\"Elara.TypeInfer.Type\">TypeVariable</a> (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)</li><li>| <a href=\"#v:ScalarMismatch\">ScalarMismatch</a> (loc, <a href=\"Elara-TypeInfer-Type.html#t:Scalar\" title=\"Elara.TypeInfer.Type\">Scalar</a>) (loc, <a href=\"Elara-TypeInfer-Type.html#t:Scalar\" title=\"Elara.TypeInfer.Type\">Scalar</a>)</li><li>| <a href=\"#v:TypeConstructorMismatch\">TypeConstructorMismatch</a> (loc, <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) (loc, <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)</li><li>| <a href=\"#v:ArityMismatch\">ArityMismatch</a></li><li>| <a href=\"#v:UnificationFailed\">UnificationFailed</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc)) (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc, <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> loc)</li><li>| <a href=\"#v:UnifyMismatch\">UnifyMismatch</a></li><li>| <a href=\"#v:UnresolvedConstraint\">UnresolvedConstraint</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) (<a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc)</li><li>| <a href=\"#v:PatternConstructorArityMismatch\">PatternConstructorArityMismatch</a> <a href=\"Elara-TypeInfer-Type.html#t:DataCon\" title=\"Elara.TypeInfer.Type\">DataCon</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> <a href=\"Prelude.html#t:Int\" title=\"Prelude\">Int</a> loc</li></ul>","name":"UnifyError ArityMismatch OccursCheckFailed PatternConstructorArityMismatch ScalarMismatch TypeConstructorMismatch UnificationFailed UnifyMismatch UnresolvedConstraint","module":"Elara.TypeInfer.ConstraintGeneration","link":"elara/Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntEffects\">ShuntEffects</a> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Shunt-Error.html#t:ShuntError\" title=\"Elara.Shunt.Error\">ShuntError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Shunt-Error.html#t:ShuntWarning\" title=\"Elara.Shunt.Error\">ShuntWarning</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es)","name":"ShuntEffects","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#t:ShuntEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:OpLookup\">OpLookup</a> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = <a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRef\" title=\"Elara.AST.VarRef\">IgnoreLocVarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>)","name":"OpLookup","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#t:OpLookup"},{"display_html":"<a href=\"#v:lookupFromOpTable\">lookupFromOpTable</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Shunt-Operator.html#t:OpTable\" title=\"Elara.Shunt.Operator\">OpTable</a> -&gt; <a href=\"Elara-Shunt.html#t:OpLookup\" title=\"Elara.Shunt\">OpLookup</a> es","name":"lookupFromOpTable","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:lookupFromOpTable"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:InExpr\">InExpr</a> :: <a href=\"Elara-AST-Renamed.html#t:RenamedExpr-39-\" title=\"Elara.AST.Renamed\">RenamedExpr'</a> -&gt; <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a>","name":"InExpr","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:InExpr"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:InExpr-39-\">InExpr'</a> :: <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"Elara-AST-Renamed.html#t:RenamedExpr-39-\" title=\"Elara.AST.Renamed\">RenamedExpr'</a> -&gt; <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a>","name":"InExpr'","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:InExpr-39-"},{"display_html":"<a href=\"#v:runGetShuntedModuleQuery\">runGetShuntedModuleQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Shunt-Error.html#t:ShuntError\" title=\"Elara.Shunt.Error\">ShuntError</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Shunt-Error.html#t:ShuntWarning\" title=\"Elara.Shunt.Error\">ShuntWarning</a>), <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>)","name":"runGetShuntedModuleQuery","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:runGetShuntedModuleQuery"},{"display_html":"<a href=\"#v:runShuntedDeclarationByNameQuery\">runShuntedDeclarationByNameQuery</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>)","name":"runShuntedDeclarationByNameQuery","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:runShuntedDeclarationByNameQuery"},{"display_html":"<a href=\"#v:runGetOpInfoQuery\">runGetOpInfoQuery</a> :: <a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRef\" title=\"Elara.AST.VarRef\">IgnoreLocVarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Shunt-Error.html#t:ShuntWarning\" title=\"Elara.Shunt.Error\">ShuntWarning</a>), <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>)","name":"runGetOpInfoQuery","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:runGetOpInfoQuery"},{"display_html":"<a href=\"#v:runGetOpTableInQuery\">runGetOpTableInQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) <a href=\"Elara-Shunt-Operator.html#t:OpTable\" title=\"Elara.Shunt.Operator\">OpTable</a>","name":"runGetOpTableInQuery","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:runGetOpTableInQuery"},{"display_html":"<a href=\"#v:createOpTable\">createOpTable</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es <a href=\"Elara-Shunt-Operator.html#t:OpTable\" title=\"Elara.Shunt.Operator\">OpTable</a>","name":"createOpTable","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:createOpTable"},{"display_html":"<a href=\"#v:addDeclsToOpTable-39-\">addDeclsToOpTable'</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) {c1 :: <a href=\"Elara-AST-VarRef.html#t:VarRefKind\" title=\"Elara.AST.VarRef\">VarRefKind</a>} {n1} {c2 :: <a href=\"Elara-AST-VarRef.html#t:VarRefKind\" title=\"Elara.AST.VarRef\">VarRefKind</a>} {n2}. (<a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c1 (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> n1) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:IgnoreLocation\" title=\"Elara.AST.Region\">IgnoreLocation</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>), <a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c2 (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> n2) <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:IgnoreLocation\" title=\"Elara.AST.Region\">IgnoreLocation</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>), <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef-39-\" title=\"Elara.AST.VarRef\">VarRef'</a> c1 n1) <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef-39-\" title=\"Elara.AST.VarRef\">VarRef'</a> c2 n2) <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> (<a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c1 (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> n1)), <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> (<a href=\"Elara-AST-VarRef.html#t:VarRefImpl\" title=\"Elara.AST.VarRef\">VarRefImpl</a> c2 (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> n2))) =&gt; <a href=\"Elara-AST-Generic-Types.html#t:Declaration\" title=\"Elara.AST.Generic.Types\">Declaration</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"addDeclsToOpTable'","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:addDeclsToOpTable-39-"},{"display_html":"<a href=\"#v:opNameOf\">opNameOf</a> :: <a href=\"Elara-AST-Renamed.html#t:RenamedBinaryOperator\" title=\"Elara.AST.Renamed\">RenamedBinaryOperator</a> -&gt; <a href=\"Elara-AST-VarRef.html#t:IgnoreLocVarRef\" title=\"Elara.AST.VarRef\">IgnoreLocVarRef</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>","name":"opNameOf","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:opNameOf"},{"display_html":"<a href=\"#v:fixOperators\">fixOperators</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Shunt.html#t:ShuntPipelineEffects\" title=\"Elara.Shunt\">ShuntPipelineEffects</a> r, ?lookup :: <a href=\"Elara-Shunt.html#t:OpLookup\" title=\"Elara.Shunt\">OpLookup</a> r) =&gt; <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a>","name":"fixOperators","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:fixOperators"},{"display_html":"<a href=\"#v:opInfo\">opInfo</a> :: <a href=\"Elara-AST-Renamed.html#t:RenamedBinaryOperator\" title=\"Elara.AST.Renamed\">RenamedBinaryOperator</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Shunt-Error.html#t:ShuntWarning\" title=\"Elara.Shunt.Error\">ShuntWarning</a>), <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>)","name":"opInfo","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:opInfo"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShuntPipelineEffects\">ShuntPipelineEffects</a> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> es, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Shunt-Error.html#t:ShuntError\" title=\"Elara.Shunt.Error\">ShuntError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Shunt-Error.html#t:ShuntWarning\" title=\"Elara.Shunt.Error\">ShuntWarning</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es)","name":"ShuntPipelineEffects","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#t:ShuntPipelineEffects"},{"display_html":"<a href=\"#v:infixDeclToOpInfo\">infixDeclToOpInfo</a> :: <a href=\"Elara-AST-Generic-Types.html#t:InfixDeclaration\" title=\"Elara.AST.Generic.Types\">InfixDeclaration</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a> -&gt; <a href=\"Elara-Shunt-Operator.html#t:OpInfo\" title=\"Elara.Shunt.Operator\">OpInfo</a>","name":"infixDeclToOpInfo","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:infixDeclToOpInfo"},{"display_html":"<a href=\"#v:shuntWith\">shuntWith</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Shunt.html#t:ShuntPipelineEffects\" title=\"Elara.Shunt\">ShuntPipelineEffects</a> es =&gt; <a href=\"Elara-Shunt.html#t:OpLookup\" title=\"Elara.Shunt\">OpLookup</a> es -&gt; <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a>)","name":"shuntWith","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:shuntWith"},{"display_html":"<a href=\"#v:shuntWithDeclaration\">shuntWithDeclaration</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Shunt.html#t:ShuntPipelineEffects\" title=\"Elara.Shunt\">ShuntPipelineEffects</a> es =&gt; <a href=\"Elara-Shunt.html#t:OpLookup\" title=\"Elara.Shunt\">OpLookup</a> es -&gt; <a href=\"Elara-AST-Renamed.html#t:RenamedDeclaration\" title=\"Elara.AST.Renamed\">RenamedDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es <a href=\"Elara-AST-Shunted.html#t:ShuntedDeclaration\" title=\"Elara.AST.Shunted\">ShuntedDeclaration</a>","name":"shuntWithDeclaration","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:shuntWithDeclaration"},{"display_html":"<a href=\"#v:shuntDeclarationBody\">shuntDeclarationBody</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Shunt.html#t:ShuntPipelineEffects\" title=\"Elara.Shunt\">ShuntPipelineEffects</a> es =&gt; <a href=\"Elara-Shunt.html#t:OpLookup\" title=\"Elara.Shunt\">OpLookup</a> es -&gt; <a href=\"Elara-AST-Renamed.html#t:RenamedDeclarationBody\" title=\"Elara.AST.Renamed\">RenamedDeclarationBody</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es <a href=\"Elara-AST-Shunted.html#t:ShuntedDeclarationBody\" title=\"Elara.AST.Shunted\">ShuntedDeclarationBody</a>","name":"shuntDeclarationBody","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:shuntDeclarationBody"},{"display_html":"<a href=\"#v:fixExpr\">fixExpr</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Shunt.html#t:ShuntPipelineEffects\" title=\"Elara.Shunt\">ShuntPipelineEffects</a> r, ?lookup :: <a href=\"Elara-Shunt.html#t:OpLookup\" title=\"Elara.Shunt\">OpLookup</a> r) =&gt; <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Shunted.html#t:ShuntedExpr\" title=\"Elara.AST.Shunted\">ShuntedExpr</a>","name":"fixExpr","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:fixExpr"},{"display_html":"<a href=\"#v:shuntExpr\">shuntExpr</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Shunt.html#t:ShuntPipelineEffects\" title=\"Elara.Shunt\">ShuntPipelineEffects</a> r, ?lookup :: <a href=\"Elara-Shunt.html#t:OpLookup\" title=\"Elara.Shunt\">OpLookup</a> r) =&gt; <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Shunted.html#t:ShuntedExpr\" title=\"Elara.AST.Shunted\">ShuntedExpr</a>","name":"shuntExpr","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:shuntExpr"},{"display_html":"<a href=\"#v:shuntPattern\">shuntPattern</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-AST-Renamed.html#t:RenamedPattern\" title=\"Elara.AST.Renamed\">RenamedPattern</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Shunted.html#t:ShuntedPattern\" title=\"Elara.AST.Shunted\">ShuntedPattern</a>","name":"shuntPattern","module":"Elara.Shunt","link":"elara/Elara-Shunt.html#v:shuntPattern"},{"display_html":"<a href=\"#v:runFreeVarsQuery\">runFreeVarsQuery</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>))","name":"runFreeVarsQuery","module":"Elara.SCC","link":"elara/Elara-SCC.html#v:runFreeVarsQuery"},{"display_html":"<a href=\"#v:runReachableSubgraphQuery\">runReachableSubgraphQuery</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) <a href=\"Elara-SCC-Type.html#t:ReachableSubgraph\" title=\"Elara.SCC.Type\">ReachableSubgraph</a>","name":"runReachableSubgraphQuery","module":"Elara.SCC","link":"elara/Elara-SCC.html#v:runReachableSubgraphQuery"},{"display_html":"<a href=\"#v:buildSCCs\">buildSCCs</a> :: <a href=\"Elara-SCC-Type.html#t:ReachableSubgraph\" title=\"Elara.SCC.Type\">ReachableSubgraph</a> -&gt; [<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)]","name":"buildSCCs","module":"Elara.SCC","link":"elara/Elara-SCC.html#v:buildSCCs"},{"display_html":"<a href=\"#v:sccContainingRoot\">sccContainingRoot</a> :: <a href=\"Elara-SCC-Type.html#t:ReachableSubgraph\" title=\"Elara.SCC.Type\">ReachableSubgraph</a> -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)","name":"sccContainingRoot","module":"Elara.SCC","link":"elara/Elara-SCC.html#v:sccContainingRoot"},{"display_html":"<a href=\"#v:concatHashSetOf\">concatHashSetOf</a> :: <span class=\"keyword\">forall</span> k (is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>) a1 a2 b. (<a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a>, <a href=\"Prelude.html#t:Hashable\" title=\"Prelude\">Hashable</a> b) =&gt; <a href=\"Prelude.html#t:Optic-39-\" title=\"Prelude\">Optic'</a> k is a1 a2 -&gt; (a2 -&gt; <a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> b) -&gt; a1 -&gt; <a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> b","name":"concatHashSetOf","module":"Elara.SCC","link":"elara/Elara-SCC.html#v:concatHashSetOf"},{"display_html":"<a href=\"#v:valueDependencies\">valueDependencies</a> :: <a href=\"Elara-AST-Shunted.html#t:ShuntedExpr\" title=\"Elara.AST.Shunted\">ShuntedExpr</a> -&gt; <a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)","name":"valueDependencies","module":"Elara.SCC","link":"elara/Elara-SCC.html#v:valueDependencies"},{"display_html":"<a href=\"#v:patternDependencies\">patternDependencies</a> :: <a href=\"Elara-AST-Shunted.html#t:ShuntedExpr\" title=\"Elara.AST.Shunted\">ShuntedExpr</a> -&gt; <a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)","name":"patternDependencies","module":"Elara.SCC","link":"elara/Elara-SCC.html#v:patternDependencies"},{"display_html":"<a href=\"#v:typeDependencies\">typeDependencies</a> :: <a href=\"Elara-AST-Shunted.html#t:ShuntedType\" title=\"Elara.AST.Shunted\">ShuntedType</a> -&gt; <a href=\"Prelude.html#t:HashSet\" title=\"Prelude\">HashSet</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>)","name":"typeDependencies","module":"Elara.SCC","link":"elara/Elara-SCC.html#v:typeDependencies"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RenamePipelineEffects\">RenamePipelineEffects</a> = '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Elara-Data-TopologicalGraph.html#t:TopologicalGraph\" title=\"Elara.Data.TopologicalGraph\">TopologicalGraph</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)), <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a>]","name":"RenamePipelineEffects","module":"Elara.Rename","link":"elara/Elara-Rename.html#t:RenamePipelineEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Rename\">Rename</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r)","name":"Rename","module":"Elara.Rename","link":"elara/Elara-Rename.html#t:Rename"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InnerRename\">InnerRename</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r)","name":"InnerRename","module":"Elara.Rename","link":"elara/Elara-Rename.html#t:InnerRename"},{"display_html":"<a href=\"#v:getRenamedModule\">getRenamedModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a>, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>)","name":"getRenamedModule","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:getRenamedModule"},{"display_html":"<a href=\"#v:qualifyIn\">qualifyIn</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) name. <a href=\"Elara-Rename.html#t:Rename\" title=\"Elara.Rename\">Rename</a> r =&gt; <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> name -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> name)","name":"qualifyIn","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:qualifyIn"},{"display_html":"<a href=\"#v:qualifyTypeName\">qualifyTypeName</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>))","name":"qualifyTypeName","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:qualifyTypeName"},{"display_html":"<a href=\"#v:askCurrentModule\">askCurrentModule</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)","name":"askCurrentModule","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:askCurrentModule"},{"display_html":"<a href=\"#v:lookupGenericName\">lookupGenericName</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) name. (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Ord\" title=\"Prelude\">Ord</a> name, <a href=\"Elara-AST-Name.html#t:ToName\" title=\"Elara.AST.Name\">ToName</a> name, <a href=\"Prelude.html#t:Show\" title=\"Prelude\">Show</a> name, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Prelude.html#t:Lens-39-\" title=\"Prelude\">Lens'</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a> (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> name (<a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> name))) -&gt; (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> name) -&gt; <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a>) -&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> name) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> name))","name":"lookupGenericName","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:lookupGenericName"},{"display_html":"<a href=\"#v:lookupVarName\">lookupVarName</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-VarRef.html#t:VarRef\" title=\"Elara.AST.VarRef\">VarRef</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>))","name":"lookupVarName","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:lookupVarName"},{"display_html":"<a href=\"#v:lookupTypeName\">lookupTypeName</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:MaybeQualified\" title=\"Elara.AST.Name\">MaybeQualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>))","name":"lookupTypeName","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:lookupTypeName"},{"display_html":"<a href=\"#v:lookupTypeVar\">lookupTypeVar</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) {a}. (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> a <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/generic-optics-2.2.1.0/docs/Data-Generics-Product-Fields.html#t:HasField-39-\" title=\"Data.Generics.Product.Fields\">HasField'</a> &quot;typeVars&quot; a (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>))) =&gt; <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>))","name":"lookupTypeVar","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:lookupTypeVar"},{"display_html":"<a href=\"#v:uniquify\">uniquify</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) name. <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> name -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> name))","name":"uniquify","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:uniquify"},{"display_html":"<a href=\"#v:sortDeclarations\">sortDeclarations</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). [<a href=\"Elara-AST-Renamed.html#t:RenamedDeclaration\" title=\"Elara.AST.Renamed\">RenamedDeclaration</a>] -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r [<a href=\"Elara-AST-Renamed.html#t:RenamedDeclaration\" title=\"Elara.AST.Renamed\">RenamedDeclaration</a>]","name":"sortDeclarations","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:sortDeclarations"},{"display_html":"<a href=\"#v:rename\">rename</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Rename.html#t:Rename\" title=\"Elara.Rename\">Rename</a> r =&gt; <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Renamed\" title=\"Elara.AST.Select\">Renamed</a>)","name":"rename","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:rename"},{"display_html":"<a href=\"#v:addImportsToContext\">addImportsToContext</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Rename.html#t:Rename\" title=\"Elara.Rename\">Rename</a> r =&gt; [<a href=\"Elara-AST-Module.html#t:Import\" title=\"Elara.AST.Module\">Import</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>] -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"addImportsToContext","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:addImportsToContext"},{"display_html":"<a href=\"#v:addImportToContext\">addImportToContext</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Rename.html#t:Rename\" title=\"Elara.Rename\">Rename</a> r =&gt; <a href=\"Elara-AST-Module.html#t:Import\" title=\"Elara.AST.Module\">Import</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"addImportToContext","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:addImportToContext"},{"display_html":"<a href=\"#v:getModuleFromName\">getModuleFromName</a> :: <span class=\"keyword\">forall</span> {r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]}. (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)","name":"getModuleFromName","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:getModuleFromName"},{"display_html":"<a href=\"#v:addModuleToContext\">addModuleToContext</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Rename.html#t:Rename\" title=\"Elara.Rename\">Rename</a> r =&gt; <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-AST-Module.html#t:Exposing\" title=\"Elara.AST.Module\">Exposing</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"addModuleToContext","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:addModuleToContext"},{"display_html":"<a href=\"#v:addDeclarationToContext\">addDeclarationToContext</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Rename.html#t:Rename\" title=\"Elara.Rename\">Rename</a> r =&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration\" title=\"Elara.AST.Desugared\">DesugaredDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"addDeclarationToContext","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:addDeclarationToContext"},{"display_html":"<a href=\"#v:ensureExistsAndExposed\">ensureExistsAndExposed</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"ensureExistsAndExposed","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:ensureExistsAndExposed"},{"display_html":"<a href=\"#v:elementExistsInModule\">elementExistsInModule</a> :: <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a> -&gt; <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"elementExistsInModule","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:elementExistsInModule"},{"display_html":"<a href=\"#v:isExposingAndExists\">isExposingAndExists</a> :: <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a> -&gt; <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isExposingAndExists","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:isExposingAndExists"},{"display_html":"<a href=\"#v:renameDeclaration\">renameDeclaration</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration\" title=\"Elara.AST.Desugared\">DesugaredDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedDeclaration\" title=\"Elara.AST.Renamed\">RenamedDeclaration</a>","name":"renameDeclaration","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:renameDeclaration"},{"display_html":"<a href=\"#v:renameTypeDeclaration\">renameTypeDeclaration</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredTypeDeclaration\" title=\"Elara.AST.Desugared\">DesugaredTypeDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedTypeDeclaration\" title=\"Elara.AST.Renamed\">RenamedTypeDeclaration</a>","name":"renameTypeDeclaration","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:renameTypeDeclaration"},{"display_html":"<a href=\"#v:renameSimpleType\">renameSimpleType</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Rename-Error.html#t:RenameState\" title=\"Elara.Rename.Error\">RenameState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Rename-Error.html#t:RenameError\" title=\"Elara.Rename.Error\">RenameError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredType\" title=\"Elara.AST.Desugared\">DesugaredType</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedType\" title=\"Elara.AST.Renamed\">RenamedType</a>","name":"renameSimpleType","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:renameSimpleType"},{"display_html":"<a href=\"#v:renameType\">renameType</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredType-39-\" title=\"Elara.AST.Desugared\">DesugaredType'</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedType-39-\" title=\"Elara.AST.Renamed\">RenamedType'</a>","name":"renameType","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:renameType"},{"display_html":"<a href=\"#v:renameExpr\">renameExpr</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration\" title=\"Elara.AST.Desugared\">DesugaredDeclaration</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a>","name":"renameExpr","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:renameExpr"},{"display_html":"<a href=\"#v:renameBinaryOperator\">renameBinaryOperator</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredBinaryOperator\" title=\"Elara.AST.Desugared\">DesugaredBinaryOperator</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedBinaryOperator\" title=\"Elara.AST.Renamed\">RenamedBinaryOperator</a>","name":"renameBinaryOperator","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:renameBinaryOperator"},{"display_html":"<a href=\"#v:renamePattern\">renamePattern</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredPattern\" title=\"Elara.AST.Desugared\">DesugaredPattern</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedPattern\" title=\"Elara.AST.Renamed\">RenamedPattern</a>","name":"renamePattern","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:renamePattern"},{"display_html":"<a href=\"#v:patternToVarName\">patternToVarName</a> :: <a href=\"Elara-AST-Desugared.html#t:DesugaredPattern\" title=\"Elara.AST.Desugared\">DesugaredPattern</a> -&gt; <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>","name":"patternToVarName","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:patternToVarName"},{"display_html":"<a href=\"#v:patternToMatch\">patternToMatch</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration\" title=\"Elara.AST.Desugared\">DesugaredDeclaration</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredPattern\" title=\"Elara.AST.Desugared\">DesugaredPattern</a> -&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>), <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a>)","name":"patternToMatch","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:patternToMatch"},{"display_html":"<a href=\"#v:renameLambda\">renameLambda</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration\" title=\"Elara.AST.Desugared\">DesugaredDeclaration</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredPattern\" title=\"Elara.AST.Desugared\">DesugaredPattern</a> -&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedExpr-39-\" title=\"Elara.AST.Renamed\">RenamedExpr'</a>","name":"renameLambda","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:renameLambda"},{"display_html":"<a href=\"#v:desugarBlock\">desugarBlock</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Rename.html#t:InnerRename\" title=\"Elara.Rename\">InnerRename</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Reader-Static.html#t:Reader\" title=\"Effectful.Reader.Static\">Reader</a> (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration\" title=\"Elara.AST.Desugared\">DesugaredDeclaration</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Renamed.html#t:RenamedExpr\" title=\"Elara.AST.Renamed\">RenamedExpr</a>","name":"desugarBlock","module":"Elara.Rename","link":"elara/Elara-Rename.html#v:desugarBlock"},{"display_html":"<a href=\"#v:parseModule\">parseModule</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a> -&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> (<a href=\"Elara-Parse-Error.html#t:WParseErrorBundle\" title=\"Elara.Parse.Error\">WParseErrorBundle</a> <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a> <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a>) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"parseModule","module":"Elara.Parse","link":"elara/Elara-Parse.html#v:parseModule"},{"display_html":"<a href=\"#v:moduleParser\">moduleParser</a> :: <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"moduleParser","module":"Elara.Parse","link":"elara/Elara-Parse.html#v:moduleParser"},{"display_html":"<a href=\"#v:parse\">parse</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Elara-Parse.html#t:ParsePipelineEffects\" title=\"Elara.Parse\">ParsePipelineEffects</a> r =&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"parse","module":"Elara.Parse","link":"elara/Elara-Parse.html#v:parse"},{"display_html":"<a href=\"#v:parseWith\">parseWith</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Elara-Parse.html#t:ParsePipelineEffects\" title=\"Elara.Parse\">ParsePipelineEffects</a> r =&gt; <a href=\"Elara-Parse-Primitives.html#t:Parser\" title=\"Elara.Parse.Primitives\">Parser</a> a -&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; (<a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>, [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"parseWith","module":"Elara.Parse","link":"elara/Elara-Parse.html#v:parseWith"},{"display_html":"<a href=\"#v:getParsedFileQuery\">getParsedFileQuery</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-Parse-Error.html#t:WParseErrorBundle\" title=\"Elara.Parse.Error\">WParseErrorBundle</a> <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a> <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a>), <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"getParsedFileQuery","module":"Elara.Parse","link":"elara/Elara-Parse.html#v:getParsedFileQuery"},{"display_html":"<a href=\"#v:getParsedModuleQuery\">getParsedModuleQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-Parse-Error.html#t:WParseErrorBundle\" title=\"Elara.Parse.Error\">WParseErrorBundle</a> <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a> <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a>), <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a>)","name":"getParsedModuleQuery","module":"Elara.Parse","link":"elara/Elara-Parse.html#v:getParsedModuleQuery"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ParsePipelineEffects\">ParsePipelineEffects</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-Parse-Error.html#t:WParseErrorBundle\" title=\"Elara.Parse.Error\">WParseErrorBundle</a> <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a> <a href=\"Elara-Parse-Error.html#t:ElaraParseError\" title=\"Elara.Parse.Error\">ElaraParseError</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r","name":"ParsePipelineEffects","module":"Elara.Parse","link":"elara/Elara-Parse.html#t:ParsePipelineEffects"},{"display_html":"<a href=\"#v:createTokenStream\">createTokenStream</a> :: <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>] -&gt; <a href=\"Elara-Parse-Stream.html#t:TokenStream\" title=\"Elara.Parse.Stream\">TokenStream</a>","name":"createTokenStream","module":"Elara.Parse","link":"elara/Elara-Parse.html#v:createTokenStream"},{"display_html":"<a href=\"#v:readToken\">readToken</a> :: <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> <a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>","name":"readToken","module":"Elara.Lexer.Reader","link":"elara/Elara-Lexer-Reader.html#v:readToken"},{"display_html":"<a href=\"#v:readTokens\">readTokens</a> :: <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]","name":"readTokens","module":"Elara.Lexer.Reader","link":"elara/Elara-Lexer-Reader.html#v:readTokens"},{"display_html":"<a href=\"#v:readTokensWith\">readTokensWith</a> :: <span class=\"keyword\">forall</span> (es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Lexer-Utils.html#t:LexerError\" title=\"Elara.Lexer.Utils\">LexerError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"Elara-ReadFile.html#t:FileContents\" title=\"Elara.ReadFile\">FileContents</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]","name":"readTokensWith","module":"Elara.Lexer.Reader","link":"elara/Elara-Lexer-Reader.html#v:readTokensWith"},{"display_html":"<a href=\"#v:getLexedFile\">getLexedFile</a> :: <a href=\"Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Lexer-Utils.html#t:LexerError\" title=\"Elara.Lexer.Utils\">LexerError</a>, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) [<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a>]","name":"getLexedFile","module":"Elara.Lexer.Reader","link":"elara/Elara-Lexer-Reader.html#v:getLexedFile"},{"display_html":"<a href=\"#v:lexer\">lexer</a> :: (<a href=\"Elara-Lexer-Token.html#t:Lexeme\" title=\"Elara.Lexer.Token\">Lexeme</a> -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> a) -&gt; <a href=\"Elara-Lexer-Utils.html#t:LexMonad\" title=\"Elara.Lexer.Utils\">LexMonad</a> a","name":"lexer","module":"Elara.Lexer.Reader","link":"elara/Elara-Lexer-Reader.html#v:lexer"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Interpreter\">Interpreter</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Interpreter.html#t:ElaraState\" title=\"Elara.Interpreter\">ElaraState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Interpreter.html#t:InterpreterError\" title=\"Elara.Interpreter\">InterpreterError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>)","name":"Interpreter","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#t:Interpreter"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InterpreterEffects\">InterpreterEffects</a> = <a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Interpreter.html#t:ElaraState\" title=\"Elara.Interpreter\">ElaraState</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Interpreter.html#t:InterpreterError\" title=\"Elara.Interpreter\">InterpreterError</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a>, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:IOE\" title=\"Effectful\">IOE</a>]","name":"InterpreterEffects","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#t:InterpreterEffects"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ElaraState\">ElaraState</a> = <a href=\"#v:ElaraState\">ElaraState</a> {<ul class=\"subs\"><li><a href=\"#v:globalBindings\">globalBindings</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li><li><a href=\"#v:localBindings\">localBindings</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li><li><a href=\"#v:loadedModules\">loadedModules</a> :: <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a></li><li><a href=\"#v:stateSource\">stateSource</a> :: <a href=\"Elara-Interpreter.html#t:StateSource\" title=\"Elara.Interpreter\">StateSource</a></li></ul>}","name":"ElaraState ElaraState globalBindings loadedModules localBindings stateSource","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#t:ElaraState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StateSource\">StateSource</a><ul class=\"subs\"><li>= <a href=\"#v:FromGlobal\">FromGlobal</a></li><li>| <a href=\"#v:FromClosure\">FromClosure</a></li></ul>","name":"StateSource FromClosure FromGlobal","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#t:StateSource"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InterpreterError\">InterpreterError</a><ul class=\"subs\"><li>= <a href=\"#v:UnboundVariable\">UnboundVariable</a> (<a href=\"Elara-AST-VarRef.html#t:UnlocatedVarRef\" title=\"Elara.AST.VarRef\">UnlocatedVarRef</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Interpreter.html#t:ElaraState\" title=\"Elara.Interpreter\">ElaraState</a></li><li>| <a href=\"#v:NotAFunction\">NotAFunction</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li><li>| <a href=\"#v:UnknownPrimitive\">UnknownPrimitive</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:UnhandledExpr\">UnhandledExpr</a> <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a></li><li>| <a href=\"#v:NonExhaustiveMatch\">NonExhaustiveMatch</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a> [<a href=\"Elara-Core.html#t:Alt\" title=\"Elara.Core\">Alt</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>]</li><li>| <a href=\"#v:NoMainFound\">NoMainFound</a> <a href=\"Elara-Interpreter.html#t:ElaraState\" title=\"Elara.Interpreter\">ElaraState</a></li><li>| <a href=\"#v:TypeMismatch\">TypeMismatch</a> { <ul class=\"subs\"><li><a href=\"#v:expected\">expected</a> :: <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:actual\">actual</a> :: <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li></ul> }</li><li>| <a href=\"#v:CodeThrewError\">CodeThrewError</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li><li>| <a href=\"#v:RecursiveValueDetected\">RecursiveValueDetected</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)</li></ul>","name":"InterpreterError CodeThrewError NoMainFound NonExhaustiveMatch NotAFunction RecursiveValueDetected TypeMismatch UnboundVariable UnhandledExpr UnknownPrimitive actual expected","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#t:InterpreterError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ThunkState\">ThunkState</a><ul class=\"subs\"><li>= <a href=\"#v:Unevaluated\">Unevaluated</a></li><li>| <a href=\"#v:Evaluating\">Evaluating</a></li><li>| <a href=\"#v:Evaluated\">Evaluated</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li></ul>","name":"ThunkState Evaluated Evaluating Unevaluated","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#t:ThunkState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Value\">Value</a><ul class=\"subs\"><li>= <a href=\"#v:Int\">Int</a> <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a></li><li>| <a href=\"#v:String\">String</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:Char\">Char</a> <a href=\"Prelude.html#t:Char\" title=\"Prelude\">Char</a></li><li>| <a href=\"#v:Double\">Double</a> <a href=\"Prelude.html#t:Double\" title=\"Prelude\">Double</a></li><li>| <a href=\"#v:Ctor\">Ctor</a> <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a> [<a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>]</li><li>| <a href=\"#v:Closure\">Closure</a> { <ul class=\"subs\"><li><a href=\"#v:env\">env</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li><li><a href=\"#v:param\">param</a> :: <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:body\">body</a> :: <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a></li></ul> }</li><li>| <a href=\"#v:RecClosure\">RecClosure</a> { <ul class=\"subs\"><li><a href=\"#v:recEnv\">recEnv</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li><li><a href=\"#v:name\">name</a> :: <a href=\"Elara-AST-VarRef.html#t:UnlocatedVarRef\" title=\"Elara.AST.VarRef\">UnlocatedVarRef</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:param\">param</a> :: <a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:body\">body</a> :: <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a></li></ul> }</li><li>| <a href=\"#v:PrimOp\">PrimOp</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li>| <a href=\"#v:PartialApplication\">PartialApplication</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a></li><li>| <a href=\"#v:IOAction\">IOAction</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> <a href=\"Elara-Interpreter.html#t:InterpreterEffects\" title=\"Elara.Interpreter\">InterpreterEffects</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>)</li><li>| <a href=\"#v:Thunk\">Thunk</a> (<a href=\"Prelude.html#t:IORef\" title=\"Prelude\">IORef</a> <a href=\"Elara-Interpreter.html#t:ThunkState\" title=\"Elara.Interpreter\">ThunkState</a>) (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> <a href=\"Elara-Interpreter.html#t:InterpreterEffects\" title=\"Elara.Interpreter\">InterpreterEffects</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>)</li></ul>","name":"Value Char Closure Ctor Double IOAction Int PartialApplication PrimOp RecClosure String Thunk body env name param recEnv","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#t:Value"},{"display_html":"<a href=\"#v:prettyValueWithType\">prettyValueWithType</a> :: <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a> -&gt; <a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>","name":"prettyValueWithType","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:prettyValueWithType"},{"display_html":"<a href=\"#v:primOps\">primOps</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> <a href=\"Prelude.html#t:Integer\" title=\"Prelude\">Integer</a>","name":"primOps","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:primOps"},{"display_html":"<a href=\"#v:boolValue\">boolValue</a> :: <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a> -&gt; <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>","name":"boolValue","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:boolValue"},{"display_html":"<a href=\"#v:force\">force</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>","name":"force","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:force"},{"display_html":"<a href=\"#v:mkThunk\">mkThunk</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> <a href=\"Elara-Interpreter.html#t:InterpreterEffects\" title=\"Elara.Interpreter\">InterpreterEffects</a> <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>","name":"mkThunk","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:mkThunk"},{"display_html":"<a href=\"#v:scopedOverLocals\">scopedOverLocals</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a. <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r a","name":"scopedOverLocals","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:scopedOverLocals"},{"display_html":"<a href=\"#v:lookupVar\">lookupVar</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"Elara-AST-VarRef.html#t:UnlocatedVarRef\" title=\"Elara.AST.VarRef\">UnlocatedVarRef</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>","name":"lookupVar","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:lookupVar"},{"display_html":"<a href=\"#v:interpretExpr\">interpretExpr</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>","name":"interpretExpr","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:interpretExpr"},{"display_html":"<a href=\"#v:interpretBinding\">interpretBinding</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"interpretBinding","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:interpretBinding"},{"display_html":"<a href=\"#v:loadModule\">loadModule</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"loadModule","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:loadModule"},{"display_html":"<a href=\"#v:loadTypeDecl\">loadTypeDecl</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"Elara-Core-Module.html#t:CoreTypeDecl\" title=\"Elara.Core.Module\">CoreTypeDecl</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"loadTypeDecl","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:loadTypeDecl"},{"display_html":"<a href=\"#v:evalIO\">evalIO</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r =&gt; <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Interpreter.html#t:Value\" title=\"Elara.Interpreter\">Value</a>","name":"evalIO","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:evalIO"},{"display_html":"<a href=\"#v:run\">run</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Interpreter.html#t:Interpreter\" title=\"Elara.Interpreter\">Interpreter</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"run","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:run"},{"display_html":"<a href=\"#v:runInterpreter\">runInterpreter</a> :: <span class=\"keyword\">forall</span> {es :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]} {a}. (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> es) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Interpreter.html#t:ElaraState\" title=\"Elara.Interpreter\">ElaraState</a> ': (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Interpreter.html#t:InterpreterError\" title=\"Elara.Interpreter\">InterpreterError</a> ': es)) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> es a","name":"runInterpreter","module":"Elara.Interpreter","link":"elara/Elara-Interpreter.html#v:runInterpreter"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Desugar\">Desugar</a> a = <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> <a href=\"Elara-Desugar.html#t:DesugarPipelineEffects\" title=\"Elara.Desugar\">DesugarPipelineEffects</a> a","name":"Desugar","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#t:Desugar"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DesugarPipelineEffects\">DesugarPipelineEffects</a> = '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Desugar.html#t:DesugarState\" title=\"Elara.Desugar\">DesugarState</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Desugar-Error.html#t:DesugarError\" title=\"Elara.Desugar.Error\">DesugarError</a>]","name":"DesugarPipelineEffects","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#t:DesugarPipelineEffects"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:DesugarState\">DesugarState</a> = <a href=\"#v:DesugarState\">DesugarState</a> {<ul class=\"subs\"><li><a href=\"#v:_partialDeclarations\">_partialDeclarations</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Region.html#t:IgnoreLocation\" title=\"Elara.AST.Region\">IgnoreLocation</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a></li></ul>}","name":"DesugarState DesugarState _partialDeclarations","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#t:DesugarState"},{"display_html":"<a href=\"#v:partialDeclarations\">partialDeclarations</a> :: <a href=\"Prelude.html#t:Iso-39-\" title=\"Prelude\">Iso'</a> <a href=\"Elara-Desugar.html#t:DesugarState\" title=\"Elara.Desugar\">DesugarState</a> (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Region.html#t:IgnoreLocation\" title=\"Elara.AST.Region\">IgnoreLocation</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a>)","name":"partialDeclarations","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:partialDeclarations"},{"display_html":"<a href=\"#v:resolvePartialDeclaration\">resolvePartialDeclaration</a> :: <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a> -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredDeclarationBody\" title=\"Elara.AST.Desugared\">DesugaredDeclarationBody</a>","name":"resolvePartialDeclaration","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:resolvePartialDeclaration"},{"display_html":"<a href=\"#v:resolveAnn\">resolveAnn</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>) -&gt; <a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>","name":"resolveAnn","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:resolveAnn"},{"display_html":"<a href=\"#v:getDesugaredModule\">getDesugaredModule</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Desugar-Error.html#t:DesugarError\" title=\"Elara.Desugar.Error\">DesugarError</a>, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)","name":"getDesugaredModule","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:getDesugaredModule"},{"display_html":"<a href=\"#v:desugar\">desugar</a> :: <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Frontend\" title=\"Elara.AST.Select\">Frontend</a> -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)","name":"desugar","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:desugar"},{"display_html":"<a href=\"#v:desugarDeclarations\">desugarDeclarations</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; [<a href=\"Elara-AST-Frontend.html#t:FrontendDeclaration\" title=\"Elara.AST.Frontend\">FrontendDeclaration</a>] -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> [<a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration\" title=\"Elara.AST.Desugared\">DesugaredDeclaration</a>]","name":"desugarDeclarations","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:desugarDeclarations"},{"display_html":"<a href=\"#v:assertPartialNamesEqual\">assertPartialNamesEqual</a> :: <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a =&gt; (<a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a>, <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a) -&gt; (<a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a>, <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> a) -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> ()","name":"assertPartialNamesEqual","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:assertPartialNamesEqual"},{"display_html":"<a href=\"#v:resolveDupeInfixes\">resolveDupeInfixes</a> :: <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>) -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>) -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> (<a href=\"Elara-AST-Generic-Types.html#t:ValueDeclAnnotations\" title=\"Elara.AST.Generic.Types\">ValueDeclAnnotations</a> '<a href=\"Elara-AST-Select.html#v:Desugared\" title=\"Elara.AST.Select\">Desugared</a>)","name":"resolveDupeInfixes","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:resolveDupeInfixes"},{"display_html":"<a href=\"#v:mergePartials\">mergePartials</a> :: <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a> -&gt; <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a> -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> <a href=\"Elara-Desugar-Error.html#t:PartialDeclaration\" title=\"Elara.Desugar.Error\">PartialDeclaration</a>","name":"mergePartials","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:mergePartials"},{"display_html":"<a href=\"#v:genPartials\">genPartials</a> :: [<a href=\"Elara-AST-Frontend.html#t:FrontendDeclaration\" title=\"Elara.AST.Frontend\">FrontendDeclaration</a>] -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> ()","name":"genPartials","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:genPartials"},{"display_html":"<a href=\"#v:desugarType\">desugarType</a> :: <a href=\"Elara-AST-Frontend.html#t:FrontendType-39-\" title=\"Elara.AST.Frontend\">FrontendType'</a> -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredType-39-\" title=\"Elara.AST.Desugared\">DesugaredType'</a>","name":"desugarType","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:desugarType"},{"display_html":"<a href=\"#v:completePartials\">completePartials</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> [<a href=\"Elara-AST-Desugared.html#t:DesugaredDeclaration\" title=\"Elara.AST.Desugared\">DesugaredDeclaration</a>]","name":"completePartials","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:completePartials"},{"display_html":"<a href=\"#v:desugarExpr\">desugarExpr</a> :: <a href=\"Elara-AST-Frontend.html#t:FrontendExpr\" title=\"Elara.AST.Frontend\">FrontendExpr</a> -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a>","name":"desugarExpr","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:desugarExpr"},{"display_html":"<a href=\"#v:desugarBinaryOperator\">desugarBinaryOperator</a> :: <a href=\"Elara-AST-Frontend.html#t:FrontendBinaryOperator\" title=\"Elara.AST.Frontend\">FrontendBinaryOperator</a> -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredBinaryOperator\" title=\"Elara.AST.Desugared\">DesugaredBinaryOperator</a>","name":"desugarBinaryOperator","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:desugarBinaryOperator"},{"display_html":"<a href=\"#v:desugarPattern\">desugarPattern</a> :: <a href=\"Elara-AST-Frontend.html#t:FrontendPattern\" title=\"Elara.AST.Frontend\">FrontendPattern</a> -&gt; <a href=\"Elara-Desugar.html#t:Desugar\" title=\"Elara.Desugar\">Desugar</a> <a href=\"Elara-AST-Desugared.html#t:DesugaredPattern\" title=\"Elara.AST.Desugared\">DesugaredPattern</a>","name":"desugarPattern","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:desugarPattern"},{"display_html":"<a href=\"#v:foldLambda\">foldLambda</a> :: [<a href=\"Elara-AST-Desugared.html#t:DesugaredPattern\" title=\"Elara.AST.Desugared\">DesugaredPattern</a>] -&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a> -&gt; <a href=\"Elara-AST-Desugared.html#t:DesugaredExpr\" title=\"Elara.AST.Desugared\">DesugaredExpr</a>","name":"foldLambda","module":"Elara.Desugar","link":"elara/Elara-Desugar.html#v:foldLambda"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LiftClosures\">LiftClosures</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Writer-Static-Local.html#t:Writer\" title=\"Effectful.Writer.Static.Local\">Writer</a> [(<a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>, <a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)] <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r)","name":"LiftClosures","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#t:LiftClosures"},{"display_html":"<a href=\"#v:runLiftClosures\">runLiftClosures</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a>))","name":"runLiftClosures","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#v:runLiftClosures"},{"display_html":"<a href=\"#v:runGetClosureLiftedModuleQuery\">runGetClosureLiftedModuleQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a>]) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a>))","name":"runGetClosureLiftedModuleQuery","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#v:runGetClosureLiftedModuleQuery"},{"display_html":"<a href=\"#v:liftClosures\">liftClosures</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-LiftClosures.html#t:LiftClosures\" title=\"Elara.Core.LiftClosures\">LiftClosures</a> r =&gt; <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"liftClosures","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#v:liftClosures"},{"display_html":"<a href=\"#v:closedVariables\">closedVariables</a> :: <a href=\"Elara-Core-Analysis.html#t:FreeCoreVars\" title=\"Elara.Core.Analysis\">FreeCoreVars</a> ast =&gt; ast <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"closedVariables","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#v:closedVariables"},{"display_html":"<a href=\"#v:liftClosures-39-\">liftClosures'</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-LiftClosures.html#t:LiftClosures\" title=\"Elara.Core.LiftClosures\">LiftClosures</a> r =&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"liftClosures'","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#v:liftClosures-39-"},{"display_html":"<a href=\"#v:liftClosuresC\">liftClosuresC</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-LiftClosures.html#t:LiftClosures\" title=\"Elara.Core.LiftClosures\">LiftClosures</a> r =&gt; <a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"liftClosuresC","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#v:liftClosuresC"},{"display_html":"<a href=\"#v:liftClosuresC-39-\">liftClosuresC'</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-LiftClosures.html#t:LiftClosures\" title=\"Elara.Core.LiftClosures\">LiftClosures</a> r =&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"liftClosuresC'","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#v:liftClosuresC-39-"},{"display_html":"<a href=\"#v:liftClosuresA-39-\">liftClosuresA'</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-LiftClosures.html#t:LiftClosures\" title=\"Elara.Core.LiftClosures\">LiftClosures</a> r =&gt; <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>)","name":"liftClosuresA'","module":"Elara.Core.LiftClosures","link":"elara/Elara-Core-LiftClosures.html#v:liftClosuresA-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TODO\">TODO</a> = <a href=\"Prelude.html#t:Void\" title=\"Prelude\">Void</a>","name":"TODO","module":"TODO","link":"elara/TODO.html#t:TODO"},{"display_html":"<a href=\"#v:todo\">todo</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; a","name":"todo","module":"TODO","link":"elara/TODO.html#v:todo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ToCoreError\">ToCoreError</a><ul class=\"subs\"><li>= <a href=\"#v:LetInTopLevel\">LetInTopLevel</a> !<a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a></li><li>| <a href=\"#v:UnknownConstructor\">UnknownConstructor</a> !(<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)) <a href=\"Elara-ToCore.html#t:CtorSymbolTable\" title=\"Elara.ToCore\">CtorSymbolTable</a></li><li>| <a href=\"#v:UnknownPrimConstructor\">UnknownPrimConstructor</a> !(<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>)</li><li>| <a href=\"#v:UnknownTypeConstructor\">UnknownTypeConstructor</a> !(<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-ToCore.html#t:CtorSymbolTable\" title=\"Elara.ToCore\">CtorSymbolTable</a></li><li>| <a href=\"#v:UnknownLambdaType\">UnknownLambdaType</a> !(<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)</li><li>| <a href=\"#v:UnsolvedTypeSnuckIn\">UnsolvedTypeSnuckIn</a> !(<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)</li><li>| <a href=\"#v:UnknownVariable\">UnknownVariable</a> !(<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>))</li></ul>","name":"ToCoreError LetInTopLevel UnknownConstructor UnknownLambdaType UnknownPrimConstructor UnknownTypeConstructor UnknownVariable UnsolvedTypeSnuckIn","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#t:ToCoreError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CtorSymbolTable\">CtorSymbolTable</a> = <a href=\"#v:CtorSymbolTable\">CtorSymbolTable</a> {<ul class=\"subs\"><li><a href=\"#v:dataCons\">dataCons</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a></li><li><a href=\"#v:tyCons\">tyCons</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>) <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a></li></ul>}","name":"CtorSymbolTable CtorSymbolTable dataCons tyCons","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#t:CtorSymbolTable"},{"display_html":"<a href=\"#v:primCtorSymbolTable\">primCtorSymbolTable</a> :: <a href=\"Elara-ToCore.html#t:CtorSymbolTable\" title=\"Elara.ToCore\">CtorSymbolTable</a>","name":"primCtorSymbolTable","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:primCtorSymbolTable"},{"display_html":"<a href=\"#v:lookupCtor\">lookupCtor</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-ToCore.html#t:ToCoreC\" title=\"Elara.ToCore\">ToCoreC</a> r =&gt; <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>","name":"lookupCtor","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:lookupCtor"},{"display_html":"<a href=\"#v:registerCtor\">registerCtor</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-ToCore.html#t:ToCoreC\" title=\"Elara.ToCore\">ToCoreC</a> r =&gt; <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"registerCtor","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:registerCtor"},{"display_html":"<a href=\"#v:registerTyCon\">registerTyCon</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-ToCore.html#t:ToCoreC\" title=\"Elara.ToCore\">ToCoreC</a> r =&gt; <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"registerTyCon","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:registerTyCon"},{"display_html":"<a href=\"#v:lookupPrimCtor\">lookupPrimCtor</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-ToCore.html#t:ToCoreC\" title=\"Elara.ToCore\">ToCoreC</a> r =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>","name":"lookupPrimCtor","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:lookupPrimCtor"},{"display_html":"<a href=\"#v:lookupTyCon\">lookupTyCon</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-ToCore.html#t:ToCoreC\" title=\"Elara.ToCore\">ToCoreC</a> r) =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>","name":"lookupTyCon","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:lookupTyCon"},{"display_html":"<a href=\"#v:runGetDataConQuery\">runGetDataConQuery</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a>)","name":"runGetDataConQuery","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:runGetDataConQuery"},{"display_html":"<a href=\"#v:runGetTyConQuery\">runGetTyConQuery</a> :: <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Core.html#t:TyCon\" title=\"Elara.Core\">TyCon</a>)","name":"runGetTyConQuery","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:runGetTyConQuery"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:VariableTable\">VariableTable</a> = <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:Name\" title=\"Elara.AST.Name\">Name</a>) (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"VariableTable","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#t:VariableTable"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ToCoreEffects\">ToCoreEffects</a> = '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-ToCore.html#t:CtorSymbolTable\" title=\"Elara.ToCore\">CtorSymbolTable</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-ToCore.html#t:ToCoreError\" title=\"Elara.ToCore\">ToCoreError</a>, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a>]","name":"ToCoreEffects","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#t:ToCoreEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InnerToCoreEffects\">InnerToCoreEffects</a> = '[<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-ToCore.html#t:CtorSymbolTable\" title=\"Elara.ToCore\">CtorSymbolTable</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-ToCore.html#t:ToCoreError\" title=\"Elara.ToCore\">ToCoreError</a>, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a>, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a>]","name":"InnerToCoreEffects","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#t:InnerToCoreEffects"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ToCoreC\">ToCoreC</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-ToCore.html#t:CtorSymbolTable\" title=\"Elara.ToCore\">CtorSymbolTable</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-ToCore.html#t:ToCoreError\" title=\"Elara.ToCore\">ToCoreError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r)","name":"ToCoreC","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#t:ToCoreC"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InnerToCoreC\">InnerToCoreC</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-ToCore.html#t:CtorSymbolTable\" title=\"Elara.ToCore\">CtorSymbolTable</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-ToCore.html#t:ToCoreError\" title=\"Elara.ToCore\">ToCoreError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r)","name":"InnerToCoreC","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#t:InnerToCoreC"},{"display_html":"<a href=\"#v:runGetCoreModuleQuery\">runGetCoreModuleQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>)","name":"runGetCoreModuleQuery","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:runGetCoreModuleQuery"},{"display_html":"<a href=\"#v:sccToCore\">sccToCore</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-ToCore.html#t:ToCoreC\" title=\"Elara.ToCore\">ToCoreC</a> r =&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>, <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-Module.html#t:CoreDeclaration\" title=\"Elara.Core.Module\">CoreDeclaration</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>)","name":"sccToCore","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:sccToCore"},{"display_html":"<a href=\"#v:buildModuleSCCs\">buildModuleSCCs</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-ToCore.html#t:ToCoreC\" title=\"Elara.ToCore\">ToCoreC</a> r =&gt; <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r [<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>)]","name":"buildModuleSCCs","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:buildModuleSCCs"},{"display_html":"<a href=\"#v:moduleToCore\">moduleToCore</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-ToCore.html#t:ToCoreC\" title=\"Elara.ToCore\">ToCoreC</a> r) =&gt; <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>)","name":"moduleToCore","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:moduleToCore"},{"display_html":"<a href=\"#v:mkTypeVar\">mkTypeVar</a> :: <a href=\"Elara-AST-Generic-Types.html#t:Select\" title=\"Elara.AST.Generic.Types\">Select</a> &quot;TypeVar&quot; '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a> -&gt; <a href=\"Elara-Core.html#t:TypeVariable\" title=\"Elara.Core\">TypeVariable</a>","name":"mkTypeVar","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:mkTypeVar"},{"display_html":"<a href=\"#v:polytypeToCore\">polytypeToCore</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-ToCore.html#t:InnerToCoreC\" title=\"Elara.ToCore\">InnerToCoreC</a> r) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"polytypeToCore","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:polytypeToCore"},{"display_html":"<a href=\"#v:eitherTypeToCore\">eitherTypeToCore</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-ToCore.html#t:InnerToCoreC\" title=\"Elara.ToCore\">InnerToCoreC</a> r) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"eitherTypeToCore","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:eitherTypeToCore"},{"display_html":"<a href=\"#v:typeToCore\">typeToCore</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-ToCore.html#t:InnerToCoreC\" title=\"Elara.ToCore\">InnerToCoreC</a> r) =&gt; <a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"typeToCore","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:typeToCore"},{"display_html":"<a href=\"#v:conToVar\">conToVar</a> :: <a href=\"Elara-Core.html#t:DataCon\" title=\"Elara.Core\">DataCon</a> -&gt; <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"conToVar","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:conToVar"},{"display_html":"<a href=\"#v:toCore\">toCore</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-ToCore.html#t:InnerToCoreC\" title=\"Elara.ToCore\">InnerToCoreC</a> r) =&gt; <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"toCore","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:toCore"},{"display_html":"<a href=\"#v:isRecursive\">isRecursive</a> :: <span class=\"keyword\">forall</span> {v1} {v2} {v3} {k} {l} {u} {v4} {a} {is :: <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:IxList\" title=\"Optics.Optic\">IxList</a>}. (ErrorUnlessOnlyOne v1 (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> v1), <a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Internal-Errors.html#t:Defined\" title=\"Data.Generics.Internal.Errors\">Defined</a> (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> v2) (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#t:TypeError\" title=\"GHC.TypeLits\">TypeError</a> (('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;| &quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> ('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;No instance for &quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> (('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;\\8216&quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:ShowType\" title=\"GHC.TypeLits\">ShowType</a> (<a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> v2)) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;\\8217&quot;))) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-36--36-:\" title=\"GHC.TypeLits\">:$$:</a> (('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;|   &quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> ((('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;arising from a generic prism focusing on the &quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> (('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;\\8216&quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:ShowType\" title=\"GHC.TypeLits\">ShowType</a> &quot;Var&quot;) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;\\8217&quot;)) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot; constructor of type &quot;) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> (('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;\\8216&quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:ShowType\" title=\"GHC.TypeLits\">ShowType</a> (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> v3)) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;\\8217&quot;))) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-36--36-:\" title=\"GHC.TypeLits\">:$$:</a> (('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;|   &quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> ('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;in &quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> (('<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;\\8216&quot; '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:ShowType\" title=\"GHC.TypeLits\">ShowType</a> v2) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-60--62-:\" title=\"GHC.TypeLits\">:&lt;&gt;:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;\\8217&quot;))) '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v::-36--36-:\" title=\"GHC.TypeLits\">:$$:</a> '<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-TypeLits.html#v:Text\" title=\"GHC.TypeLits\">Text</a> &quot;&quot;))) :: <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (), ErrorUnless &quot;Var&quot; v2 (<a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Internal-Families-Has.html#t:HasCtorP\" title=\"Data.Generics.Internal.Families.Has\">HasCtorP</a> &quot;Var&quot; (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> v2)), <a href=\"Prelude.html#t:Is\" title=\"Prelude\">Is</a> k <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a>, <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Optics-Optic.html#t:JoinKinds\" title=\"Optics.Optic\">JoinKinds</a> <a href=\"Prelude.html#t:A_Fold\" title=\"Prelude\">A_Fold</a> l k, <a href=\"Prelude.html#t:GPlate\" title=\"Prelude\">GPlate</a> v1 v1, GWrapped (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> v1) (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> v1) u v4, <a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Internal-Families-Changing.html#t:UnifyHead\" title=\"Data.Generics.Internal.Families.Changing\">UnifyHead</a> v1 v1, <a href=\"https://hackage.haskell.org/package/optics-core-0.4.1.1/docs/Data-Tuple-Optics.html#t:Field1\" title=\"Data.Tuple.Optics\">Field1</a> u v4 (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> v2) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> v2), <a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> v1, <a href=\"Prelude.html#t:Generic\" title=\"Prelude\">Generic</a> v2, <a href=\"https://hackage.haskell.org/package/generic-lens-core-2.2.1.0/docs/Data-Generics-Sum-Internal-Constructors.html#t:GAsConstructor\" title=\"Data.Generics.Sum.Internal.Constructors\">GAsConstructor</a> &quot;Var&quot; (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> v2) (<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/GHC-Generics.html#t:Rep\" title=\"GHC.Generics\">Rep</a> v2) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> v3) (<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> v3), <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> a) =&gt; a -&gt; v1 -&gt; <a href=\"Prelude.html#t:Optic\" title=\"Prelude\">Optic</a> l is v3 v3 a a -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isRecursive","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:isRecursive"},{"display_html":"<a href=\"#v:desugarMatch\">desugarMatch</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-ToCore.html#t:InnerToCoreC\" title=\"Elara.ToCore\">InnerToCoreC</a> r) =&gt; <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a> -&gt; [(<a href=\"Elara-AST-Typed.html#t:TypedPattern\" title=\"Elara.AST.Typed\">TypedPattern</a>, <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"desugarMatch","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:desugarMatch"},{"display_html":"<a href=\"#v:mkBindName\">mkBindName</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-ToCore.html#t:InnerToCoreC\" title=\"Elara.ToCore\">InnerToCoreC</a> r =&gt; <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>","name":"mkBindName","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:mkBindName"},{"display_html":"<a href=\"#v:desugarBlock\">desugarBlock</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-ToCore.html#t:InnerToCoreC\" title=\"Elara.ToCore\">InnerToCoreC</a> r =&gt; <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"desugarBlock","module":"Elara.ToCore","link":"elara/Elara-ToCore.html#v:desugarBlock"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InferState\">InferState</a> = <a href=\"#v:InferState\">InferState</a> {<ul class=\"subs\"><li><a href=\"#v:env\">env</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) <a href=\"Elara-Data-Kind.html#t:TypeVar\" title=\"Elara.Data.Kind\">TypeVar</a>) <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a></li><li><a href=\"#v:kindEnv\">kindEnv</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li><li><a href=\"#v:constraints\">constraints</a> :: [(<a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>, <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>)]</li><li><a href=\"#v:substitution\">substitution</a> :: <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a> <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li></ul>}","name":"InferState InferState constraints env kindEnv substitution","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#t:InferState"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:KindInfer\">KindInfer</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r)","name":"KindInfer","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#t:KindInfer"},{"display_html":"<a href=\"#v:initialInferState\">initialInferState</a> :: <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a>","name":"initialInferState","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:initialInferState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KindInferError\">KindInferError</a><ul class=\"subs\"><li>= <a href=\"#v:UnknownKind\">UnknownKind</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>)</li><li>| <a href=\"#v:UnboundVar\">UnboundVar</a> <a href=\"Elara-Data-Kind.html#t:TypeVar\" title=\"Elara.Data.Kind\">TypeVar</a> (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) <a href=\"Elara-Data-Kind.html#t:TypeVar\" title=\"Elara.Data.Kind\">TypeVar</a>) <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>)</li><li>| <a href=\"#v:CannotUnify\">CannotUnify</a> <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li><li>| <a href=\"#v:NotFunctionKind\">NotFunctionKind</a> <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li><li>| <a href=\"#v:OccursCheckFailed\">OccursCheckFailed</a> <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a> <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a></li></ul>","name":"KindInferError CannotUnify NotFunctionKind OccursCheckFailed UnboundVar UnknownKind","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#t:KindInferError"},{"display_html":"<a href=\"#v:declareTypeVar\">declareTypeVar</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-Data-Kind.html#t:TypeVar\" title=\"Elara.Data.Kind\">TypeVar</a> -&gt; <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"declareTypeVar","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:declareTypeVar"},{"display_html":"<a href=\"#v:declareNamedType\">declareNamedType</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"declareNamedType","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:declareNamedType"},{"display_html":"<a href=\"#v:elaborate\">elaborate</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; [<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>)] -&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedTypeDeclaration\" title=\"Elara.AST.Shunted\">ShuntedTypeDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>, <a href=\"Elara-AST-Kinded.html#t:MidKindedTypeDeclaration\" title=\"Elara.AST.Kinded\">MidKindedTypeDeclaration</a>)","name":"elaborate","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:elaborate"},{"display_html":"<a href=\"#v:infer\">infer</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> -&gt; [(<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>, [<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-Data-Kind.html#t:TypeVar\" title=\"Elara.Data.Kind\">TypeVar</a>], <a href=\"Elara-AST-Shunted.html#t:ShuntedTypeDeclaration\" title=\"Elara.AST.Shunted\">ShuntedTypeDeclaration</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r [(<a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>, <a href=\"Elara-AST-Kinded.html#t:KindedTypeDeclaration\" title=\"Elara.AST.Kinded\">KindedTypeDeclaration</a>)]","name":"infer","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:infer"},{"display_html":"<a href=\"#v:inferKind\">inferKind</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; [<a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> <a href=\"Elara-Data-Kind.html#t:TypeVar\" title=\"Elara.Data.Kind\">TypeVar</a>] -&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedTypeDeclaration\" title=\"Elara.AST.Shunted\">ShuntedTypeDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>, <a href=\"Elara-AST-Kinded.html#t:KindedTypeDeclaration\" title=\"Elara.AST.Kinded\">KindedTypeDeclaration</a>)","name":"inferKind","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:inferKind"},{"display_html":"<a href=\"#v:inferTypeKind\">inferTypeKind</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedType\" title=\"Elara.AST.Shunted\">ShuntedType</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Kinded.html#t:KindedType\" title=\"Elara.AST.Kinded\">KindedType</a>","name":"inferTypeKind","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:inferTypeKind"},{"display_html":"<a href=\"#v:lookupKindVarInSubstitution\">lookupKindVarInSubstitution</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>","name":"lookupKindVarInSubstitution","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:lookupKindVarInSubstitution"},{"display_html":"<a href=\"#v:lookupNameKindVar\">lookupNameKindVar</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>","name":"lookupNameKindVar","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:lookupNameKindVar"},{"display_html":"<a href=\"#v:lookupVarKindVar\">lookupVarKindVar</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Elara-Data-Kind.html#t:TypeVar\" title=\"Elara.Data.Kind\">TypeVar</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>","name":"lookupVarKindVar","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:lookupVarKindVar"},{"display_html":"<a href=\"#v:lookupKindVarMaybe\">lookupKindVarMaybe</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Prelude.html#t:Either\" title=\"Prelude\">Either</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a>) <a href=\"Elara-Data-Kind.html#t:TypeVar\" title=\"Elara.Data.Kind\">TypeVar</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>)","name":"lookupKindVarMaybe","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:lookupKindVarMaybe"},{"display_html":"<a href=\"#v:newEqualityConstraint\">newEqualityConstraint</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> -&gt; <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"newEqualityConstraint","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:newEqualityConstraint"},{"display_html":"<a href=\"#v:elaborateType\">elaborateType</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedType\" title=\"Elara.AST.Shunted\">ShuntedType</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Kinded.html#t:MidKindedType\" title=\"Elara.AST.Kinded\">MidKindedType</a>","name":"elaborateType","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:elaborateType"},{"display_html":"<a href=\"#v:solveType\">solveType</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Elara-AST-Kinded.html#t:MidKindedType\" title=\"Elara.AST.Kinded\">MidKindedType</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Kinded.html#t:KindedType\" title=\"Elara.AST.Kinded\">KindedType</a>","name":"solveType","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:solveType"},{"display_html":"<a href=\"#v:getAnn\">getAnn</a> :: <a href=\"Elara-AST-Kinded.html#t:KindedType\" title=\"Elara.AST.Kinded\">KindedType</a> -&gt; <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>","name":"getAnn","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:getAnn"},{"display_html":"<a href=\"#v:getAnn-39-\">getAnn'</a> :: <a href=\"Elara-AST-Kinded.html#t:MidKindedType\" title=\"Elara.AST.Kinded\">MidKindedType</a> -&gt; <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>","name":"getAnn'","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:getAnn-39-"},{"display_html":"<a href=\"#v:solveConstraints\">solveConstraints</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"solveConstraints","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:solveConstraints"},{"display_html":"<a href=\"#v:instantiate\">instantiate</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> -&gt; [<a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>] -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>","name":"instantiate","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:instantiate"},{"display_html":"<a href=\"#v:replaceKindVarWithFreshKindVar\">replaceKindVarWithFreshKindVar</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r =&gt; <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> -&gt; <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a>","name":"replaceKindVarWithFreshKindVar","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:replaceKindVarWithFreshKindVar"},{"display_html":"<a href=\"#v:replaceInState\">replaceInState</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a> -&gt; <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"replaceInState","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:replaceInState"},{"display_html":"<a href=\"#v:occursCheck\">occursCheck</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Data-Kind-Infer.html#t:KindInfer\" title=\"Elara.Data.Kind.Infer\">KindInfer</a> r =&gt; <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a> -&gt; <a href=\"Elara-Data-Kind.html#t:ElaraKind\" title=\"Elara.Data.Kind\">ElaraKind</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"occursCheck","module":"Elara.Data.Kind.Infer","link":"elara/Elara-Data-Kind-Infer.html#v:occursCheck"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InferPipelineEffects\">InferPipelineEffects</a> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) = (<a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-TypeInfer-Monad.html#t:Infer\" title=\"Elara.TypeInfer.Monad\">Infer</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> r)","name":"InferPipelineEffects","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#t:InferPipelineEffects"},{"display_html":"<a href=\"#v:runGetTypeCheckedModuleQuery\">runGetTypeCheckedModuleQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>)","name":"runGetTypeCheckedModuleQuery","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:runGetTypeCheckedModuleQuery"},{"display_html":"<a href=\"#v:runTypeOfQuery\">runTypeOfQuery</a> :: loc <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> =&gt; <a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvKey\" title=\"Elara.TypeInfer.Environment\">TypeEnvKey</a> loc -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> loc)","name":"runTypeOfQuery","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:runTypeOfQuery"},{"display_html":"<a href=\"#v:runKindOfQuery\">runKindOfQuery</a> :: <span class=\"keyword\">forall</span> (r :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]). <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:TypeName\" title=\"Elara.AST.Name\">TypeName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': r)) (<a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> <a href=\"Elara-Data-Kind.html#t:KindVar\" title=\"Elara.Data.Kind\">KindVar</a>)","name":"runKindOfQuery","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:runKindOfQuery"},{"display_html":"<a href=\"#v:seedConstructorsFor\">seedConstructorsFor</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"seedConstructorsFor","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:seedConstructorsFor"},{"display_html":"<a href=\"#v:runInferEffects\">runInferEffects</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]) a loc. (<a href=\"Elara-Data-Pretty.html#t:Pretty\" title=\"Elara.Data.Pretty\">Pretty</a> loc, <a href=\"Elara-Query-Effects.html#t:QueryEffects\" title=\"Elara.Query.Effects\">QueryEffects</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:Eq\" title=\"Prelude\">Eq</a> loc, loc <a href=\"Prelude.html#t:-126-\" title=\"Prelude\">~</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) =&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-TypeInfer-Monad.html#t:InferEffectsCons\" title=\"Elara.TypeInfer.Monad\">InferEffectsCons</a> loc (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> loc) ': (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> ': (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> ': r)))) a -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (a, <a href=\"Elara-TypeInfer-Type.html#t:Constraint\" title=\"Elara.TypeInfer.Type\">Constraint</a> loc)","name":"runInferEffects","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:runInferEffects"},{"display_html":"<a href=\"#v:runInferSCCQuery\">runInferSCCQuery</a> :: <span class=\"keyword\">forall</span> (r :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]). <a href=\"Elara-SCC-Type.html#t:SCCKey\" title=\"Elara.SCC.Type\">SCCKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': r)) (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) (<a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>))","name":"runInferSCCQuery","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:runInferSCCQuery"},{"display_html":"<a href=\"#v:seedSCC\">seedSCC</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"seedSCC","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:seedSCC"},{"display_html":"<a href=\"#v:inferSCC\">inferSCC</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-Environment.html#t:InferError\" title=\"Elara.TypeInfer.Environment\">InferError</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Graph.html#t:SCC\" title=\"Data.Graph\">SCC</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Prelude.html#t:Map\" title=\"Prelude\">Map</a> (<a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a>) (<a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>))","name":"inferSCC","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:inferSCC"},{"display_html":"<a href=\"#v:runTypeCheckedExprQuery\">runTypeCheckedExprQuery</a> :: <span class=\"keyword\">forall</span> (r :: [(<a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]). <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> (<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> ': r)) <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a>","name":"runTypeCheckedExprQuery","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:runTypeCheckedExprQuery"},{"display_html":"<a href=\"#v:inferModule\">inferModule</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-TypeInfer.html#t:InferPipelineEffects\" title=\"Elara.TypeInfer\">InferPipelineEffects</a> r, <a href=\"Elara-TypeInfer-Monad.html#t:Infer\" title=\"Elara.TypeInfer.Monad\">Infer</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> r) =&gt; <a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Shunted\" title=\"Elara.AST.Select\">Shunted</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Module.html#t:Module\" title=\"Elara.AST.Module\">Module</a> '<a href=\"Elara-AST-Select.html#v:Typed\" title=\"Elara.AST.Select\">Typed</a>)","name":"inferModule","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:inferModule"},{"display_html":"<a href=\"#v:seedDeclaration\">seedDeclaration</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Data-Kind-Infer.html#t:KindInferError\" title=\"Elara.Data.Kind.Infer\">KindInferError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-TypeInfer-Convert.html#t:TypeConvertError\" title=\"Elara.TypeInfer.Convert\">TypeConvertError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Data-Kind-Infer.html#t:InferState\" title=\"Elara.Data.Kind.Infer\">InferState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedDeclaration\" title=\"Elara.AST.Shunted\">ShuntedDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"seedDeclaration","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:seedDeclaration"},{"display_html":"<a href=\"#v:inferDeclarationScheme\">inferDeclarationScheme</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-Environment.html#t:InferError\" title=\"Elara.TypeInfer.Environment\">InferError</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedDeclaration\" title=\"Elara.AST.Shunted\">ShuntedDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"inferDeclarationScheme","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:inferDeclarationScheme"},{"display_html":"<a href=\"#v:inferDeclaration\">inferDeclaration</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"Elara-TypeInfer.html#t:InferPipelineEffects\" title=\"Elara.TypeInfer\">InferPipelineEffects</a> r, <a href=\"Elara-TypeInfer-Monad.html#t:Infer\" title=\"Elara.TypeInfer.Monad\">Infer</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> r) =&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedDeclaration\" title=\"Elara.AST.Shunted\">ShuntedDeclaration</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-AST-Typed.html#t:TypedDeclaration\" title=\"Elara.AST.Typed\">TypedDeclaration</a>","name":"inferDeclaration","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:inferDeclaration"},{"display_html":"<a href=\"#v:createTypeVar\">createTypeVar</a> :: <a href=\"Elara-AST-Region.html#t:Located\" title=\"Elara.AST.Region\">Located</a> (<a href=\"Elara-Data-Unique.html#t:Unique\" title=\"Elara.Data.Unique\">Unique</a> <a href=\"Elara-AST-Name.html#t:LowerAlphaName\" title=\"Elara.AST.Name\">LowerAlphaName</a>) -&gt; <a href=\"Elara-TypeInfer-Unique.html#t:UniqueTyVar\" title=\"Elara.TypeInfer.Unique\">UniqueTyVar</a>","name":"createTypeVar","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:createTypeVar"},{"display_html":"<a href=\"#v:inferValue\">inferValue</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-ConstraintGeneration.html#t:UnifyError\" title=\"Elara.TypeInfer.ConstraintGeneration\">UnifyError</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:TypeEnvironment\" title=\"Elara.TypeInfer.Environment\">TypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> (<a href=\"Elara-TypeInfer-Environment.html#t:LocalTypeEnvironment\" title=\"Elara.TypeInfer.Environment\">LocalTypeEnvironment</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> (<a href=\"Elara-TypeInfer-Environment.html#t:InferError\" title=\"Elara.TypeInfer.Environment\">InferError</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Error.html#t:SomeReportableError\" title=\"Elara.Error\">SomeReportableError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Error-Effect.html#t:DiagnosticWriter\" title=\"Elara.Error.Effect\">DiagnosticWriter</a> (<a href=\"Elara-Data-Pretty.html#t:Doc\" title=\"Elara.Data.Pretty\">Doc</a> <a href=\"Elara-Data-Pretty.html#t:AnsiStyle\" title=\"Elara.Data.Pretty\">AnsiStyle</a>) <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Data-Unique-Effect.html#t:UniqueGen\" title=\"Elara.Data.Unique.Effect\">UniqueGen</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-FileSystem.html#t:FileSystem\" title=\"Effectful.FileSystem\">FileSystem</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Rock-MemoE.html#t:Memoise\" title=\"Rock.MemoE\">Memoise</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-2.6.1.0/docs/Effectful-Concurrent-Chan-Strict.html#t:Concurrent\" title=\"Effectful.Concurrent.Chan.Strict\">Concurrent</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-AST-Name.html#t:Qualified\" title=\"Elara.AST.Name\">Qualified</a> <a href=\"Elara-AST-Name.html#t:VarName\" title=\"Elara.AST.Name\">VarName</a> -&gt; <a href=\"Elara-AST-Shunted.html#t:ShuntedExpr\" title=\"Elara.AST.Shunted\">ShuntedExpr</a> -&gt; <a href=\"Prelude.html#t:Maybe\" title=\"Prelude\">Maybe</a> (<a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a>, <a href=\"Elara-TypeInfer-Type.html#t:Polytype\" title=\"Elara.TypeInfer.Type\">Polytype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"inferValue","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:inferValue"},{"display_html":"<a href=\"#v:skolemise\">skolemise</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-TypeInfer-Type.html#t:Type\" title=\"Elara.TypeInfer.Type\">Type</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-TypeInfer-Type.html#t:Monotype\" title=\"Elara.TypeInfer.Type\">Monotype</a> <a href=\"Elara-AST-Region.html#t:SourceRegion\" title=\"Elara.AST.Region\">SourceRegion</a>)","name":"skolemise","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#v:skolemise"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SubstitutableExpr\">SubstitutableExpr</a> (loc :: k) = <a href=\"#v:SubstitutableExpr\">SubstitutableExpr</a> {<ul class=\"subs\"><li><a href=\"#v:getExpr\">getExpr</a> :: <a href=\"Elara-AST-Typed.html#t:TypedExpr\" title=\"Elara.AST.Typed\">TypedExpr</a></li></ul>}","name":"SubstitutableExpr SubstitutableExpr getExpr","module":"Elara.TypeInfer","link":"elara/Elara-TypeInfer.html#t:SubstitutableExpr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TypeCheckError\">TypeCheckError</a><ul class=\"subs\"><li>= <a href=\"#v:UnknownVariable\">UnknownVariable</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> (<a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> (<a href=\"Elara-AST-VarRef.html#t:UnlocatedVarRef\" title=\"Elara.AST.VarRef\">UnlocatedVarRef</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>))</li><li>| <a href=\"#v:CoreTypeMismatch\">CoreTypeMismatch</a> { <ul class=\"subs\"><li><a href=\"#v:expected\">expected</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li><a href=\"#v:actual\">actual</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li><a href=\"#v:source\">source</a> :: (<a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>, <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>)</li><li><a href=\"#v:errorCallStack\">errorCallStack</a> :: <a href=\"Prelude.html#t:CallStack\" title=\"Prelude\">CallStack</a></li></ul> }</li><li>| <a href=\"#v:CoreTypeMismatchIncompleteExpected\">CoreTypeMismatchIncompleteExpected</a> { <ul class=\"subs\"><li><a href=\"#v:incompleteExpected\">incompleteExpected</a> :: <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a></li><li><a href=\"#v:actual\">actual</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li><a href=\"#v:source\">source</a> :: (<a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>, <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>)</li></ul> }</li><li>| <a href=\"#v:UnificationError\">UnificationError</a> <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a></li><li>| <a href=\"#v:InfiniteType\">InfiniteType</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a></li><li>| <a href=\"#v:OccursCheck\">OccursCheck</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a></li><li>| <a href=\"#v:PatternMatchMissingBinders\">PatternMatchMissingBinders</a> { <ul class=\"subs\"><li><a href=\"#v:alt\">alt</a> :: <a href=\"Elara-Core.html#t:AltCon\" title=\"Elara.Core\">AltCon</a></li><li><a href=\"#v:altType\">altType</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a></li><li><a href=\"#v:providedBinders\">providedBinders</a> :: [<a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>]</li><li><a href=\"#v:expr\">expr</a> :: <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a></li></ul> }</li></ul>","name":"TypeCheckError CoreTypeMismatch CoreTypeMismatchIncompleteExpected InfiniteType OccursCheck PatternMatchMissingBinders UnificationError UnknownVariable actual alt altType errorCallStack expected expr incompleteExpected providedBinders source","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#t:TypeCheckError"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:TcState\">TcState</a> = <a href=\"#v:TcState\">TcState</a> {<ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"Prelude.html#t:Set\" title=\"Prelude\">Set</a> (<a href=\"Elara-AST-VarRef.html#t:UnlocatedVarRef\" title=\"Elara.AST.VarRef\">UnlocatedVarRef</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a>)</li></ul>}","name":"TcState TcState scope","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#t:TcState"},{"display_html":"<a href=\"#v:addToScope\">addToScope</a> :: <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core-TypeCheck.html#t:TcState\" title=\"Elara.Core.TypeCheck\">TcState</a> -&gt; <a href=\"Elara-Core-TypeCheck.html#t:TcState\" title=\"Elara.Core.TypeCheck\">TcState</a>","name":"addToScope","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:addToScope"},{"display_html":"<a href=\"#v:isInScope\">isInScope</a> :: <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core-TypeCheck.html#t:TcState\" title=\"Elara.Core.TypeCheck\">TcState</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"isInScope","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:isInScope"},{"display_html":"<a href=\"#v:typeCheckCoreModule\">typeCheckCoreModule</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Core-TypeCheck.html#t:TypeCheckError\" title=\"Elara.Core.TypeCheck\">TypeCheckError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r ()","name":"typeCheckCoreModule","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:typeCheckCoreModule"},{"display_html":"<a href=\"#v:varType\">varType</a> :: <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"varType","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:varType"},{"display_html":"<a href=\"#v:typeCheck\">typeCheck</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Core-TypeCheck.html#t:TypeCheckError\" title=\"Elara.Core.TypeCheck\">TypeCheckError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Core-TypeCheck.html#t:TcState\" title=\"Elara.Core.TypeCheck\">TcState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>) =&gt; <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"typeCheck","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:typeCheck"},{"display_html":"<a href=\"#v:typeCheckC\">typeCheckC</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Core-TypeCheck.html#t:TypeCheckError\" title=\"Elara.Core.TypeCheck\">TypeCheckError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Core-TypeCheck.html#t:TcState\" title=\"Elara.Core.TypeCheck\">TcState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a>) =&gt; <a href=\"Elara-Core-ANF.html#t:CExpr\" title=\"Elara.Core.ANF\">CExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"typeCheckC","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:typeCheckC"},{"display_html":"<a href=\"#v:typeCheckLit\">typeCheckLit</a> :: <a href=\"Elara-Core.html#t:Literal\" title=\"Elara.Core\">Literal</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"typeCheckLit","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:typeCheckLit"},{"display_html":"<a href=\"#v:typeCheckA\">typeCheckA</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). (<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-Error-Static.html#t:Error\" title=\"Effectful.Error.Static\">Error</a> <a href=\"Elara-Core-TypeCheck.html#t:TypeCheckError\" title=\"Elara.Core.TypeCheck\">TypeCheckError</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful-State-Static-Local.html#t:State\" title=\"Effectful.State.Static.Local\">State</a> <a href=\"Elara-Core-TypeCheck.html#t:TcState\" title=\"Elara.Core.TypeCheck\">TcState</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r, <a href=\"Elara-Logging.html#t:StructuredDebug\" title=\"Elara.Logging\">StructuredDebug</a> <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t::-62-\" title=\"Effectful\">:&gt;</a> r) =&gt; <a href=\"Elara-Core-ANF.html#t:AExpr\" title=\"Elara.Core.ANF\">AExpr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"typeCheckA","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:typeCheckA"},{"display_html":"<a href=\"#v:equalUnderSubst\">equalUnderSubst</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"equalUnderSubst","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:equalUnderSubst"},{"display_html":"<a href=\"#v:equalUnderSubst-39-\">equalUnderSubst'</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Prelude.html#t:Bool\" title=\"Prelude\">Bool</a>","name":"equalUnderSubst'","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:equalUnderSubst-39-"},{"display_html":"<a href=\"#v:generalize\">generalize</a> :: <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a> -&gt; <a href=\"Elara-Core.html#t:Type\" title=\"Elara.Core\">Type</a>","name":"generalize","module":"Elara.Core.TypeCheck","link":"elara/Elara-Core-TypeCheck.html#v:generalize"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CoreExprPass\">CoreExprPass</a> = <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"CoreExprPass","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#t:CoreExprPass"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:Infix\">Infix</a> :: <a href=\"Prelude.html#t:NonEmpty\" title=\"Prelude\">NonEmpty</a> <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Prelude.html#t:Text\" title=\"Prelude\">Text</a> -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a> -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"Infix","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:Infix"},{"display_html":"<a href=\"#v:constantFold\">constantFold</a> :: <a href=\"Elara-CoreToCore.html#t:CoreExprPass\" title=\"Elara.CoreToCore\">CoreExprPass</a>","name":"constantFold","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:constantFold"},{"display_html":"<a href=\"#v:betaReduce\">betaReduce</a> :: <a href=\"Elara-CoreToCore.html#t:CoreExprPass\" title=\"Elara.CoreToCore\">CoreExprPass</a>","name":"betaReduce","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:betaReduce"},{"display_html":"<a href=\"#v:uselessLetInline\">uselessLetInline</a> :: <a href=\"Elara-CoreToCore.html#t:CoreExprPass\" title=\"Elara.CoreToCore\">CoreExprPass</a>","name":"uselessLetInline","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:uselessLetInline"},{"display_html":"<a href=\"#v:pipeInline\">pipeInline</a> :: <a href=\"Elara-CoreToCore.html#t:CoreExprPass\" title=\"Elara.CoreToCore\">CoreExprPass</a>","name":"pipeInline","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:pipeInline"},{"display_html":"<a href=\"#v:subst\">subst</a> :: <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> -&gt; <a href=\"Elara-Core.html#t:CoreExpr\" title=\"Elara.Core\">CoreExpr</a>","name":"subst","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:subst"},{"display_html":"<a href=\"#v:coreToCoreExpr\">coreToCoreExpr</a> :: <a href=\"Elara-CoreToCore.html#t:CoreExprPass\" title=\"Elara.CoreToCore\">CoreExprPass</a>","name":"coreToCoreExpr","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:coreToCoreExpr"},{"display_html":"<a href=\"#v:fullCoreToCoreExpr\">fullCoreToCoreExpr</a> :: <a href=\"Elara-CoreToCore.html#t:CoreExprPass\" title=\"Elara.CoreToCore\">CoreExprPass</a>","name":"fullCoreToCoreExpr","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:fullCoreToCoreExpr"},{"display_html":"<a href=\"#v:coreToCore\">coreToCore</a> :: <a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a> -&gt; <a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>","name":"coreToCore","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:coreToCore"},{"display_html":"<a href=\"#v:runGetOptimisedCoreModuleQuery\">runGetOptimisedCoreModuleQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>)","name":"runGetOptimisedCoreModuleQuery","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:runGetOptimisedCoreModuleQuery"},{"display_html":"<a href=\"#v:runGetANFCoreModuleQuery\">runGetANFCoreModuleQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-ANF.html#t:TopLevelBind\" title=\"Elara.Core.ANF\">TopLevelBind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>))","name":"runGetANFCoreModuleQuery","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:runGetANFCoreModuleQuery"},{"display_html":"<a href=\"#v:runGetFinalisedCoreModuleQuery\">runGetFinalisedCoreModuleQuery</a> :: <a href=\"Elara-AST-Name.html#t:ModuleName\" title=\"Elara.AST.Name\">ModuleName</a> -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> (<a href=\"Elara-Query-Effects.html#t:ConsQueryEffects\" title=\"Elara.Query.Effects\">ConsQueryEffects</a> '[<a href=\"Rock.html#t:Rock\" title=\"Rock\">Rock</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>]) (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> <a href=\"Elara-Core.html#t:CoreBind\" title=\"Elara.Core\">CoreBind</a>)","name":"runGetFinalisedCoreModuleQuery","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:runGetFinalisedCoreModuleQuery"},{"display_html":"<a href=\"#v:moduleToANF\">moduleToANF</a> :: <span class=\"keyword\">forall</span> (r :: [<a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Effect\" title=\"Effectful\">Effect</a>]). <a href=\"Elara-Core-ToANF.html#t:ToANF\" title=\"Elara.Core.ToANF\">ToANF</a> r =&gt; <a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a>) -&gt; <a href=\"https://hackage.haskell.org/package/effectful-core-2.5.1.0/docs/Effectful.html#t:Eff\" title=\"Effectful\">Eff</a> r (<a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-ANF.html#t:TopLevelBind\" title=\"Elara.Core.ANF\">TopLevelBind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a>))","name":"moduleToANF","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:moduleToANF"},{"display_html":"<a href=\"#v:unANF\">unANF</a> :: <a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core-ANF.html#t:Expr\" title=\"Elara.Core.ANF\">Expr</a>) -&gt; <a href=\"Elara-Core-Module.html#t:CoreModule\" title=\"Elara.Core.Module\">CoreModule</a> (<a href=\"Elara-Core-Generic.html#t:Bind\" title=\"Elara.Core.Generic\">Bind</a> <a href=\"Elara-Core.html#t:Var\" title=\"Elara.Core\">Var</a> <a href=\"Elara-Core.html#t:Expr\" title=\"Elara.Core\">Expr</a>)","name":"unANF","module":"Elara.CoreToCore","link":"elara/Elara-CoreToCore.html#v:unANF"},{"display_html":"<a href=\"#v:rules\">rules</a> :: <a href=\"Prelude.html#t:HasCallStack\" title=\"Prelude\">HasCallStack</a> =&gt; <a href=\"Elara-Settings.html#t:CompilerSettings\" title=\"Elara.Settings\">CompilerSettings</a> -&gt; <a href=\"Rock.html#t:Rules\" title=\"Rock\">Rules</a> <a href=\"Elara-Query.html#t:Query\" title=\"Elara.Query\">Query</a>","name":"rules","module":"Elara.Rules","link":"elara/Elara-Rules.html#v:rules"}]